[
  {
    "id": "develop-interoperability-intro-to-xcm",
    "title": "Introduction to XCM",
    "slug": "develop-interoperability-intro-to-xcm",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-intro-to-xcm.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/intro-to-xcm/",
    "preview": "Polkadot’s unique value lies in its ability to enable interoperability between parachains and other blockchain systems. At the core of this capability is XCM (Cross-Consensus Messaging)—a flexible messaging format that facilitates communication and collaboration between independent consensus systems.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Messaging Format",
        "anchor": "messaging-format"
      },
      {
        "depth": 2,
        "title": "The Four Principles of XCM",
        "anchor": "the-four-principles-of-xcm"
      },
      {
        "depth": 2,
        "title": "The XCM Tech Stack",
        "anchor": "the-xcm-tech-stack"
      },
      {
        "depth": 2,
        "title": "Core Functionalities of XCM",
        "anchor": "core-functionalities-of-xcm"
      },
      {
        "depth": 2,
        "title": "XCM Example",
        "anchor": "xcm-example"
      },
      {
        "depth": 2,
        "title": "Overview",
        "anchor": "overview"
      }
    ],
    "stats": {
      "chars": 7412,
      "words": 976,
      "headings": 7,
      "estimated_token_count_total": 1509
    },
    "hash": "sha256:c9de69abad81ee6e5cd9b395eed71f918c378d87c5503527e73f959efa8e8f17",
    "last_modified": "2025-09-17T14:52:45+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-send-messages",
    "title": "Send XCM Messages",
    "slug": "develop-interoperability-send-messages",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-send-messages.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/send-messages/",
    "preview": "One of the core FRAME pallets that enables parachains to engage in cross-chain communication using the Cross-Consensus Message (XCM) format is [`pallet-xcm`](https://paritytech.github.io/polkadot-sdk/master/pallet_xcm/pallet/index.html){target=\\_blank}. It facilitates the sending, execution, and management of XCM messages, thereby allowing parachains to interact with other chains within the ecosystem. Additionally, `pallet-xcm`, also referred to as the XCM pallet, supports essential operations l",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "XCM Frame Pallet Overview",
        "anchor": "xcm-frame-pallet-overview"
      },
      {
        "depth": 3,
        "title": "Key Roles of the XCM Pallet",
        "anchor": "key-roles-of-the-xcm-pallet"
      },
      {
        "depth": 2,
        "title": "Primary Extrinsics of the XCM Pallet",
        "anchor": "primary-extrinsics-of-the-xcm-pallet"
      },
      {
        "depth": 3,
        "title": "Execute",
        "anchor": "execute"
      },
      {
        "depth": 3,
        "title": "Send",
        "anchor": "send"
      },
      {
        "depth": 2,
        "title": "XCM Router",
        "anchor": "xcm-router"
      }
    ],
    "stats": {
      "chars": 7225,
      "words": 990,
      "headings": 7,
      "estimated_token_count_total": 1656
    },
    "hash": "sha256:660b44a94d7d8a4fd349c3c1b34b290d71284f1b88a5b0bafd1fe656472bc378",
    "last_modified": "2025-09-17T14:52:46+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-test-and-debug",
    "title": "Testing and Debugging",
    "slug": "develop-interoperability-test-and-debug",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-test-and-debug.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/test-and-debug/",
    "preview": "Cross-Consensus Messaging (XCM) is a core feature of the Polkadot ecosystem, enabling communication between parachains, relay chains, and system chains. To ensure the reliability of XCM-powered blockchains, thorough testing and debugging are essential before production deployment.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "XCM Emulator",
        "anchor": "xcm-emulator"
      },
      {
        "depth": 3,
        "title": "Advantages and Limitations",
        "anchor": "advantages-and-limitations"
      },
      {
        "depth": 3,
        "title": "How Does It Work?",
        "anchor": "how-does-it-work"
      }
    ],
    "stats": {
      "chars": 7439,
      "words": 829,
      "headings": 4,
      "estimated_token_count_total": 1477
    },
    "hash": "sha256:71e2de53836732187a6eb7f379b3cc55e8c19516ab0ecf241af15678d6743856",
    "last_modified": "2025-09-17T14:52:46+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-versions-v5-asset-claimer",
    "title": "Asset claimer",
    "slug": "develop-interoperability-versions-v5-asset-claimer",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-versions-v5-asset-claimer.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/versions/v5/asset-claimer/",
    "preview": "XCMv5 introduces the [`AssetClaimer`](https://paritytech.github.io/polkadot-sdk/master/staging_xcm/v5/enum.Hint.html#variant.AssetClaimer){target=\\_blank} execution hint through [`SetHints`](https://paritytech.github.io/polkadot-sdk/master/staging_xcm/v5/enum.Instruction.html#variant.SetHints){target=\\_blank}, which significantly simplifies the process of recovering trapped assets when XCM execution fails.",
    "outline": [
      {
        "depth": 2,
        "title": "The problem before v5",
        "anchor": "the-problem-before-v5"
      },
      {
        "depth": 2,
        "title": "The V5 Solution: `AssetClaimer` Hint",
        "anchor": "the-v5-solution-assetclaimer-hint"
      },
      {
        "depth": 2,
        "title": "How it Improves the Situation",
        "anchor": "how-it-improves-the-situation"
      },
      {
        "depth": 2,
        "title": "Key Improvements",
        "anchor": "key-improvements"
      },
      {
        "depth": 2,
        "title": "Best Practices",
        "anchor": "best-practices"
      },
      {
        "depth": 3,
        "title": "Set Hint Early",
        "anchor": "set-hint-early"
      },
      {
        "depth": 3,
        "title": "Use for Cross-Chain Transfers",
        "anchor": "use-for-cross-chain-transfers"
      },
      {
        "depth": 3,
        "title": "Consider Origin Preservation",
        "anchor": "consider-origin-preservation"
      },
      {
        "depth": 2,
        "title": "Migration Impact",
        "anchor": "migration-impact"
      }
    ],
    "stats": {
      "chars": 5080,
      "words": 582,
      "headings": 9,
      "estimated_token_count_total": 955
    },
    "hash": "sha256:72ee7394fd1308c111a8d548cb4dc63c6b9bc5b6e2bb556dd1baacbaedb92286",
    "last_modified": "2025-09-17T14:52:46+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-versions-v5-fees",
    "title": "Fees",
    "slug": "develop-interoperability-versions-v5-fees",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-versions-v5-fees.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/versions/v5/fees/",
    "preview": "XCM V5 introduces a new fee payment mechanism that simplifies and unifies the handling of fees across various XCM operations.",
    "outline": [
      {
        "depth": 2,
        "title": "Key Changes from V4",
        "anchor": "key-changes-from-v4"
      },
      {
        "depth": 3,
        "title": "BuyExecution vs. PayFees",
        "anchor": "buyexecution-vs-payfees"
      },
      {
        "depth": 3,
        "title": "PayFees Instruction",
        "anchor": "payfees-instruction"
      },
      {
        "depth": 2,
        "title": "Backward Compatibility",
        "anchor": "backward-compatibility"
      },
      {
        "depth": 2,
        "title": "Migration Considerations",
        "anchor": "migration-considerations"
      },
      {
        "depth": 2,
        "title": "`RefundSurplus` Instruction",
        "anchor": "refundsurplus-instruction"
      }
    ],
    "stats": {
      "chars": 4145,
      "words": 531,
      "headings": 6,
      "estimated_token_count_total": 876
    },
    "hash": "sha256:d6cb22337280a19bdf24981dcba98f337d48ee4f79ce7ac040466ef1cb4b330b",
    "last_modified": "2025-09-17T14:52:46+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-versions-v5-migration-guide",
    "title": "Migration Guide (XCM V4 → XCM V5)",
    "slug": "develop-interoperability-versions-v5-migration-guide",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-versions-v5-migration-guide.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/versions/v5/migration-guide/",
    "preview": "This guide helps migrate existing code that uses XCM from XCM V4 to XCM V5. Most XCM V4 code continues to work, but XCM V5 introduces powerful new patterns that improve flexibility and developer experience.",
    "outline": [
      {
        "depth": 2,
        "title": "When to migrate",
        "anchor": "when-to-migrate"
      },
      {
        "depth": 2,
        "title": "Key Changes",
        "anchor": "key-changes"
      },
      {
        "depth": 3,
        "title": "From Dedicated Extrinsics to Raw XCMs",
        "anchor": "from-dedicated-extrinsics-to-raw-xcms"
      },
      {
        "depth": 3,
        "title": "Unified Transfer Instructions",
        "anchor": "unified-transfer-instructions"
      },
      {
        "depth": 3,
        "title": "Predictable fee payment",
        "anchor": "predictable-fee-payment"
      },
      {
        "depth": 2,
        "title": "Migration Examples",
        "anchor": "migration-examples"
      },
      {
        "depth": 3,
        "title": "Simple Teleport",
        "anchor": "simple-teleport"
      },
      {
        "depth": 3,
        "title": "Example 2: Multi-Asset Transfer and a Transact",
        "anchor": "example-2-multi-asset-transfer-and-a-transact"
      },
      {
        "depth": 2,
        "title": "Breaking Changes to Watch Out For",
        "anchor": "breaking-changes-to-watch-out-for"
      },
      {
        "depth": 3,
        "title": "`fallback_max_weight` in `Transact`",
        "anchor": "fallback_max_weight-in-transact"
      },
      {
        "depth": 3,
        "title": "Network IDs Cleanup",
        "anchor": "network-ids-cleanup"
      },
      {
        "depth": 2,
        "title": "Next Steps",
        "anchor": "next-steps"
      }
    ],
    "stats": {
      "chars": 13459,
      "words": 1562,
      "headings": 12,
      "estimated_token_count_total": 2744
    },
    "hash": "sha256:1a2d34ccab19bd71263763bbc294977acf34f5800398f51398753594cfc7d7a6",
    "last_modified": "2025-09-17T14:52:46+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-versions-v5-transact",
    "title": "Transact",
    "slug": "develop-interoperability-versions-v5-transact",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-versions-v5-transact.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/versions/v5/transact/",
    "preview": "XCM V5 improves the [`Transact`](https://paritytech.github.io/polkadot-sdk/master/staging_xcm/v5/enum.Instruction.html#variant.Transact){target=\\_blank} instruction by introducing optional weight specification through the `fallback_max_weight` parameter, making cross-chain calls more flexible and reliable.",
    "outline": [
      {
        "depth": 2,
        "title": "Changes from V4",
        "anchor": "changes-from-v4"
      },
      {
        "depth": 3,
        "title": "Weight Parameter Evolution",
        "anchor": "weight-parameter-evolution"
      },
      {
        "depth": 2,
        "title": "The `fallback_max_weight` Parameter",
        "anchor": "the-fallback_max_weight-parameter"
      },
      {
        "depth": 3,
        "title": "When to Use `undefined`",
        "anchor": "when-to-use-undefined"
      },
      {
        "depth": 3,
        "title": "When to Specify Weight",
        "anchor": "when-to-specify-weight"
      },
      {
        "depth": 2,
        "title": "Benefits of the New Approach",
        "anchor": "benefits-of-the-new-approach"
      },
      {
        "depth": 3,
        "title": "Problems Solved",
        "anchor": "problems-solved"
      },
      {
        "depth": 3,
        "title": "XCM V5 Improvements",
        "anchor": "xcm-v5-improvements"
      },
      {
        "depth": 2,
        "title": "Migration Strategy",
        "anchor": "migration-strategy"
      },
      {
        "depth": 2,
        "title": "Fee Implications",
        "anchor": "fee-implications"
      }
    ],
    "stats": {
      "chars": 3637,
      "words": 370,
      "headings": 10,
      "estimated_token_count_total": 608
    },
    "hash": "sha256:7bba6105d99721373aa6f494627d20af97b1851c19703f26be26c32f0c83524b",
    "last_modified": "2025-09-17T14:52:46+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-versions-v5-transfers",
    "title": "Transfers",
    "slug": "develop-interoperability-versions-v5-transfers",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-versions-v5-transfers.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/versions/v5/transfers/",
    "preview": "XCM V5 introduces the unified [`InitiateTransfer`](https://paritytech.github.io/polkadot-sdk/master/staging_xcm/v5/enum.Instruction.html#variant.InitiateTransfer){target=\\_blank} instruction that consolidates and enhances cross-chain transfer capabilities.",
    "outline": [
      {
        "depth": 2,
        "title": "Changes from v4",
        "anchor": "changes-from-v4"
      },
      {
        "depth": 3,
        "title": "Instruction Consolidation",
        "anchor": "instruction-consolidation"
      },
      {
        "depth": 3,
        "title": "Enhanced Transfer Specification",
        "anchor": "enhanced-transfer-specification"
      },
      {
        "depth": 2,
        "title": "Key Enhancements",
        "anchor": "key-enhancements"
      },
      {
        "depth": 3,
        "title": "Mixed Transfer Types",
        "anchor": "mixed-transfer-types"
      },
      {
        "depth": 3,
        "title": "Origin Preservation",
        "anchor": "origin-preservation"
      },
      {
        "depth": 3,
        "title": "Integrated Fee Handling",
        "anchor": "integrated-fee-handling"
      },
      {
        "depth": 2,
        "title": "Backward Compatibility",
        "anchor": "backward-compatibility"
      },
      {
        "depth": 2,
        "title": "Migration Benefits",
        "anchor": "migration-benefits"
      }
    ],
    "stats": {
      "chars": 3243,
      "words": 336,
      "headings": 9,
      "estimated_token_count_total": 558
    },
    "hash": "sha256:b79fe56c9604712825bdf30d17667fd8f237fce9691be0d8d042d38691dbba7a",
    "last_modified": "2025-09-17T14:52:46+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-versions-v5-writing-xcm-programs",
    "title": "Writing XCM Programs",
    "slug": "develop-interoperability-versions-v5-writing-xcm-programs",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-versions-v5-writing-xcm-programs.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/versions/v5/writing-xcm-programs/",
    "preview": "XCM V5 shifts the recommended approach from using dedicated extrinsics to executing raw XCM programs directly.",
    "outline": [
      {
        "depth": 2,
        "title": "The Paradigm Shift",
        "anchor": "the-paradigm-shift"
      },
      {
        "depth": 3,
        "title": "Previous Approach",
        "anchor": "previous-approach"
      },
      {
        "depth": 3,
        "title": "XCM V5 Recommendation",
        "anchor": "xcm-v5-recommendation"
      },
      {
        "depth": 2,
        "title": "Execution Approach",
        "anchor": "execution-approach"
      },
      {
        "depth": 2,
        "title": "Benefits of Direct Execution",
        "anchor": "benefits-of-direct-execution"
      },
      {
        "depth": 2,
        "title": "Migration Considerations",
        "anchor": "migration-considerations"
      }
    ],
    "stats": {
      "chars": 1830,
      "words": 215,
      "headings": 6,
      "estimated_token_count_total": 348
    },
    "hash": "sha256:11cd8d428fa9c3e70490da5c63ce4597cd89ec46306d2bb49b016ced6aa68c3d",
    "last_modified": "2025-09-17T14:52:46+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-xcm-channels",
    "title": "XCM Channels",
    "slug": "develop-interoperability-xcm-channels",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-xcm-channels.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/xcm-channels/",
    "preview": "Polkadot is designed to enable interoperability between its connected parachains. At the core of this interoperability is the [Cross-Consensus Message Format (XCM)](/develop/interoperability/intro-to-xcm/){target=\\_blank}, a standard language that allows parachains to communicate and interact with each other.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Establishing HRMP Channels",
        "anchor": "establishing-hrmp-channels"
      },
      {
        "depth": 3,
        "title": "Relay Chain Parameters",
        "anchor": "relay-chain-parameters"
      },
      {
        "depth": 3,
        "title": "Dispatching Extrinsics",
        "anchor": "dispatching-extrinsics"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 6418,
      "words": 874,
      "headings": 5,
      "estimated_token_count_total": 1373
    },
    "hash": "sha256:fc85c27ad58c1ca6d0e1fcded4b8e2b6e3d0e888ed4aa99158e21a5e799f5e6b",
    "last_modified": "2025-09-17T14:52:46+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-xcm-config",
    "title": "XCM Config",
    "slug": "develop-interoperability-xcm-config",
    "categories": [
      "Reference",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-xcm-config.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/xcm-config/",
    "preview": "The [XCM executor](https://paritytech.github.io/polkadot-sdk/master/staging_xcm_executor/index.html){target=\\_blank} is a crucial component responsible for interpreting and executing XCM messages (XCMs) with Polkadot SDK-based chains. It processes and manages XCM instructions, ensuring they are executed correctly and in sequentially. Adhering to the [Cross-Consensus Virtual Machine (XCVM) specification](https://paritytech.github.io/xcm-docs/overview/xcvm.html#the-xcvm){target=\\_blank}, the XCM e",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "XCM Executor Configuration",
        "anchor": "xcm-executor-configuration"
      },
      {
        "depth": 2,
        "title": "Config Items",
        "anchor": "config-items"
      },
      {
        "depth": 3,
        "title": "Inner Config",
        "anchor": "inner-config"
      },
      {
        "depth": 3,
        "title": "Outer Config",
        "anchor": "outer-config"
      },
      {
        "depth": 2,
        "title": "Multiple Implementations",
        "anchor": "multiple-implementations"
      }
    ],
    "stats": {
      "chars": 21710,
      "words": 2457,
      "headings": 6,
      "estimated_token_count_total": 4979
    },
    "hash": "sha256:d3786d3aeabd22b02628218897364b4ae98554d002cd4ffb040e7913f1550c67",
    "last_modified": "2025-09-17T14:52:46+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-xcm-guides-from-apps-claiming-trapped-assets",
    "title": "Claiming Trapped Assets",
    "slug": "develop-interoperability-xcm-guides-from-apps-claiming-trapped-assets",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-xcm-guides-from-apps-claiming-trapped-assets.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/xcm-guides/from-apps/claiming-trapped-assets/",
    "preview": "When XCM execution fails or succeeds, leftover assets can become \"trapped\" on the destination chain. These assets are held by the system but are not accessible through normal means. XCM provides mechanisms to claim these trapped assets and recover them. This guide details the process and required steps to claim trapped assets.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Trapped Assets Causes",
        "anchor": "trapped-assets-causes"
      },
      {
        "depth": 2,
        "title": "The `ClaimAsset` Instruction",
        "anchor": "the-claimasset-instruction"
      },
      {
        "depth": 3,
        "title": "Parameters",
        "anchor": "parameters"
      },
      {
        "depth": 3,
        "title": "Basic Claiming Process",
        "anchor": "basic-claiming-process"
      },
      {
        "depth": 2,
        "title": "The `AssetClaimer` Hint",
        "anchor": "the-assetclaimer-hint"
      },
      {
        "depth": 2,
        "title": "Best practices",
        "anchor": "best-practices"
      }
    ],
    "stats": {
      "chars": 8821,
      "words": 958,
      "headings": 7,
      "estimated_token_count_total": 1781
    },
    "hash": "sha256:35c71a215558cd0642d363e4515ad240093995d42720e6495cd2994c859243e4",
    "last_modified": "2025-09-17T14:52:46+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-xcm-guides-from-apps-fees",
    "title": "Fees",
    "slug": "develop-interoperability-xcm-guides-from-apps-fees",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-xcm-guides-from-apps-fees.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/xcm-guides/from-apps/fees/",
    "preview": "In blockchain systems, fees are crucial. They prevent malicious actors from exhausting the results of the network, making such attacks expensive. The XCM subsystem has its own way of dealing with fees, flexible enough to allow feeless execution in situations that warrant it.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Execution",
        "anchor": "execution"
      },
      {
        "depth": 2,
        "title": "Delivery",
        "anchor": "delivery"
      },
      {
        "depth": 2,
        "title": "PayFees",
        "anchor": "payfees"
      },
      {
        "depth": 2,
        "title": "Estimations",
        "anchor": "estimations"
      }
    ],
    "stats": {
      "chars": 6304,
      "words": 926,
      "headings": 5,
      "estimated_token_count_total": 1449
    },
    "hash": "sha256:346061a3b851699f815068b42a949f7a2259f6ece083c97cf35538cb7bd4e547",
    "last_modified": "2025-09-17T14:52:46+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-xcm-guides-from-apps-transact",
    "title": "Transact",
    "slug": "develop-interoperability-xcm-guides-from-apps-transact",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-xcm-guides-from-apps-transact.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/xcm-guides/from-apps/transact/",
    "preview": "The [`Transact`](https://paritytech.github.io/polkadot-sdk/master/staging_xcm/v5/opaque/type.Instruction.html#variant.Transact){target=\\_blank} instruction enables arbitrary cross-chain execution of pallet calls or smart contract functions. It's one of the most powerful XCM instructions because it allows you to perform any operation that would normally be done locally on a remote chain. However, it requires knowing the implementation details of the destination chain.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Chain-Specific Knowledge Required",
        "anchor": "chain-specific-knowledge-required"
      },
      {
        "depth": 3,
        "title": "Required Knowledge",
        "anchor": "required-knowledge"
      },
      {
        "depth": 3,
        "title": "Examples of Chain-Specific Requirements",
        "anchor": "examples-of-chain-specific-requirements"
      },
      {
        "depth": 2,
        "title": "Origin Considerations",
        "anchor": "origin-considerations"
      }
    ],
    "stats": {
      "chars": 4444,
      "words": 562,
      "headings": 5,
      "estimated_token_count_total": 1082
    },
    "hash": "sha256:ec82957c768c2c07a272e7a28659c812b223df836e21372b1642f0bb249d7b39",
    "last_modified": "2025-09-17T14:52:46+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-xcm-guides-from-apps-transfers",
    "title": "Transfers",
    "slug": "develop-interoperability-xcm-guides-from-apps-transfers",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-xcm-guides-from-apps-transfers.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/xcm-guides/from-apps/transfers/",
    "preview": "The [`InitiateTransfer`](https://paritytech.github.io/polkadot-sdk/master/staging_xcm/v5/enum.Instruction.html#variant.InitiateTransfer){target=\\_blank} instruction is the primary mechanism for cross-chain transfers in XCM. It provides a unified interface for different types of transfers and brings additional functionalities not possible with previous instruction versions.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Transfer Types",
        "anchor": "transfer-types"
      },
      {
        "depth": 2,
        "title": "Remote Fees",
        "anchor": "remote-fees"
      },
      {
        "depth": 2,
        "title": "Origin Preservation",
        "anchor": "origin-preservation"
      }
    ],
    "stats": {
      "chars": 18928,
      "words": 2293,
      "headings": 4,
      "estimated_token_count_total": 4184
    },
    "hash": "sha256:ad45627514165a74fe5f89f2b8e452dad923d0bc41ab658a7d2dd8673656f260",
    "last_modified": "2025-09-17T14:52:46+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-xcm-runtime-apis",
    "title": "XCM Runtime APIs",
    "slug": "develop-interoperability-xcm-runtime-apis",
    "categories": [
      "Reference",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-xcm-runtime-apis.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/xcm-runtime-apis/",
    "preview": "Runtime APIs allow node-side code to extract information from the runtime state. While simple storage access retrieves stored values directly, runtime APIs enable arbitrary computation, making them a powerful tool for interacting with the chain's state.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Dry Run API",
        "anchor": "dry-run-api"
      },
      {
        "depth": 3,
        "title": "Dry Run Call",
        "anchor": "dry-run-call"
      },
      {
        "depth": 3,
        "title": "Dry Run XCM",
        "anchor": "dry-run-xcm"
      },
      {
        "depth": 2,
        "title": "XCM Payment API",
        "anchor": "xcm-payment-api"
      },
      {
        "depth": 3,
        "title": "Query Acceptable Payment Assets",
        "anchor": "query-acceptable-payment-assets"
      },
      {
        "depth": 3,
        "title": "Query XCM Weight",
        "anchor": "query-xcm-weight"
      },
      {
        "depth": 3,
        "title": "Query Weight to Asset Fee",
        "anchor": "query-weight-to-asset-fee"
      },
      {
        "depth": 3,
        "title": "Query Delivery Fees",
        "anchor": "query-delivery-fees"
      }
    ],
    "stats": {
      "chars": 45291,
      "words": 3823,
      "headings": 9,
      "estimated_token_count_total": 8555
    },
    "hash": "sha256:3d273c6be347276288816aa15c181584420a5217f820cba1aed06cb7cc53e88d",
    "last_modified": "2025-09-17T14:52:47+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-networks",
    "title": "Networks",
    "slug": "develop-networks",
    "categories": [
      "Basics",
      "Networks"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-networks.md",
    "html_url": "https://docs.polkadot.com/develop/networks/",
    "preview": "The Polkadot ecosystem consists of multiple networks designed to support different stages of blockchain development, from main networks to test networks. Each network serves a unique purpose, providing developers with flexible environments for building, testing, and deploying blockchain applications.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Production Networks",
        "anchor": "production-networks"
      },
      {
        "depth": 3,
        "title": "Polkadot",
        "anchor": "polkadot"
      },
      {
        "depth": 3,
        "title": "Kusama",
        "anchor": "kusama"
      },
      {
        "depth": 2,
        "title": "Test Networks",
        "anchor": "test-networks"
      },
      {
        "depth": 3,
        "title": "Westend",
        "anchor": "westend"
      },
      {
        "depth": 3,
        "title": "Paseo",
        "anchor": "paseo"
      },
      {
        "depth": 2,
        "title": "Additional Resources",
        "anchor": "additional-resources"
      }
    ],
    "stats": {
      "chars": 6097,
      "words": 664,
      "headings": 8,
      "estimated_token_count_total": 1520
    },
    "hash": "sha256:ed09ef7a6abe21204006186fd5791ada7597688fad67e30244dc449c51330309",
    "last_modified": "2025-09-17T14:52:47+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-customize-parachain-add-existing-pallets",
    "title": "Add a Pallet to the Runtime",
    "slug": "develop-parachains-customize-parachain-add-existing-pallets",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-customize-parachain-add-existing-pallets.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/customize-parachain/add-existing-pallets/",
    "preview": "The [Polkadot SDK Solochain Template](https://github.com/paritytech/polkadot-sdk-solochain-template){target=\\_blank} provides a functional runtime that includes default FRAME development modules (pallets) to help you get started with building a custom blockchain.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Configuring Runtime Dependencies",
        "anchor": "configuring-runtime-dependencies"
      },
      {
        "depth": 2,
        "title": "Dependencies for a New Pallet",
        "anchor": "dependencies-for-a-new-pallet"
      },
      {
        "depth": 2,
        "title": "Config Trait for Pallets",
        "anchor": "config-trait-for-pallets"
      },
      {
        "depth": 3,
        "title": "Utility Pallet Example",
        "anchor": "utility-pallet-example"
      },
      {
        "depth": 2,
        "title": "Parameter Configuration for Pallets",
        "anchor": "parameter-configuration-for-pallets"
      },
      {
        "depth": 2,
        "title": "Pallet Config in the Runtime",
        "anchor": "pallet-config-in-the-runtime"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 11942,
      "words": 1614,
      "headings": 8,
      "estimated_token_count_total": 2601
    },
    "hash": "sha256:bf32264b8ec9dc3024674f1b929916d21fe509e51f2749e3bac5f1b576a45852",
    "last_modified": "2025-09-17T14:52:47+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-customize-parachain-add-pallet-instances",
    "title": "Add Multiple Pallet Instances",
    "slug": "develop-parachains-customize-parachain-add-pallet-instances",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-customize-parachain-add-pallet-instances.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/customize-parachain/add-pallet-instances/",
    "preview": "Running multiple instances of the same pallet within a runtime is a powerful technique in Polkadot SDK development. This approach lets you reuse pallet functionality without reimplementing it, enabling diverse use cases with the same codebase. The Polkadot SDK provides developer-friendly traits for creating instantiable pallets and, in most cases, handles unique storage allocation for different instances automatically. This guide teaches you how to implement and configure multiple instances of a",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Understanding Instantiable Pallets",
        "anchor": "understanding-instantiable-pallets"
      },
      {
        "depth": 2,
        "title": "Adding Instantiable Pallets to Your Runtime",
        "anchor": "adding-instantiable-pallets-to-your-runtime"
      },
      {
        "depth": 3,
        "title": "Define Pallet Parameters",
        "anchor": "define-pallet-parameters"
      },
      {
        "depth": 3,
        "title": "Configure the Pallet Instances",
        "anchor": "configure-the-pallet-instances"
      },
      {
        "depth": 3,
        "title": "Add Pallet Instances to the Runtime",
        "anchor": "add-pallet-instances-to-the-runtime"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 6292,
      "words": 728,
      "headings": 7,
      "estimated_token_count_total": 1217
    },
    "hash": "sha256:b36cbc321ea4f0f9619bd10a1ffd9d788a8698da1408f0123ed2f8c1a995ec89",
    "last_modified": "2025-09-17T14:52:47+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-customize-parachain-add-smart-contract-functionality",
    "title": "Add Smart Contract Functionality",
    "slug": "develop-parachains-customize-parachain-add-smart-contract-functionality",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-customize-parachain-add-smart-contract-functionality.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/customize-parachain/add-smart-contract-functionality/",
    "preview": "When building your custom blockchain with the Polkadot SDK, you have the flexibility to add smart contract capabilities through specialized pallets. These pallets allow blockchain users to deploy and execute smart contracts, enhancing your chain's functionality and programmability.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "EVM Smart Contracts",
        "anchor": "evm-smart-contracts"
      },
      {
        "depth": 2,
        "title": "Wasm Smart Contracts",
        "anchor": "wasm-smart-contracts"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 3896,
      "words": 523,
      "headings": 4,
      "estimated_token_count_total": 905
    },
    "hash": "sha256:ad8e6d9c77d5451c5f4d17f8e6311b21e6ad24eae8780fd4c3ae6013744822cf",
    "last_modified": "2025-09-17T14:52:47+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-customize-parachain-make-custom-pallet",
    "title": "Make a Custom Pallet",
    "slug": "develop-parachains-customize-parachain-make-custom-pallet",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-customize-parachain-make-custom-pallet.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/customize-parachain/make-custom-pallet/",
    "preview": "FRAME provides a powerful set of tools for blockchain development, including a library of pre-built pallets. However, its true strength lies in the ability to create custom pallets tailored to your specific needs. This section will guide you through creating your own custom pallet, allowing you to extend your blockchain's functionality in unique ways.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Initial Setup",
        "anchor": "initial-setup"
      },
      {
        "depth": 2,
        "title": "Pallet Configuration",
        "anchor": "pallet-configuration"
      },
      {
        "depth": 2,
        "title": "Pallet Events",
        "anchor": "pallet-events"
      },
      {
        "depth": 2,
        "title": "Pallet Errors",
        "anchor": "pallet-errors"
      },
      {
        "depth": 2,
        "title": "Pallet Storage",
        "anchor": "pallet-storage"
      },
      {
        "depth": 2,
        "title": "Pallet Dispatchable Extrinsics",
        "anchor": "pallet-dispatchable-extrinsics"
      },
      {
        "depth": 2,
        "title": "Pallet Implementation Overview",
        "anchor": "pallet-implementation-overview"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 17404,
      "words": 2311,
      "headings": 9,
      "estimated_token_count_total": 4003
    },
    "hash": "sha256:7135b6b69abed4487aee0cade5904b62ecfc3ec53856cae71a42818556a92a3e",
    "last_modified": "2025-09-17T14:52:47+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-customize-parachain-overview",
    "title": "Overview of FRAME",
    "slug": "develop-parachains-customize-parachain-overview",
    "categories": [
      "Basics",
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-customize-parachain-overview.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/customize-parachain/overview/",
    "preview": "The runtime is the heart of any Polkadot SDK-based blockchain, handling the essential logic that governs state changes and transaction processing. With Polkadot SDK’s [FRAME (Framework for Runtime Aggregation of Modularized Entities)](/polkadot-protocol/glossary/#frame-framework-for-runtime-aggregation-of-modularized-entities){target=\\_bank}, developers gain access to a powerful suite of tools for building custom blockchain runtimes. FRAME offers a modular architecture, featuring reusable pallet",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "FRAME Runtime Architecture",
        "anchor": "frame-runtime-architecture"
      },
      {
        "depth": 3,
        "title": "Pallets",
        "anchor": "pallets"
      },
      {
        "depth": 3,
        "title": "Support Libraries",
        "anchor": "support-libraries"
      },
      {
        "depth": 2,
        "title": "Compose a Runtime with Pallets",
        "anchor": "compose-a-runtime-with-pallets"
      },
      {
        "depth": 2,
        "title": "Starting from Templates",
        "anchor": "starting-from-templates"
      },
      {
        "depth": 3,
        "title": "Solochain Templates",
        "anchor": "solochain-templates"
      },
      {
        "depth": 3,
        "title": "Parachain Templates",
        "anchor": "parachain-templates"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 9396,
      "words": 1262,
      "headings": 9,
      "estimated_token_count_total": 2006
    },
    "hash": "sha256:06e6be7081025af7ed27c05664886a2e1d1dd3352d0036641d167c53ca09907b",
    "last_modified": "2025-09-17T14:52:47+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-deployment-build-deterministic-runtime",
    "title": "Build a deterministic runtime",
    "slug": "develop-parachains-deployment-build-deterministic-runtime",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-deployment-build-deterministic-runtime.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/deployment/build-deterministic-runtime/",
    "preview": "By default, the Rust compiler produces optimized Wasm binaries. These binaries are suitable for working in an isolated environment, such as local development. However, the Wasm binaries the compiler builds by default aren't guaranteed to be deterministically reproducible. Each time the compiler generates the Wasm runtime, it might produce a slightly different Wasm byte code. This is problematic in a blockchain network where all nodes must use exactly the same raw chain specification file.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Tooling for Wasm Runtime",
        "anchor": "tooling-for-wasm-runtime"
      },
      {
        "depth": 2,
        "title": "Working with the Docker Container",
        "anchor": "working-with-the-docker-container"
      },
      {
        "depth": 2,
        "title": "Prepare the Environment",
        "anchor": "prepare-the-environment"
      },
      {
        "depth": 2,
        "title": "Start a Deterministic Build",
        "anchor": "start-a-deterministic-build"
      },
      {
        "depth": 2,
        "title": "Use srtool in GitHub Actions",
        "anchor": "use-srtool-in-github-actions"
      },
      {
        "depth": 2,
        "title": "Use the srtool Image via Docker Hub",
        "anchor": "use-the-srtool-image-via-docker-hub"
      },
      {
        "depth": 3,
        "title": "Naming Convention for Images",
        "anchor": "naming-convention-for-images"
      }
    ],
    "stats": {
      "chars": 8262,
      "words": 1225,
      "headings": 9,
      "estimated_token_count_total": 1936
    },
    "hash": "sha256:e3cb407504ea00cd721e29a51483b4d8a7c3eea78b3702648e6ad4cc1dbd4dc9",
    "last_modified": "2025-09-17T14:52:47+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-deployment-coretime-renewal",
    "title": "Coretime Renewal",
    "slug": "develop-parachains-deployment-coretime-renewal",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-deployment-coretime-renewal.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/deployment/coretime-renewal/",
    "preview": "Coretime can be purchased in bulk for a period of 28 days, providing access to Polkadot's shared security and interoperability for Polkadot parachains. The bulk purchase of coretime includes a rent-control mechanism that keeps future purchases within a predictable price range of the initial purchase. This allows cores to be renewed at a known price without competing against other participants in the open market.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Bulk Sale Phases",
        "anchor": "bulk-sale-phases"
      },
      {
        "depth": 2,
        "title": "Renewal Timing",
        "anchor": "renewal-timing"
      },
      {
        "depth": 2,
        "title": "Manual Renewal",
        "anchor": "manual-renewal"
      },
      {
        "depth": 2,
        "title": "Auto-Renewal",
        "anchor": "auto-renewal"
      },
      {
        "depth": 3,
        "title": "Set Up an HRMP Channel",
        "anchor": "set-up-an-hrmp-channel"
      },
      {
        "depth": 3,
        "title": "Fund Sovereign Account",
        "anchor": "fund-sovereign-account"
      },
      {
        "depth": 3,
        "title": "Auto-Renewal Configuration Extrinsics",
        "anchor": "auto-renewal-configuration-extrinsics"
      },
      {
        "depth": 3,
        "title": "Construct the Enable Auto-Renewal Extrinsic",
        "anchor": "construct-the-enable-auto-renewal-extrinsic"
      },
      {
        "depth": 3,
        "title": "Submit the XCM from Your Parachain",
        "anchor": "submit-the-xcm-from-your-parachain"
      }
    ],
    "stats": {
      "chars": 13915,
      "words": 1896,
      "headings": 10,
      "estimated_token_count_total": 3072
    },
    "hash": "sha256:ea36f84c753f4671c27d2d5ad1f785ddadb6b333a7436208dc9b61d5b079cf21",
    "last_modified": "2025-09-17T14:52:47+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-deployment-generate-chain-specs",
    "title": "Generate Chain Specs",
    "slug": "develop-parachains-deployment-generate-chain-specs",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-deployment-generate-chain-specs.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/deployment/generate-chain-specs/",
    "preview": "A chain specification collects information that describes a Polkadot SDK-based network. A chain specification is a crucial parameter when starting a node, providing the genesis configurations, bootnodes, and other parameters relating to that particular network. It identifies the network a blockchain node connects to, the other nodes it initially communicates with, and the initial state that nodes must agree on to produce blocks.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Node Settings Customization",
        "anchor": "node-settings-customization"
      },
      {
        "depth": 2,
        "title": "Genesis Configuration Customization",
        "anchor": "genesis-configuration-customization"
      },
      {
        "depth": 2,
        "title": "Declaring Storage Items for a Runtime",
        "anchor": "declaring-storage-items-for-a-runtime"
      },
      {
        "depth": 2,
        "title": "Chain Specification JSON Format",
        "anchor": "chain-specification-json-format"
      },
      {
        "depth": 2,
        "title": "Creating a Custom Chain Specification",
        "anchor": "creating-a-custom-chain-specification"
      },
      {
        "depth": 3,
        "title": "Plain Chain Specifications",
        "anchor": "plain-chain-specifications"
      },
      {
        "depth": 3,
        "title": "Raw Chain Specifications",
        "anchor": "raw-chain-specifications"
      },
      {
        "depth": 2,
        "title": "Generate Custom Keys for Your Collator",
        "anchor": "generate-custom-keys-for-your-collator"
      },
      {
        "depth": 3,
        "title": "Add Invulnerables",
        "anchor": "add-invulnerables"
      },
      {
        "depth": 3,
        "title": "Add Session Keys",
        "anchor": "add-session-keys"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 14574,
      "words": 1928,
      "headings": 12,
      "estimated_token_count_total": 3023
    },
    "hash": "sha256:1748a7daced9ff59b3086470b8859150a871f96e8b6f02418cc734e934940e03",
    "last_modified": "2025-09-17T14:52:47+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-deployment-manage-coretime",
    "title": "Manage Coretime",
    "slug": "develop-parachains-deployment-manage-coretime",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-deployment-manage-coretime.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/deployment/manage-coretime/",
    "preview": "Coretime management involves manipulating [bulk coretime](/develop/parachains/deployment/obtain-coretime/#bulk-coretime){target=\\_blank} regions to optimize resource allocation and usage. Regions represent allocated computational resources on cores and can be modified through various operations to meet different project requirements. This guide covers the essential operations for managing your coretime regions effectively.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Transfer",
        "anchor": "transfer"
      },
      {
        "depth": 2,
        "title": "Partition",
        "anchor": "partition"
      },
      {
        "depth": 2,
        "title": "Interlace",
        "anchor": "interlace"
      },
      {
        "depth": 2,
        "title": "Assign",
        "anchor": "assign"
      },
      {
        "depth": 2,
        "title": "Pool",
        "anchor": "pool"
      }
    ],
    "stats": {
      "chars": 5736,
      "words": 840,
      "headings": 6,
      "estimated_token_count_total": 1287
    },
    "hash": "sha256:9686bce57413e86675e88ef7a2ce1e1f70226d10c7df8125f3c2bc7f729fcedd",
    "last_modified": "2025-09-17T14:52:47+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-deployment-obtain-coretime",
    "title": "Obtain Coretime",
    "slug": "develop-parachains-deployment-obtain-coretime",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-deployment-obtain-coretime.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/deployment/obtain-coretime/",
    "preview": "Securing coretime is essential for operating a parachain on Polkadot. It provides your parachain with guaranteed computational resources and access to Polkadot's shared security model, ensuring your blockchain can process transactions, maintain its state, and interact securely with other parachains in the network. Without coretime, a parachain cannot participate in the ecosystem or leverage the relay chain's validator set for security.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Initial Setup Steps",
        "anchor": "initial-setup-steps"
      },
      {
        "depth": 2,
        "title": "Obtaining Coretime",
        "anchor": "obtaining-coretime"
      },
      {
        "depth": 3,
        "title": "Bulk Coretime",
        "anchor": "bulk-coretime"
      },
      {
        "depth": 3,
        "title": "On-demand Coretime",
        "anchor": "on-demand-coretime"
      }
    ],
    "stats": {
      "chars": 3713,
      "words": 489,
      "headings": 6,
      "estimated_token_count_total": 744
    },
    "hash": "sha256:358ed14147b96b47deb61df9a1ea0e1103a139ea5edb78c5d50a48d5a779b80d",
    "last_modified": "2025-09-17T14:52:47+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-install-polkadot-sdk",
    "title": "Install Polkadot SDK Dependencies",
    "slug": "develop-parachains-install-polkadot-sdk",
    "categories": [
      "Basics",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-install-polkadot-sdk.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/install-polkadot-sdk/",
    "preview": "This guide provides step-by-step instructions for installing the dependencies you need to work with the Polkadot SDK-based chains on macOS, Linux, and Windows. Follow the appropriate section for your operating system to ensure all necessary tools are installed and configured properly.",
    "outline": [
      {
        "depth": 2,
        "title": "macOS",
        "anchor": "macos"
      },
      {
        "depth": 3,
        "title": "Before You Begin",
        "anchor": "before-you-begin"
      },
      {
        "depth": 3,
        "title": "Install Required Packages and Rust",
        "anchor": "install-required-packages-and-rust"
      },
      {
        "depth": 2,
        "title": "Linux",
        "anchor": "linux"
      },
      {
        "depth": 3,
        "title": "Before You Begin {: #before-you-begin-linux }",
        "anchor": "before-you-begin-before-you-begin-linux"
      },
      {
        "depth": 3,
        "title": "Install Required Packages and Rust {: #install-required-packages-and-rust-linux }",
        "anchor": "install-required-packages-and-rust-install-required-packages-and-rust-linux"
      },
      {
        "depth": 2,
        "title": "Windows (WSL)",
        "anchor": "windows-wsl"
      },
      {
        "depth": 3,
        "title": "Before You Begin {: #before-you-begin-windows }",
        "anchor": "before-you-begin-before-you-begin-windows"
      },
      {
        "depth": 3,
        "title": "Set Up Windows Subsystem for Linux",
        "anchor": "set-up-windows-subsystem-for-linux"
      },
      {
        "depth": 3,
        "title": "Install Required Packages and Rust {: #install-required-packages-and-rust-windows }",
        "anchor": "install-required-packages-and-rust-install-required-packages-and-rust-windows"
      },
      {
        "depth": 2,
        "title": "Verifying Installation",
        "anchor": "verifying-installation"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 12748,
      "words": 1840,
      "headings": 12,
      "estimated_token_count_total": 2711
    },
    "hash": "sha256:19480a02d5aa9ba1c6b7e7767eae8595fb0b7289a878cc240f7166fdda35ceb1",
    "last_modified": "2025-09-17T14:52:47+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-intro-polkadot-sdk",
    "title": "Introduction to Polkadot SDK",
    "slug": "develop-parachains-intro-polkadot-sdk",
    "categories": [
      "Basics",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-intro-polkadot-sdk.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/intro-polkadot-sdk/",
    "preview": "The [Polkadot SDK](https://github.com/paritytech/polkadot-sdk/tree/polkadot-stable2506){target=\\_blank} is a powerful and versatile developer kit designed to facilitate building on the Polkadot network. It provides the necessary components for creating custom blockchains, parachains, generalized rollups, and more. Written in the Rust programming language, it puts security and robustness at the forefront of its design.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Polkadot SDK Overview",
        "anchor": "polkadot-sdk-overview"
      },
      {
        "depth": 3,
        "title": "Substrate",
        "anchor": "substrate"
      },
      {
        "depth": 3,
        "title": "FRAME",
        "anchor": "frame"
      },
      {
        "depth": 3,
        "title": "Cumulus",
        "anchor": "cumulus"
      },
      {
        "depth": 2,
        "title": "Why Use Polkadot SDK?",
        "anchor": "why-use-polkadot-sdk"
      },
      {
        "depth": 2,
        "title": "Create a Custom Blockchain Using the SDK",
        "anchor": "create-a-custom-blockchain-using-the-sdk"
      }
    ],
    "stats": {
      "chars": 8756,
      "words": 1155,
      "headings": 7,
      "estimated_token_count_total": 1890
    },
    "hash": "sha256:f2bd92d33316878cc45b3fe676c6a085b7c6991d7439b55c1049cf9aadfc576b",
    "last_modified": "2025-09-17T14:52:47+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-maintenance-configure-asynchronous-backing",
    "title": "Configure Asynchronous Backing",
    "slug": "develop-parachains-maintenance-configure-asynchronous-backing",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-maintenance-configure-asynchronous-backing.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/maintenance/configure-asynchronous-backing/",
    "preview": "This guide applies to parachain projects based on Cumulus that started in 2023 or earlier, where the backing process was synchronous, allowing parablocks to be built only on the latest relay chain block. In contrast, async backing will enable collators to build parablocks on older relay chain blocks and create pipelines of multiple pending parablocks. This parallel block generation increases efficiency and throughput.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisite",
        "anchor": "prerequisite"
      },
      {
        "depth": 2,
        "title": "Phase 1 - Update Parachain Runtime",
        "anchor": "phase-1-update-parachain-runtime"
      },
      {
        "depth": 2,
        "title": "Phase 2 - Update Parachain Nodes",
        "anchor": "phase-2-update-parachain-nodes"
      },
      {
        "depth": 2,
        "title": "Phase 3 - Activate Async Backing",
        "anchor": "phase-3-activate-async-backing"
      },
      {
        "depth": 2,
        "title": "Timing by Block Number",
        "anchor": "timing-by-block-number"
      }
    ],
    "stats": {
      "chars": 20328,
      "words": 2385,
      "headings": 6,
      "estimated_token_count_total": 4748
    },
    "hash": "sha256:792c8a4905667687605da13ae2f894a14e922893425299edf7121843221c9a28",
    "last_modified": "2025-09-17T14:52:47+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-maintenance-runtime-metrics-monitoring",
    "title": "Runtime Metrics and Monitoring",
    "slug": "develop-parachains-maintenance-runtime-metrics-monitoring",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-maintenance-runtime-metrics-monitoring.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/maintenance/runtime-metrics-monitoring/",
    "preview": "Maintaining a stable, secure, and efficient network requires continuous monitoring. Polkadot SDK-based nodes are equipped with built-in telemetry components that automatically collect and transmit detailed data about node performance in real-time. This telemetry system is a core feature of the Substrate framework, allowing for easy monitoring of network health without complex setup.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Runtime Metrics",
        "anchor": "runtime-metrics"
      },
      {
        "depth": 2,
        "title": "Visual Monitoring",
        "anchor": "visual-monitoring"
      },
      {
        "depth": 2,
        "title": "Displaying Network-Wide Statistics",
        "anchor": "displaying-network-wide-statistics"
      },
      {
        "depth": 2,
        "title": "Customizing Monitoring Tools",
        "anchor": "customizing-monitoring-tools"
      },
      {
        "depth": 3,
        "title": "On-Chain Activity",
        "anchor": "on-chain-activity"
      },
      {
        "depth": 2,
        "title": "Monitoring Tools",
        "anchor": "monitoring-tools"
      },
      {
        "depth": 3,
        "title": "Change the Telemetry Server",
        "anchor": "change-the-telemetry-server"
      }
    ],
    "stats": {
      "chars": 8458,
      "words": 1202,
      "headings": 8,
      "estimated_token_count_total": 1819
    },
    "hash": "sha256:b0c1535fa8e969a9bdeee426a5a35a42b4649121fb8ce6fd2b15fdeba35b5d5f",
    "last_modified": "2025-09-17T14:52:47+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-maintenance-runtime-upgrades",
    "title": "Runtime Upgrades",
    "slug": "develop-parachains-maintenance-runtime-upgrades",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-maintenance-runtime-upgrades.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/maintenance/runtime-upgrades/",
    "preview": "One of the defining features of Polkadot SDK-based blockchains is the ability to perform forkless runtime upgrades. Unlike traditional blockchains, which require hard forks and node coordination for upgrades, Polkadot networks enable seamless updates without network disruption.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "How Runtime Upgrades Work",
        "anchor": "how-runtime-upgrades-work"
      },
      {
        "depth": 3,
        "title": "Runtime Versioning",
        "anchor": "runtime-versioning"
      },
      {
        "depth": 3,
        "title": "Accessing the Runtime Version",
        "anchor": "accessing-the-runtime-version"
      },
      {
        "depth": 2,
        "title": "Storage Migrations",
        "anchor": "storage-migrations"
      }
    ],
    "stats": {
      "chars": 5838,
      "words": 811,
      "headings": 5,
      "estimated_token_count_total": 1162
    },
    "hash": "sha256:419364fe4f5bf69f610accf5e2cdcac38e3df857cdebf669dd8caee11346ac70",
    "last_modified": "2025-09-17T14:52:47+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-maintenance-storage-migrations",
    "title": "Storage Migrations",
    "slug": "develop-parachains-maintenance-storage-migrations",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-maintenance-storage-migrations.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/maintenance/storage-migrations/",
    "preview": "Storage migrations are a crucial part of the runtime upgrade process. They allow you to update the [storage items](https://paritytech.github.io/polkadot-sdk/master/frame_support/pallet_macros/attr.storage.html){target=\\_blank} of your blockchain, adapting to changes in the runtime. Whenever you change the encoding or data types used to represent data in storage, you'll need to provide a storage migration to ensure the runtime can correctly interpret the existing stored values in the new runtime",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Storage Migration Scenarios",
        "anchor": "storage-migration-scenarios"
      },
      {
        "depth": 2,
        "title": "Implement Storage Migrations",
        "anchor": "implement-storage-migrations"
      },
      {
        "depth": 3,
        "title": "Core Migration Function",
        "anchor": "core-migration-function"
      },
      {
        "depth": 3,
        "title": "Migration Testing Hooks",
        "anchor": "migration-testing-hooks"
      },
      {
        "depth": 3,
        "title": "Migration Structure",
        "anchor": "migration-structure"
      },
      {
        "depth": 3,
        "title": "Migration Organization",
        "anchor": "migration-organization"
      },
      {
        "depth": 3,
        "title": "Scheduling Migrations",
        "anchor": "scheduling-migrations"
      },
      {
        "depth": 2,
        "title": "Single-Block Migrations",
        "anchor": "single-block-migrations"
      },
      {
        "depth": 2,
        "title": "Multi Block Migrations",
        "anchor": "multi-block-migrations"
      }
    ],
    "stats": {
      "chars": 18000,
      "words": 2362,
      "headings": 10,
      "estimated_token_count_total": 4021
    },
    "hash": "sha256:bc7967d3664bce347bf2af45c524f97f45d42c1fe7070cda9ddad907b5b00b2a",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-maintenance-unlock-parachain",
    "title": "Unlock a Parachain",
    "slug": "develop-parachains-maintenance-unlock-parachain",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-maintenance-unlock-parachain.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/maintenance/unlock-parachain/",
    "preview": "Parachain locks are a critical security mechanism in the Polkadot ecosystem designed to maintain decentralization during the parachain lifecycle. These locks prevent potential centralization risks that could emerge during the early stages of parachain operation.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Check If the Parachain Is Locked",
        "anchor": "check-if-the-parachain-is-locked"
      },
      {
        "depth": 2,
        "title": "How to Unlock a Parachain",
        "anchor": "how-to-unlock-a-parachain"
      },
      {
        "depth": 3,
        "title": "Prepare the Unlock Call",
        "anchor": "prepare-the-unlock-call"
      },
      {
        "depth": 3,
        "title": "Fund the Sovereign Account",
        "anchor": "fund-the-sovereign-account"
      },
      {
        "depth": 3,
        "title": "Craft and Submit the XCM",
        "anchor": "craft-and-submit-the-xcm"
      }
    ],
    "stats": {
      "chars": 9223,
      "words": 1277,
      "headings": 6,
      "estimated_token_count_total": 2030
    },
    "hash": "sha256:f4964f894f7cd2fdfd699c017b4bd25cffc322b03a5a88a36c682cf952832ccc",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-testing-benchmarking",
    "title": "Benchmarking FRAME Pallets",
    "slug": "develop-parachains-testing-benchmarking",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-testing-benchmarking.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/testing/benchmarking/",
    "preview": "Benchmarking is a critical component of developing efficient and secure blockchain runtimes. In the Polkadot ecosystem, accurately benchmarking your custom pallets ensures that each extrinsic has a precise [weight](/polkadot-protocol/glossary/#weight){target=\\_blank}, representing its computational and storage demands. This process is vital for maintaining the blockchain's performance and preventing potential vulnerabilities, such as Denial of Service (DoS) attacks.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "The Case for Benchmarking",
        "anchor": "the-case-for-benchmarking"
      },
      {
        "depth": 3,
        "title": "Benchmarking and Weight",
        "anchor": "benchmarking-and-weight"
      },
      {
        "depth": 2,
        "title": "Benchmarking Process",
        "anchor": "benchmarking-process"
      },
      {
        "depth": 3,
        "title": "Prepare Your Environment",
        "anchor": "prepare-your-environment"
      },
      {
        "depth": 3,
        "title": "Write Benchmark Tests",
        "anchor": "write-benchmark-tests"
      },
      {
        "depth": 3,
        "title": "Add Benchmarks to Runtime",
        "anchor": "add-benchmarks-to-runtime"
      },
      {
        "depth": 3,
        "title": "Run Benchmarks",
        "anchor": "run-benchmarks"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 15187,
      "words": 1920,
      "headings": 9,
      "estimated_token_count_total": 3468
    },
    "hash": "sha256:9aeab17ca2ce56999e9ecb060a5285b7395dc55d4f20b7d6703ac0d687eb8a40",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-testing-mock-runtime",
    "title": "Mock Runtime for Pallet Testing",
    "slug": "develop-parachains-testing-mock-runtime",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-testing-mock-runtime.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/testing/mock-runtime/",
    "preview": "Testing is essential in Polkadot SDK development to ensure your blockchain operates as intended and effectively handles various potential scenarios. This guide walks you through setting up an environment to test pallets within the [runtime](/polkadot-protocol/glossary#runtime){target=_blank}, allowing you to evaluate how different pallets, their configurations, and system components interact to ensure reliable blockchain functionality.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Configuring a Mock Runtime",
        "anchor": "configuring-a-mock-runtime"
      },
      {
        "depth": 3,
        "title": "Testing Module",
        "anchor": "testing-module"
      },
      {
        "depth": 3,
        "title": "Genesis Storage",
        "anchor": "genesis-storage"
      },
      {
        "depth": 3,
        "title": "Pallet Configuration",
        "anchor": "pallet-configuration"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 7498,
      "words": 904,
      "headings": 6,
      "estimated_token_count_total": 1577
    },
    "hash": "sha256:ae485d81d8e03372c1f112dc8c1c19d2aef1e625f512071d39f2b7e210dfb26b",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-parachains-testing-pallet-testing",
    "title": "Pallet Testing",
    "slug": "develop-parachains-testing-pallet-testing",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-parachains-testing-pallet-testing.md",
    "html_url": "https://docs.polkadot.com/develop/parachains/testing/pallet-testing/",
    "preview": "Unit testing in the Polkadot SDK helps ensure that the functions provided by a pallet behave as expected. It also confirms that data and events associated with a pallet are processed correctly during interactions. The Polkadot SDK offers a set of APIs to create a test environment to simulate runtime and mock transaction execution for extrinsics and queries.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Writing Unit Tests",
        "anchor": "writing-unit-tests"
      },
      {
        "depth": 3,
        "title": "Test Initialization",
        "anchor": "test-initialization"
      },
      {
        "depth": 3,
        "title": "Function Call Testing",
        "anchor": "function-call-testing"
      },
      {
        "depth": 3,
        "title": "Storage Testing",
        "anchor": "storage-testing"
      },
      {
        "depth": 3,
        "title": "Event Testing",
        "anchor": "event-testing"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 6875,
      "words": 909,
      "headings": 7,
      "estimated_token_count_total": 1563
    },
    "hash": "sha256:c8c5f50c59b35c7eaff1b12446c705e675654953e163b3a5e140edc3ac08fb59",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-connect-to-kusama",
    "title": "Connect to Kusama",
    "slug": "develop-smart-contracts-connect-to-kusama",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-connect-to-kusama.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/connect-to-kusama/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Networks Details",
        "anchor": "networks-details"
      },
      {
        "depth": 2,
        "title": "Important Deployment Considerations",
        "anchor": "important-deployment-considerations"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 3592,
      "words": 474,
      "headings": 3,
      "estimated_token_count_total": 508
    },
    "hash": "sha256:68ea3fe8d3652925190cee0b4bc7dfb8c2e59ab2949b9c5114ad06ab0e32f731",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-connect-to-polkadot",
    "title": "Connect to Polkadot",
    "slug": "develop-smart-contracts-connect-to-polkadot",
    "categories": [
      "Smart Contracts"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-connect-to-polkadot.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/connect-to-polkadot/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Networks Details",
        "anchor": "networks-details"
      },
      {
        "depth": 2,
        "title": "Test Tokens",
        "anchor": "test-tokens"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 3498,
      "words": 482,
      "headings": 3,
      "estimated_token_count_total": 570
    },
    "hash": "sha256:cf5eb5f55dfd4038aea86869a9d1734db238b3e5cd92f8e29811552c8daf7842",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-dev-environments-foundry",
    "title": "Use Foundry with Polkadot Hub",
    "slug": "develop-smart-contracts-dev-environments-foundry",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-dev-environments-foundry.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/dev-environments/foundry/",
    "preview": "!!! warning Consider that features like Anvil (Foundry's local blockchain) and `forge test` (for running Solidity tests) are not yet supported in `foundry-polkadot`.",
    "outline": [
      {
        "depth": 2,
        "title": "Overview",
        "anchor": "overview"
      },
      {
        "depth": 2,
        "title": "Installation",
        "anchor": "installation"
      },
      {
        "depth": 2,
        "title": "Compiler Integration",
        "anchor": "compiler-integration"
      },
      {
        "depth": 2,
        "title": "Command-Line Interface (CLI)",
        "anchor": "command-line-interface-cli"
      },
      {
        "depth": 2,
        "title": "Unsupported or Modified Features",
        "anchor": "unsupported-or-modified-features"
      },
      {
        "depth": 2,
        "title": "Set up a Project",
        "anchor": "set-up-a-project"
      },
      {
        "depth": 2,
        "title": "Compile a Project",
        "anchor": "compile-a-project"
      },
      {
        "depth": 2,
        "title": "Deploy a Contract",
        "anchor": "deploy-a-contract"
      },
      {
        "depth": 2,
        "title": "Supported `foundry-polkadot` Commands",
        "anchor": "supported-foundry-polkadot-commands"
      },
      {
        "depth": 3,
        "title": "Forge Commands",
        "anchor": "forge-commands"
      },
      {
        "depth": 3,
        "title": "Cast Commands",
        "anchor": "cast-commands"
      }
    ],
    "stats": {
      "chars": 23402,
      "words": 2744,
      "headings": 11,
      "estimated_token_count_total": 6230
    },
    "hash": "sha256:984352e58e7938c9249f37fd2f28b61cf1e8735b7fb35842d1a566cca3474f67",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-dev-environments-hardhat",
    "title": "Use Hardhat with Polkadot Hub",
    "slug": "develop-smart-contracts-dev-environments-hardhat",
    "categories": [
      "Smart Contracts",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-dev-environments-hardhat.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/dev-environments/hardhat/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Overview",
        "anchor": "overview"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Set Up Hardhat",
        "anchor": "set-up-hardhat"
      },
      {
        "depth": 2,
        "title": "Compile Your Contract",
        "anchor": "compile-your-contract"
      },
      {
        "depth": 2,
        "title": "Set Up a Testing Environment",
        "anchor": "set-up-a-testing-environment"
      },
      {
        "depth": 2,
        "title": "Test Your Contract",
        "anchor": "test-your-contract"
      },
      {
        "depth": 2,
        "title": "Deploy to a Local Node",
        "anchor": "deploy-to-a-local-node"
      },
      {
        "depth": 2,
        "title": "Deploying to a Live Network",
        "anchor": "deploying-to-a-live-network"
      },
      {
        "depth": 2,
        "title": "Interacting with Your Contract",
        "anchor": "interacting-with-your-contract"
      },
      {
        "depth": 2,
        "title": "Upgrading the Plugin",
        "anchor": "upgrading-the-plugin"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 18028,
      "words": 2456,
      "headings": 11,
      "estimated_token_count_total": 4182
    },
    "hash": "sha256:8f7f2399eaeebd4eebf470b884a4e320bd721f01524075175e69a07331b524c3",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-dev-environments-remix",
    "title": "Use the Polkadot Remix IDE",
    "slug": "develop-smart-contracts-dev-environments-remix",
    "categories": [
      "Smart Contracts",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-dev-environments-remix.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/dev-environments/remix/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Overview",
        "anchor": "overview"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Accessing Remix IDE",
        "anchor": "accessing-remix-ide"
      },
      {
        "depth": 2,
        "title": "Creating a New Contract",
        "anchor": "creating-a-new-contract"
      },
      {
        "depth": 2,
        "title": "Compiling Your Contract",
        "anchor": "compiling-your-contract"
      },
      {
        "depth": 2,
        "title": "Deploying Contracts",
        "anchor": "deploying-contracts"
      },
      {
        "depth": 2,
        "title": "Interacting with Contracts",
        "anchor": "interacting-with-contracts"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 6631,
      "words": 913,
      "headings": 8,
      "estimated_token_count_total": 1376
    },
    "hash": "sha256:079af31ac1e0f70e73f2a38aff14a2d390a23873d43b61736b9cf76a0783fab9",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-faqs",
    "title": "Polkadot Hub Smart Contract FAQs",
    "slug": "develop-smart-contracts-faqs",
    "categories": [
      "Smart Contracts"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-faqs.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/faqs/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "General Questions",
        "anchor": "general-questions"
      },
      {
        "depth": 3,
        "title": "What are the different types of smart contracts I can build on Polkadot?",
        "anchor": "what-are-the-different-types-of-smart-contracts-i-can-build-on-polkadot"
      },
      {
        "depth": 3,
        "title": "Should I build a smart contract or a parachain?",
        "anchor": "should-i-build-a-smart-contract-or-a-parachain"
      },
      {
        "depth": 3,
        "title": "What's the difference between Polkadot Hub smart contracts and other EVM chains?",
        "anchor": "whats-the-difference-between-polkadot-hub-smart-contracts-and-other-evm-chains"
      },
      {
        "depth": 2,
        "title": "Development Environment",
        "anchor": "development-environment"
      },
      {
        "depth": 3,
        "title": "Can I use my existing Ethereum development tools?",
        "anchor": "can-i-use-my-existing-ethereum-development-tools"
      },
      {
        "depth": 3,
        "title": "How do I set up local development?",
        "anchor": "how-do-i-set-up-local-development"
      },
      {
        "depth": 3,
        "title": "What networks are available for testing and deployment?",
        "anchor": "what-networks-are-available-for-testing-and-deployment"
      },
      {
        "depth": 2,
        "title": "Technical Implementation",
        "anchor": "technical-implementation"
      },
      {
        "depth": 3,
        "title": "How do Ethereum addresses work on Polkadot?",
        "anchor": "how-do-ethereum-addresses-work-on-polkadot"
      },
      {
        "depth": 3,
        "title": "What are the key differences in the gas model?",
        "anchor": "what-are-the-key-differences-in-the-gas-model"
      },
      {
        "depth": 3,
        "title": "How does contract deployment work?",
        "anchor": "how-does-contract-deployment-work"
      },
      {
        "depth": 3,
        "title": "Which Solidity features are not supported?",
        "anchor": "which-solidity-features-are-not-supported"
      },
      {
        "depth": 3,
        "title": "How do I handle the existential deposit requirement?",
        "anchor": "how-do-i-handle-the-existential-deposit-requirement"
      },
      {
        "depth": 2,
        "title": "Migration and Compatibility",
        "anchor": "migration-and-compatibility"
      },
      {
        "depth": 3,
        "title": "Can I migrate my existing Ethereum contracts?",
        "anchor": "can-i-migrate-my-existing-ethereum-contracts"
      },
      {
        "depth": 2,
        "title": "Troubleshooting",
        "anchor": "troubleshooting"
      },
      {
        "depth": 3,
        "title": "Why are my gas calculations different?",
        "anchor": "why-are-my-gas-calculations-different"
      },
      {
        "depth": 3,
        "title": "I deployed a contract with MetaMask, and got a `code size` error - why?",
        "anchor": "i-deployed-a-contract-with-metamask-and-got-a-code-size-error-why"
      },
      {
        "depth": 3,
        "title": "I found a bug, where can I log it?",
        "anchor": "i-found-a-bug-where-can-i-log-it"
      },
      {
        "depth": 2,
        "title": "Known Issues",
        "anchor": "known-issues"
      },
      {
        "depth": 3,
        "title": "Runtime Behavior",
        "anchor": "runtime-behavior"
      },
      {
        "depth": 3,
        "title": "Development Tools",
        "anchor": "development-tools"
      },
      {
        "depth": 3,
        "title": "Contract Patterns",
        "anchor": "contract-patterns"
      },
      {
        "depth": 3,
        "title": "Compilation",
        "anchor": "compilation"
      }
    ],
    "stats": {
      "chars": 7471,
      "words": 979,
      "headings": 25,
      "estimated_token_count_total": 1605
    },
    "hash": "sha256:38fe29a7604c91ed01ff6411ab547681245059592931cda825bb51151af7c46f",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-json-rpc-apis",
    "title": "JSON-RPC APIs",
    "slug": "develop-smart-contracts-json-rpc-apis",
    "categories": [
      "Reference"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-json-rpc-apis.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/json-rpc-apis/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Available Methods",
        "anchor": "available-methods"
      },
      {
        "depth": 3,
        "title": "eth_accounts",
        "anchor": "eth_accounts"
      },
      {
        "depth": 3,
        "title": "eth_blockNumber",
        "anchor": "eth_blocknumber"
      },
      {
        "depth": 3,
        "title": "eth_call",
        "anchor": "eth_call"
      },
      {
        "depth": 3,
        "title": "eth_chainId",
        "anchor": "eth_chainid"
      },
      {
        "depth": 3,
        "title": "eth_estimateGas",
        "anchor": "eth_estimategas"
      },
      {
        "depth": 3,
        "title": "eth_gasPrice",
        "anchor": "eth_gasprice"
      },
      {
        "depth": 3,
        "title": "eth_getBalance",
        "anchor": "eth_getbalance"
      },
      {
        "depth": 3,
        "title": "eth_getBlockByHash",
        "anchor": "eth_getblockbyhash"
      },
      {
        "depth": 3,
        "title": "eth_getBlockByNumber",
        "anchor": "eth_getblockbynumber"
      },
      {
        "depth": 3,
        "title": "eth_getBlockTransactionCountByNumber",
        "anchor": "eth_getblocktransactioncountbynumber"
      },
      {
        "depth": 3,
        "title": "eth_getBlockTransactionCountByHash",
        "anchor": "eth_getblocktransactioncountbyhash"
      },
      {
        "depth": 3,
        "title": "eth_getCode",
        "anchor": "eth_getcode"
      },
      {
        "depth": 3,
        "title": "eth_getLogs",
        "anchor": "eth_getlogs"
      },
      {
        "depth": 3,
        "title": "eth_getStorageAt",
        "anchor": "eth_getstorageat"
      },
      {
        "depth": 3,
        "title": "eth_getTransactionCount",
        "anchor": "eth_gettransactioncount"
      },
      {
        "depth": 3,
        "title": "eth_getTransactionByHash",
        "anchor": "eth_gettransactionbyhash"
      },
      {
        "depth": 3,
        "title": "eth_getTransactionByBlockNumberAndIndex",
        "anchor": "eth_gettransactionbyblocknumberandindex"
      },
      {
        "depth": 3,
        "title": "eth_getTransactionByBlockHashAndIndex",
        "anchor": "eth_gettransactionbyblockhashandindex"
      },
      {
        "depth": 3,
        "title": "eth_getTransactionReceipt",
        "anchor": "eth_gettransactionreceipt"
      },
      {
        "depth": 3,
        "title": "eth_maxPriorityFeePerGas",
        "anchor": "eth_maxpriorityfeepergas"
      },
      {
        "depth": 3,
        "title": "eth_sendRawTransaction",
        "anchor": "eth_sendrawtransaction"
      },
      {
        "depth": 3,
        "title": "eth_sendTransaction",
        "anchor": "eth_sendtransaction"
      },
      {
        "depth": 3,
        "title": "eth_syncing",
        "anchor": "eth_syncing"
      },
      {
        "depth": 3,
        "title": "net_listening",
        "anchor": "net_listening"
      },
      {
        "depth": 3,
        "title": "net_peerCount",
        "anchor": "net_peercount"
      },
      {
        "depth": 3,
        "title": "net_version",
        "anchor": "net_version"
      },
      {
        "depth": 3,
        "title": "system_health",
        "anchor": "system_health"
      },
      {
        "depth": 3,
        "title": "web3_clientVersion",
        "anchor": "web3_clientversion"
      },
      {
        "depth": 3,
        "title": "debug_traceBlockByNumber",
        "anchor": "debug_traceblockbynumber"
      },
      {
        "depth": 3,
        "title": "debug_traceTransaction",
        "anchor": "debug_tracetransaction"
      },
      {
        "depth": 3,
        "title": "debug_traceCall",
        "anchor": "debug_tracecall"
      },
      {
        "depth": 2,
        "title": "Response Format",
        "anchor": "response-format"
      },
      {
        "depth": 2,
        "title": "Error Handling",
        "anchor": "error-handling"
      }
    ],
    "stats": {
      "chars": 31728,
      "words": 3942,
      "headings": 35,
      "estimated_token_count_total": 9750
    },
    "hash": "sha256:de8bda204eb08eaa65ed4df214aae77e4d1fb26a0ec3a4d37e583d9e73f8dd46",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-libraries-ethers-js",
    "title": "Deploy Contracts to Polkadot Hub with Ethers.js",
    "slug": "develop-smart-contracts-libraries-ethers-js",
    "categories": [
      "Smart Contracts",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-libraries-ethers-js.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/libraries/ethers-js/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Project Structure",
        "anchor": "project-structure"
      },
      {
        "depth": 2,
        "title": "Set Up the Project",
        "anchor": "set-up-the-project"
      },
      {
        "depth": 2,
        "title": "Install Dependencies",
        "anchor": "install-dependencies"
      },
      {
        "depth": 2,
        "title": "Set Up the Ethers.js Provider",
        "anchor": "set-up-the-ethersjs-provider"
      },
      {
        "depth": 2,
        "title": "Compile Contracts",
        "anchor": "compile-contracts"
      },
      {
        "depth": 3,
        "title": "Install the Revive Library",
        "anchor": "install-the-revive-library"
      },
      {
        "depth": 3,
        "title": "Sample Storage Smart Contract",
        "anchor": "sample-storage-smart-contract"
      },
      {
        "depth": 3,
        "title": "Compile the Smart Contract",
        "anchor": "compile-the-smart-contract"
      },
      {
        "depth": 2,
        "title": "Deploy the Compiled Contract",
        "anchor": "deploy-the-compiled-contract"
      },
      {
        "depth": 2,
        "title": "Interact with the Contract",
        "anchor": "interact-with-the-contract"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 19735,
      "words": 2334,
      "headings": 13,
      "estimated_token_count_total": 4487
    },
    "hash": "sha256:1a664dc5828508a7ab7681cb31252f87585f1a89d1ef5589068ecef90ca2db79",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-libraries-viem",
    "title": "viem for Polkadot Hub Smart Contracts",
    "slug": "develop-smart-contracts-libraries-viem",
    "categories": [
      "Smart Contracts",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-libraries-viem.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/libraries/viem/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Project Structure",
        "anchor": "project-structure"
      },
      {
        "depth": 2,
        "title": "Set Up the Project",
        "anchor": "set-up-the-project"
      },
      {
        "depth": 2,
        "title": "Install Dependencies",
        "anchor": "install-dependencies"
      },
      {
        "depth": 2,
        "title": "Initialize Project",
        "anchor": "initialize-project"
      },
      {
        "depth": 2,
        "title": "Set Up the Chain Configuration",
        "anchor": "set-up-the-chain-configuration"
      },
      {
        "depth": 2,
        "title": "Set Up the viem Client",
        "anchor": "set-up-the-viem-client"
      },
      {
        "depth": 2,
        "title": "Set Up a Wallet",
        "anchor": "set-up-a-wallet"
      },
      {
        "depth": 2,
        "title": "Sample Smart Contract",
        "anchor": "sample-smart-contract"
      },
      {
        "depth": 2,
        "title": "Compile the Contract",
        "anchor": "compile-the-contract"
      },
      {
        "depth": 2,
        "title": "Deploy the Contract",
        "anchor": "deploy-the-contract"
      },
      {
        "depth": 2,
        "title": "Interact with the Contract",
        "anchor": "interact-with-the-contract"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 16533,
      "words": 1945,
      "headings": 14,
      "estimated_token_count_total": 3909
    },
    "hash": "sha256:429f66b305b5e2972e6acf00b629a658264ddbd655f06a03e9b9b7c82cca0180",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-libraries-wagmi",
    "title": "Wagmi for Polkadot Hub Smart Contracts",
    "slug": "develop-smart-contracts-libraries-wagmi",
    "categories": [
      "Smart Contracts",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-libraries-wagmi.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/libraries/wagmi/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Set Up the Project",
        "anchor": "set-up-the-project"
      },
      {
        "depth": 2,
        "title": "Install Dependencies",
        "anchor": "install-dependencies"
      },
      {
        "depth": 2,
        "title": "Configure Wagmi for Polkadot Hub",
        "anchor": "configure-wagmi-for-polkadot-hub"
      },
      {
        "depth": 2,
        "title": "Set Up the Wagmi Provider",
        "anchor": "set-up-the-wagmi-provider"
      },
      {
        "depth": 2,
        "title": "Connect a Wallet",
        "anchor": "connect-a-wallet"
      },
      {
        "depth": 2,
        "title": "Fetch Blockchain Data",
        "anchor": "fetch-blockchain-data"
      },
      {
        "depth": 2,
        "title": "Interact with Deployed Contract",
        "anchor": "interact-with-deployed-contract"
      },
      {
        "depth": 2,
        "title": "Integrate Components",
        "anchor": "integrate-components"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 13454,
      "words": 1515,
      "headings": 10,
      "estimated_token_count_total": 3258
    },
    "hash": "sha256:8b24eff159e91105decca9a88bace93432857d0869d250c0fd64135a524c0075",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-libraries-web3-js",
    "title": "Web3.js",
    "slug": "develop-smart-contracts-libraries-web3-js",
    "categories": [
      "Smart Contracts",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-libraries-web3-js.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/libraries/web3-js/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Project Structure",
        "anchor": "project-structure"
      },
      {
        "depth": 2,
        "title": "Set Up the Project",
        "anchor": "set-up-the-project"
      },
      {
        "depth": 2,
        "title": "Install Dependencies",
        "anchor": "install-dependencies"
      },
      {
        "depth": 2,
        "title": "Set Up the Web3 Provider",
        "anchor": "set-up-the-web3-provider"
      },
      {
        "depth": 2,
        "title": "Compile Contracts",
        "anchor": "compile-contracts"
      },
      {
        "depth": 2,
        "title": "Contract Deployment",
        "anchor": "contract-deployment"
      },
      {
        "depth": 2,
        "title": "Interact with the Contract",
        "anchor": "interact-with-the-contract"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 13281,
      "words": 1586,
      "headings": 10,
      "estimated_token_count_total": 3040
    },
    "hash": "sha256:4b0cae5e64c9c13f7b83166cae6e88c564645560fe22106eb0abd5bddc1455dd",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-libraries-web3-py",
    "title": "Web3.py",
    "slug": "develop-smart-contracts-libraries-web3-py",
    "categories": [
      "Smart Contracts",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-libraries-web3-py.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/libraries/web3-py/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Set Up the Project",
        "anchor": "set-up-the-project"
      },
      {
        "depth": 2,
        "title": "Set Up the Web3 Provider",
        "anchor": "set-up-the-web3-provider"
      },
      {
        "depth": 2,
        "title": "Contract Deployment",
        "anchor": "contract-deployment"
      },
      {
        "depth": 2,
        "title": "Interact with the Contract",
        "anchor": "interact-with-the-contract"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 11504,
      "words": 1335,
      "headings": 6,
      "estimated_token_count_total": 2518
    },
    "hash": "sha256:29e7ee17a4b833bee17c196b4c9bb1ca8080704d9477e99cd11c8aef401f9a78",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-local-development-node",
    "title": "Local Development Node",
    "slug": "develop-smart-contracts-local-development-node",
    "categories": [
      "Smart Contracts"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-local-development-node.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/local-development-node/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Install the Revive Dev Node and ETH-RPC Adapter",
        "anchor": "install-the-revive-dev-node-and-eth-rpc-adapter"
      },
      {
        "depth": 2,
        "title": "Run the Local Node",
        "anchor": "run-the-local-node"
      }
    ],
    "stats": {
      "chars": 9070,
      "words": 1433,
      "headings": 4,
      "estimated_token_count_total": 2434
    },
    "hash": "sha256:eaac5b1ac3a623cda3be47ada2def87d0de37b652e3af87a2eee397ef5229010",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-overview",
    "title": "Smart Contracts Overview",
    "slug": "develop-smart-contracts-overview",
    "categories": [
      "Basics",
      "Smart Contracts"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-overview.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/overview/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Native Smart Contracts",
        "anchor": "native-smart-contracts"
      },
      {
        "depth": 3,
        "title": "Introduction",
        "anchor": "introduction-2"
      },
      {
        "depth": 3,
        "title": "Smart Contract Development",
        "anchor": "smart-contract-development"
      },
      {
        "depth": 3,
        "title": "Technical Architecture",
        "anchor": "technical-architecture"
      },
      {
        "depth": 3,
        "title": "Development Tools and Resources",
        "anchor": "development-tools-and-resources"
      },
      {
        "depth": 3,
        "title": "Cross-Chain Capabilities",
        "anchor": "cross-chain-capabilities"
      },
      {
        "depth": 3,
        "title": "Use Cases",
        "anchor": "use-cases"
      },
      {
        "depth": 2,
        "title": "Other Smart Contract Environments",
        "anchor": "other-smart-contract-environments"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 6296,
      "words": 802,
      "headings": 10,
      "estimated_token_count_total": 1118
    },
    "hash": "sha256:dcb13b86724993c4a69e418d294a2560eeb0043d16f37e3d4616e6967957feb0",
    "last_modified": "2025-09-17T14:52:48+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-precompiles-interact-with-precompiles",
    "title": "Interact with Precompiles",
    "slug": "develop-smart-contracts-precompiles-interact-with-precompiles",
    "categories": [
      "Smart Contracts"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-precompiles-interact-with-precompiles.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/precompiles/interact-with-precompiles/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Basic Precompile Interaction Pattern",
        "anchor": "basic-precompile-interaction-pattern"
      },
      {
        "depth": 2,
        "title": "ECRecover (0x01)",
        "anchor": "ecrecover-0x01"
      },
      {
        "depth": 2,
        "title": "SHA-256 (0x02)",
        "anchor": "sha-256-0x02"
      },
      {
        "depth": 2,
        "title": "RIPEMD-160 (0x03)",
        "anchor": "ripemd-160-0x03"
      },
      {
        "depth": 2,
        "title": "Identity (Data Copy) (0x04)",
        "anchor": "identity-data-copy-0x04"
      },
      {
        "depth": 2,
        "title": "Modular Exponentiation (0x05)",
        "anchor": "modular-exponentiation-0x05"
      },
      {
        "depth": 2,
        "title": "BN128 Addition (0x06)",
        "anchor": "bn128-addition-0x06"
      },
      {
        "depth": 2,
        "title": "BN128 Scalar Multiplication (0x07)",
        "anchor": "bn128-scalar-multiplication-0x07"
      },
      {
        "depth": 2,
        "title": "BN128 Pairing Check (0x08)",
        "anchor": "bn128-pairing-check-0x08"
      },
      {
        "depth": 2,
        "title": "Blake2F (0x09)",
        "anchor": "blake2f-0x09"
      },
      {
        "depth": 2,
        "title": "Conclusion",
        "anchor": "conclusion"
      }
    ],
    "stats": {
      "chars": 18020,
      "words": 2181,
      "headings": 12,
      "estimated_token_count_total": 3829
    },
    "hash": "sha256:fcf6dcdc8b075fdaa8eda71ba9d5a3bc31fe6087fe3cb8ae0c21443cbe81c396",
    "last_modified": "2025-09-17T14:52:49+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-precompiles-xcm-precompile",
    "title": "Interact with the XCM Precompile",
    "slug": "develop-smart-contracts-precompiles-xcm-precompile",
    "categories": [
      "Smart Contracts"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-precompiles-xcm-precompile.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/precompiles/xcm-precompile/",
    "preview": "The [XCM (Cross-Consensus Message)](/develop/interoperability/intro-to-xcm){target=\\_blank} precompile enables Polkadot Hub developers to access XCM functionality directly from their smart contracts using a Solidity interface.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Precompile Interface",
        "anchor": "precompile-interface"
      },
      {
        "depth": 2,
        "title": "Interact with the XCM Precompile",
        "anchor": "interact-with-the-xcm-precompile"
      },
      {
        "depth": 3,
        "title": "Weigh a Message",
        "anchor": "weigh-a-message"
      },
      {
        "depth": 3,
        "title": "Execute a Message",
        "anchor": "execute-a-message"
      },
      {
        "depth": 3,
        "title": "Send a Message",
        "anchor": "send-a-message"
      },
      {
        "depth": 2,
        "title": "Cross Contract Calls",
        "anchor": "cross-contract-calls"
      },
      {
        "depth": 2,
        "title": "Conclusion",
        "anchor": "conclusion"
      },
      {
        "depth": 2,
        "title": "Next steps",
        "anchor": "next-steps"
      }
    ],
    "stats": {
      "chars": 10770,
      "words": 1440,
      "headings": 9,
      "estimated_token_count_total": 2318
    },
    "hash": "sha256:950f60a3077db392a726d3b743187049180c2a3747941340cc2dc217b6357487",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-wallets",
    "title": "Wallets for Polkadot Hub",
    "slug": "develop-smart-contracts-wallets",
    "categories": [
      "Smart Contracts",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-wallets.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/wallets/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Connect Your Wallet",
        "anchor": "connect-your-wallet"
      },
      {
        "depth": 3,
        "title": "MetaMask",
        "anchor": "metamask"
      },
      {
        "depth": 3,
        "title": "SubWallet",
        "anchor": "subwallet"
      },
      {
        "depth": 3,
        "title": "Talisman",
        "anchor": "talisman"
      },
      {
        "depth": 2,
        "title": "Conclusion",
        "anchor": "conclusion"
      }
    ],
    "stats": {
      "chars": 7301,
      "words": 1047,
      "headings": 6,
      "estimated_token_count_total": 1638
    },
    "hash": "sha256:4dd9b17317d080cd8115dfce1065c0e7d0d2e9e5dd3428912f7f893050f4a9e8",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-api-libraries-dedot",
    "title": "Dedot",
    "slug": "develop-toolkit-api-libraries-dedot",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-api-libraries-dedot.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/api-libraries/dedot/",
    "preview": "[Dedot](https://github.com/dedotdev/dedot){target=\\_blank} is a next-generation JavaScript client for Polkadot and Polkadot SDK-based blockchains. Designed to elevate the dApp development experience, Dedot is built and optimized to be lightweight and tree-shakable, offering precise types and APIs suggestions for individual Polkadot SDK-based blockchains and [ink! smart contracts](https://use.ink/){target=\\_blank}.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 3,
        "title": "Key Features",
        "anchor": "key-features"
      },
      {
        "depth": 2,
        "title": "Installation",
        "anchor": "installation"
      },
      {
        "depth": 2,
        "title": "Get Started",
        "anchor": "get-started"
      },
      {
        "depth": 3,
        "title": "Initialize a Client Instance",
        "anchor": "initialize-a-client-instance"
      },
      {
        "depth": 3,
        "title": "Enable Type and API Suggestions",
        "anchor": "enable-type-and-api-suggestions"
      },
      {
        "depth": 3,
        "title": "Read On-Chain Data",
        "anchor": "read-on-chain-data"
      },
      {
        "depth": 3,
        "title": "Sign and Send Transactions",
        "anchor": "sign-and-send-transactions"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 8782,
      "words": 1100,
      "headings": 9,
      "estimated_token_count_total": 2311
    },
    "hash": "sha256:a1f2b62f3648c816935cd151dbe3802b17daa2e11c3824b0f9f541083b1d75ac",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-api-libraries-papi",
    "title": "Polkadot-API",
    "slug": "develop-toolkit-api-libraries-papi",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-api-libraries-papi.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/api-libraries/papi/",
    "preview": "[Polkadot-API](https://github.com/polkadot-api/polkadot-api){target=\\_blank} (PAPI) is a set of libraries built to be modular, composable, and grounded in a “light-client first” approach. Its primary aim is to equip dApp developers with an extensive toolkit for building fully decentralized applications.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Get Started",
        "anchor": "get-started"
      },
      {
        "depth": 3,
        "title": "API Instantiation",
        "anchor": "api-instantiation"
      },
      {
        "depth": 3,
        "title": "Reading Chain Data",
        "anchor": "reading-chain-data"
      },
      {
        "depth": 3,
        "title": "Sending Transactions",
        "anchor": "sending-transactions"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 8710,
      "words": 1156,
      "headings": 6,
      "estimated_token_count_total": 1992
    },
    "hash": "sha256:0447566289f96486c20b3d3ea8f39056636e988ead20a767614c90d531be1875",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-api-libraries-polkadot-js-api",
    "title": "Polkadot.js API",
    "slug": "develop-toolkit-api-libraries-polkadot-js-api",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-api-libraries-polkadot-js-api.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/api-libraries/polkadot-js-api/",
    "preview": "!!! warning \"Maintenance Mode Only\" The Polkadot.js API is now in maintenance mode and is no longer actively developed. New projects should use [Dedot](/develop/toolkit/api-libraries/dedot){target=\\_blank} (TypeScript-first API) or [Polkadot API](/develop/toolkit/api-libraries/papi){target=\\_blank} (modern, type-safe API) as actively maintained alternatives.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 3,
        "title": "Dynamic API Generation",
        "anchor": "dynamic-api-generation"
      },
      {
        "depth": 3,
        "title": "Available API Categories",
        "anchor": "available-api-categories"
      },
      {
        "depth": 2,
        "title": "Installation",
        "anchor": "installation"
      },
      {
        "depth": 2,
        "title": "Get Started",
        "anchor": "get-started"
      },
      {
        "depth": 3,
        "title": "Creating an API Instance",
        "anchor": "creating-an-api-instance"
      },
      {
        "depth": 3,
        "title": "Reading Chain Data",
        "anchor": "reading-chain-data"
      },
      {
        "depth": 3,
        "title": "Sending Transactions",
        "anchor": "sending-transactions"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 5002,
      "words": 684,
      "headings": 9,
      "estimated_token_count_total": 1170
    },
    "hash": "sha256:1a0eb72406e6c8972f1cbce57abef1247e48027a113665767bab005dbf92e688",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-api-libraries-py-substrate-interface",
    "title": "Python Substrate Interface",
    "slug": "develop-toolkit-api-libraries-py-substrate-interface",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-api-libraries-py-substrate-interface.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/api-libraries/py-substrate-interface/",
    "preview": "The [Python Substrate Interface](https://github.com/polkascan/py-substrate-interface){target=\\_blank} is a powerful library that enables interaction with Polkadot SDK-based chains. It provides essential functionality for:",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Installation",
        "anchor": "installation"
      },
      {
        "depth": 2,
        "title": "Get Started",
        "anchor": "get-started"
      },
      {
        "depth": 3,
        "title": "Establishing Connection",
        "anchor": "establishing-connection"
      },
      {
        "depth": 3,
        "title": "Reading Chain State",
        "anchor": "reading-chain-state"
      },
      {
        "depth": 3,
        "title": "Submitting Transactions",
        "anchor": "submitting-transactions"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 4305,
      "words": 541,
      "headings": 7,
      "estimated_token_count_total": 945
    },
    "hash": "sha256:8ab4e27c8ddc12bc6f8a4e5bae2fc71011458c29a33a742c5c5957ec09b197c2",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-api-libraries-sidecar",
    "title": "Sidecar Rest API",
    "slug": "develop-toolkit-api-libraries-sidecar",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-api-libraries-sidecar.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/api-libraries/sidecar/",
    "preview": "The [Sidecar Rest API](https://github.com/paritytech/substrate-api-sidecar){target=\\_blank} is a service that provides a REST interface for interacting with Polkadot SDK-based blockchains. With this API, developers can easily access a broad range of endpoints for nodes, accounts, transactions, parachains, and more.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Installation",
        "anchor": "installation"
      },
      {
        "depth": 2,
        "title": "Usage",
        "anchor": "usage"
      },
      {
        "depth": 3,
        "title": "Endpoints",
        "anchor": "endpoints"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 7314,
      "words": 1033,
      "headings": 6,
      "estimated_token_count_total": 1948
    },
    "hash": "sha256:899449520b52cceeb4cfb7a8566c7c0ff8b6be57a744c98ec662d72ee01f03e2",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-api-libraries-subxt",
    "title": "Subxt Rust API",
    "slug": "develop-toolkit-api-libraries-subxt",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-api-libraries-subxt.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/api-libraries/subxt/",
    "preview": "Subxt is a Rust library designed to interact with Polkadot SDK-based blockchains. It provides a type-safe interface for submitting transactions, querying on-chain state, and performing other blockchain interactions. By leveraging Rust's strong type system, subxt ensures that your code is validated at compile time, reducing runtime errors and improving reliability.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Installation",
        "anchor": "installation"
      },
      {
        "depth": 2,
        "title": "Get Started",
        "anchor": "get-started"
      },
      {
        "depth": 3,
        "title": "Download Chain Metadata",
        "anchor": "download-chain-metadata"
      },
      {
        "depth": 3,
        "title": "Generate Type-Safe Interfaces",
        "anchor": "generate-type-safe-interfaces"
      },
      {
        "depth": 3,
        "title": "Initialize the Subxt Client",
        "anchor": "initialize-the-subxt-client"
      },
      {
        "depth": 3,
        "title": "Read Chain Data",
        "anchor": "read-chain-data"
      },
      {
        "depth": 3,
        "title": "Submit Transactions",
        "anchor": "submit-transactions"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 11022,
      "words": 1364,
      "headings": 10,
      "estimated_token_count_total": 2630
    },
    "hash": "sha256:9353b2514d4cef878483856d27bb4af631b996b0e374ee1078b3a0f3b426dc34",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-integrations-indexers",
    "title": "Indexers",
    "slug": "develop-toolkit-integrations-indexers",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-integrations-indexers.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/integrations/indexers/",
    "preview": "Blockchain data is inherently sequential and distributed, with information stored chronologically across numerous blocks. While retrieving data from a single block through JSON-RPC API calls is straightforward, more complex queries that span multiple blocks present significant challenges:",
    "outline": [
      {
        "depth": 2,
        "title": "The Challenge of Blockchain Data Access",
        "anchor": "the-challenge-of-blockchain-data-access"
      },
      {
        "depth": 2,
        "title": "What is a Blockchain Indexer?",
        "anchor": "what-is-a-blockchain-indexer"
      },
      {
        "depth": 2,
        "title": "Indexer Implementations",
        "anchor": "indexer-implementations"
      }
    ],
    "stats": {
      "chars": 2230,
      "words": 302,
      "headings": 3,
      "estimated_token_count_total": 428
    },
    "hash": "sha256:cfcc76bb24779c9b613f2c046b6f99a0f2529c25fd82287d804f6b945b936227",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-integrations-oracles",
    "title": "Oracles",
    "slug": "develop-toolkit-integrations-oracles",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-integrations-oracles.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/integrations/oracles/",
    "preview": "Oracles enable blockchains to access external data sources. Since blockchains operate as isolated networks, they cannot natively interact with external systems - this limitation is known as the \"blockchain oracle problem.\" Oracles solves this by extracting data from external sources (like APIs, IoT devices, or other blockchains), validating it, and submitting it on-chain.",
    "outline": [
      {
        "depth": 2,
        "title": "What is a Blockchain Oracle?",
        "anchor": "what-is-a-blockchain-oracle"
      },
      {
        "depth": 2,
        "title": "Oracle Implementations",
        "anchor": "oracle-implementations"
      }
    ],
    "stats": {
      "chars": 1343,
      "words": 181,
      "headings": 2,
      "estimated_token_count_total": 245
    },
    "hash": "sha256:6d8e01281a5895fd2bc4438b24c170c72a496de0b838626a53e87685aea4aa25",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-integrations-storage",
    "title": "Storage",
    "slug": "develop-toolkit-integrations-storage",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-integrations-storage.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/integrations/storage/",
    "preview": "Polkadot offers developers a range of decentralized storage solutions to manage dApp data, host front ends, and store large files in a censorship-resistant and resilient manner. These integrations are essential for building fully decentralized applications, ensuring that all components of your dApp, from the front end to the data, are not reliant on centralized servers.",
    "outline": [
      {
        "depth": 2,
        "title": "Key Storage Solutions",
        "anchor": "key-storage-solutions"
      },
      {
        "depth": 2,
        "title": "Crust Network",
        "anchor": "crust-network"
      },
      {
        "depth": 3,
        "title": "Key Features of Crust",
        "anchor": "key-features-of-crust"
      },
      {
        "depth": 3,
        "title": "Use Cases",
        "anchor": "use-cases"
      },
      {
        "depth": 2,
        "title": "IPFS",
        "anchor": "ipfs"
      },
      {
        "depth": 3,
        "title": "Using IPFS with Polkadot",
        "anchor": "using-ipfs-with-polkadot"
      },
      {
        "depth": 2,
        "title": "Other Solutions",
        "anchor": "other-solutions"
      }
    ],
    "stats": {
      "chars": 4369,
      "words": 642,
      "headings": 7,
      "estimated_token_count_total": 847
    },
    "hash": "sha256:a206dd86fc3d80aed22384000839ca0c9c75c69ad461abd9810d96c03cf6a3bd",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-integrations-transaction-construction",
    "title": "Transaction Construction",
    "slug": "develop-toolkit-integrations-transaction-construction",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-integrations-transaction-construction.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/integrations/transaction-construction/",
    "preview": "This page will discuss the transaction format in Polkadot and how to create, sign, and broadcast transactions, as well as highlight some of the commands and tools available for integrators.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Transaction Format",
        "anchor": "transaction-format"
      },
      {
        "depth": 3,
        "title": "Mode and Metadata Hash",
        "anchor": "mode-and-metadata-hash"
      },
      {
        "depth": 3,
        "title": "Serialized Transactions and Metadata",
        "anchor": "serialized-transactions-and-metadata"
      },
      {
        "depth": 3,
        "title": "Transaction Flow",
        "anchor": "transaction-flow"
      },
      {
        "depth": 2,
        "title": "Polkadot-JS Tools",
        "anchor": "polkadot-js-tools"
      },
      {
        "depth": 3,
        "title": "Creating a Transaction, Signing, and Submitting",
        "anchor": "creating-a-transaction-signing-and-submitting"
      },
      {
        "depth": 2,
        "title": "Txwrapper",
        "anchor": "txwrapper"
      },
      {
        "depth": 3,
        "title": "Creating a Transaction, Signing, and Submitting",
        "anchor": "creating-a-transaction-signing-and-submitting-2"
      },
      {
        "depth": 2,
        "title": "Additional Libraries for Submitting a Transaction",
        "anchor": "additional-libraries-for-submitting-a-transaction"
      }
    ],
    "stats": {
      "chars": 27106,
      "words": 2965,
      "headings": 10,
      "estimated_token_count_total": 6317
    },
    "hash": "sha256:42b1ee63a4abdf697fd60384b1c2b16972ed6d946417605f0f9d9265a0aeadfb",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-integrations-wallets",
    "title": "Wallets",
    "slug": "develop-toolkit-integrations-wallets",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-integrations-wallets.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/integrations/wallets/",
    "preview": "A wallet serves as your gateway to interacting with blockchain networks. Rather than storing funds, wallets secure your private keys, controlling access to your blockchain assets. Your private key provides complete control over all permitted transactions on your blockchain account, making it essential to keep it secure.",
    "outline": [
      {
        "depth": 2,
        "title": "What is a Blockchain Wallet?",
        "anchor": "what-is-a-blockchain-wallet"
      },
      {
        "depth": 2,
        "title": "Hot Wallets",
        "anchor": "hot-wallets"
      },
      {
        "depth": 2,
        "title": "Cold Wallets",
        "anchor": "cold-wallets"
      }
    ],
    "stats": {
      "chars": 2921,
      "words": 401,
      "headings": 3,
      "estimated_token_count_total": 633
    },
    "hash": "sha256:62c5ad101282227f79eac0e30a3ba9ce3ae1bf9e358bd58c0b17ef45db29c2ff",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-interoperability-xcm-tools",
    "title": "XCM Tools",
    "slug": "develop-toolkit-interoperability-xcm-tools",
    "categories": [
      "Basics",
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-interoperability-xcm-tools.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/interoperability/xcm-tools/",
    "preview": "As described in the [Interoperability](/develop/interoperability){target=\\_blank} section, XCM (Cross-Consensus Messaging) is a protocol used in the Polkadot and Kusama ecosystems to enable communication and interaction between chains. It facilitates cross-chain communication, allowing assets, data, and messages to flow seamlessly across the ecosystem.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Popular XCM Tools",
        "anchor": "popular-xcm-tools"
      },
      {
        "depth": 3,
        "title": "Moonsong Labs XCM Tools",
        "anchor": "moonsong-labs-xcm-tools"
      },
      {
        "depth": 3,
        "title": "ParaSpell",
        "anchor": "paraspell"
      },
      {
        "depth": 3,
        "title": "Astar XCM Tools",
        "anchor": "astar-xcm-tools"
      },
      {
        "depth": 3,
        "title": "Chopsticks",
        "anchor": "chopsticks"
      },
      {
        "depth": 3,
        "title": "Moonbeam XCM SDK",
        "anchor": "moonbeam-xcm-sdk"
      }
    ],
    "stats": {
      "chars": 7524,
      "words": 1043,
      "headings": 7,
      "estimated_token_count_total": 1700
    },
    "hash": "sha256:47328231d6ff4dc52cd93aaf1baf5d0bc2d9fc372f3d79339d87aafa0dabd1b8",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-parachains-e2e-testing-moonwall",
    "title": "E2E Testing with Moonwall",
    "slug": "develop-toolkit-parachains-e2e-testing-moonwall",
    "categories": [
      "Parachains",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-parachains-e2e-testing-moonwall.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/parachains/e2e-testing/moonwall/",
    "preview": "Moonwall is an end-to-end testing framework designed explicitly for Polkadot SDK-based blockchain networks. It addresses one of the most significant challenges in blockchain development: managing complex test environments and network configurations.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Install Moonwall",
        "anchor": "install-moonwall"
      },
      {
        "depth": 3,
        "title": "Global Installation",
        "anchor": "global-installation"
      },
      {
        "depth": 3,
        "title": "Local Installation",
        "anchor": "local-installation"
      },
      {
        "depth": 2,
        "title": "Initialize Moonwall",
        "anchor": "initialize-moonwall"
      },
      {
        "depth": 2,
        "title": "Writing Tests",
        "anchor": "writing-tests"
      },
      {
        "depth": 2,
        "title": "Running the Tests",
        "anchor": "running-the-tests"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 10247,
      "words": 1295,
      "headings": 9,
      "estimated_token_count_total": 2458
    },
    "hash": "sha256:d828ba5a039ab055d7c83dcf12358b1fb44a3b33455c7e6ccbacf858eafc0f1e",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-parachains-fork-chains-chopsticks-get-started",
    "title": "Get Started",
    "slug": "develop-toolkit-parachains-fork-chains-chopsticks-get-started",
    "categories": [
      "Parachains",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-parachains-fork-chains-chopsticks-get-started.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/parachains/fork-chains/chopsticks/get-started/",
    "preview": "[Chopsticks](https://github.com/AcalaNetwork/chopsticks/){target=\\_blank}, developed by the [Acala Foundation](https://github.com/AcalaNetwork){target=\\_blank}, is a versatile tool tailored for developers working on Polkadot SDK-based blockchains. With Chopsticks, you can fork live chains locally, replay blocks to analyze extrinsics, and simulate complex scenarios like XCM interactions all without deploying to a live network.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Install Chopsticks",
        "anchor": "install-chopsticks"
      },
      {
        "depth": 3,
        "title": "Global Installation",
        "anchor": "global-installation"
      },
      {
        "depth": 3,
        "title": "Local Installation",
        "anchor": "local-installation"
      },
      {
        "depth": 2,
        "title": "Configure Chopsticks",
        "anchor": "configure-chopsticks"
      },
      {
        "depth": 3,
        "title": "Configuration File",
        "anchor": "configuration-file"
      },
      {
        "depth": 3,
        "title": "CLI Flags",
        "anchor": "cli-flags"
      },
      {
        "depth": 2,
        "title": "WebSocket Commands",
        "anchor": "websocket-commands"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 10478,
      "words": 1328,
      "headings": 10,
      "estimated_token_count_total": 2611
    },
    "hash": "sha256:27d444cb54e4ccd5d2ee61396d72c14d2a46ca1d2560197a80a8ebd5243a8451",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-parachains-light-clients",
    "title": "develop-toolkit-parachains-light-clients",
    "slug": "develop-toolkit-parachains-light-clients",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-parachains-light-clients.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/parachains/light-clients/",
    "preview": "Light clients enable secure and efficient blockchain interaction without running a full node. They provide a trust-minimized alternative to JSON-RPC by verifying data through cryptographic proofs rather than blindly trusting remote nodes.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Light Clients Workflow",
        "anchor": "light-clients-workflow"
      },
      {
        "depth": 2,
        "title": "JSON-RPC and Light Client Comparison",
        "anchor": "json-rpc-and-light-client-comparison"
      },
      {
        "depth": 2,
        "title": "Using Light Clients",
        "anchor": "using-light-clients"
      },
      {
        "depth": 3,
        "title": "PAPI Light Client Support",
        "anchor": "papi-light-client-support"
      },
      {
        "depth": 3,
        "title": "Substrate Connect - Browser Extension",
        "anchor": "substrate-connect-browser-extension"
      },
      {
        "depth": 2,
        "title": "Resources",
        "anchor": "resources"
      }
    ],
    "stats": {
      "chars": 6490,
      "words": 870,
      "headings": 7,
      "estimated_token_count_total": 1430
    },
    "hash": "sha256:1284c42be692167e01bcc44e2e134ec20615402675fac26df246c00aa1588d80",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-parachains-polkadot-omni-node",
    "title": "Polkadot Omni Node",
    "slug": "develop-toolkit-parachains-polkadot-omni-node",
    "categories": [
      "Parachains",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-parachains-polkadot-omni-node.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/parachains/polkadot-omni-node/",
    "preview": "The [`polkadot-omni-node`](https://crates.io/crates/polkadot-omni-node/0.7.0){target=\\_blank} crate is a versatile, pre-built binary designed to simplify running parachains in the Polkadot ecosystem. Unlike traditional node binaries that are tightly coupled to specific runtime code, the `polkadot-omni-node` operates using an external [chain specification](/polkadot-protocol/glossary#chain-specification){target=\\_blank} file, allowing it to adapt dynamically to different parachains.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Install Polkadot Omni Node",
        "anchor": "install-polkadot-omni-node"
      },
      {
        "depth": 2,
        "title": "Obtain Chain Specifications",
        "anchor": "obtain-chain-specifications"
      },
      {
        "depth": 2,
        "title": "Run a Parachain Full Node",
        "anchor": "run-a-parachain-full-node"
      },
      {
        "depth": 2,
        "title": "Interact with the Node",
        "anchor": "interact-with-the-node"
      },
      {
        "depth": 2,
        "title": "Parachain Compatibility",
        "anchor": "parachain-compatibility"
      },
      {
        "depth": 3,
        "title": "Required Runtime APIs",
        "anchor": "required-runtime-apis"
      },
      {
        "depth": 3,
        "title": "Required Pallets",
        "anchor": "required-pallets"
      }
    ],
    "stats": {
      "chars": 8916,
      "words": 1165,
      "headings": 9,
      "estimated_token_count_total": 2018
    },
    "hash": "sha256:49866761ef638dd0683bb5558f5319b9568ff136295b3359580a6f478172c73f",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-parachains-quickstart-pop-cli",
    "title": "Quickstart Parachain Development with Pop CLI",
    "slug": "develop-toolkit-parachains-quickstart-pop-cli",
    "categories": [
      "Parachains",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-parachains-quickstart-pop-cli.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/parachains/quickstart/pop-cli/",
    "preview": "[Pop CLI](https://onpop.io/cli/){target=\\_blank} is a powerful command-line tool designed explicitly for rapid parachain development within the Polkadot ecosystem. It addresses essential developer needs by providing streamlined commands to set up development environments, scaffold parachain templates, and manage local blockchain networks.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 3,
        "title": "Install Pop CLI",
        "anchor": "install-pop-cli"
      },
      {
        "depth": 3,
        "title": "Set Up Your Development Environment",
        "anchor": "set-up-your-development-environment"
      },
      {
        "depth": 3,
        "title": "Initialize a Project",
        "anchor": "initialize-a-project"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 4250,
      "words": 611,
      "headings": 5,
      "estimated_token_count_total": 1004
    },
    "hash": "sha256:e94ada8684dc4a021b6cb12008739ee12eeb1e6529fcaac0e5151570c4b35309",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-parachains-remote-proxies",
    "title": "Remote Proxies",
    "slug": "develop-toolkit-parachains-remote-proxies",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-parachains-remote-proxies.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/parachains/remote-proxies/",
    "preview": "!!!warning \"Kusama Implementation Only\" Remote proxies are currently only available on Kusama and its parachains (such as Kusama Asset Hub). This feature is not yet deployed on Polkadot MainNet. The examples and implementations described in this guide are specific to the Kusama ecosystem.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Remote Proxy Architecture",
        "anchor": "remote-proxy-architecture"
      },
      {
        "depth": 2,
        "title": "Implementation Workflow",
        "anchor": "implementation-workflow"
      },
      {
        "depth": 2,
        "title": "Practical Implementation",
        "anchor": "practical-implementation"
      },
      {
        "depth": 3,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 3,
        "title": "Installation and Setup",
        "anchor": "installation-and-setup"
      },
      {
        "depth": 3,
        "title": "Implementation Example",
        "anchor": "implementation-example"
      },
      {
        "depth": 2,
        "title": "Resources",
        "anchor": "resources"
      }
    ],
    "stats": {
      "chars": 9086,
      "words": 1116,
      "headings": 8,
      "estimated_token_count_total": 1870
    },
    "hash": "sha256:6b2e668ac67732ff570cca8c1a9fef6eff3589046c2c88305e6090eccc304f30",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-parachains-rpc-calls",
    "title": "RPC Calls to Polkadot SDK chains.",
    "slug": "develop-toolkit-parachains-rpc-calls",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-parachains-rpc-calls.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/parachains/rpc-calls/",
    "preview": "[Remote Procedure Call](https://en.wikipedia.org/wiki/Remote_procedure_call){target=\\_blank} (RPC) interfaces are the primary way to interact programmatically with Polkadot SDK-based parachains and relay chains. RPC calls allow you to query chain state, submit transactions, and monitor network health from external applications or scripts.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "How Do RPC Calls Work?",
        "anchor": "how-do-rpc-calls-work"
      },
      {
        "depth": 2,
        "title": "Making RPC Calls with Curl",
        "anchor": "making-rpc-calls-with-curl"
      },
      {
        "depth": 2,
        "title": "Essential RPC Methods",
        "anchor": "essential-rpc-methods"
      },
      {
        "depth": 3,
        "title": "system_health",
        "anchor": "system_health"
      },
      {
        "depth": 3,
        "title": "chain_getBlock",
        "anchor": "chain_getblock"
      },
      {
        "depth": 3,
        "title": "state_getStorage",
        "anchor": "state_getstorage"
      },
      {
        "depth": 3,
        "title": "author_submitExtrinsic",
        "anchor": "author_submitextrinsic"
      },
      {
        "depth": 3,
        "title": "state_getMetadata",
        "anchor": "state_getmetadata"
      },
      {
        "depth": 2,
        "title": "Check Available RPC Calls",
        "anchor": "check-available-rpc-calls"
      },
      {
        "depth": 3,
        "title": "Using curl",
        "anchor": "using-curl"
      },
      {
        "depth": 3,
        "title": "Using Polkadot.js Apps",
        "anchor": "using-polkadotjs-apps"
      },
      {
        "depth": 2,
        "title": "Resources",
        "anchor": "resources"
      }
    ],
    "stats": {
      "chars": 6496,
      "words": 909,
      "headings": 13,
      "estimated_token_count_total": 1870
    },
    "hash": "sha256:3b766e00e55a224201bc6744386a6dabc7da54ed9199b16abab3b94cff449eca",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-parachains-spawn-chains-zombienet-get-started",
    "title": "Get Started",
    "slug": "develop-toolkit-parachains-spawn-chains-zombienet-get-started",
    "categories": [
      "Parachains",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-parachains-spawn-chains-zombienet-get-started.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/parachains/spawn-chains/zombienet/get-started/",
    "preview": "Zombienet is a robust testing framework designed for Polkadot SDK-based blockchain networks. It enables developers to efficiently deploy and test ephemeral blockchain environments on platforms like Kubernetes, Podman, and native setups. With its simple and versatile CLI, Zombienet provides an all-in-one solution for spawning networks, running tests, and validating performance.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Install Zombienet",
        "anchor": "install-zombienet"
      },
      {
        "depth": 2,
        "title": "Providers",
        "anchor": "providers"
      },
      {
        "depth": 3,
        "title": "Kubernetes",
        "anchor": "kubernetes"
      },
      {
        "depth": 3,
        "title": "Podman",
        "anchor": "podman"
      },
      {
        "depth": 3,
        "title": "Local Provider",
        "anchor": "local-provider"
      },
      {
        "depth": 2,
        "title": "Configure Zombienet",
        "anchor": "configure-zombienet"
      },
      {
        "depth": 3,
        "title": "Configuration Files",
        "anchor": "configuration-files"
      },
      {
        "depth": 3,
        "title": "CLI Usage",
        "anchor": "cli-usage"
      },
      {
        "depth": 3,
        "title": "Settings",
        "anchor": "settings"
      },
      {
        "depth": 3,
        "title": "Relay Chain Configuration",
        "anchor": "relay-chain-configuration"
      },
      {
        "depth": 3,
        "title": "Parachain Configuration",
        "anchor": "parachain-configuration"
      },
      {
        "depth": 3,
        "title": "XCM Configuration",
        "anchor": "xcm-configuration"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 41044,
      "words": 4599,
      "headings": 14,
      "estimated_token_count_total": 9883
    },
    "hash": "sha256:f4a6423c877eae3e85b17ed98202ef89fcf4ee6f8885794368381d40140df5a4",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-parachains-spawn-chains-zombienet-write-tests",
    "title": "Write Tests",
    "slug": "develop-toolkit-parachains-spawn-chains-zombienet-write-tests",
    "categories": [
      "Parachains",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-parachains-spawn-chains-zombienet-write-tests.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/parachains/spawn-chains/zombienet/write-tests/",
    "preview": "Testing is a critical step in blockchain development, ensuring reliability, performance, and security. Zombienet simplifies this process with its intuitive Domain Specific Language (DSL), enabling developers to write natural-language test scripts tailored to their network needs.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Testing DSL",
        "anchor": "testing-dsl"
      },
      {
        "depth": 2,
        "title": "The Test File",
        "anchor": "the-test-file"
      },
      {
        "depth": 3,
        "title": "Name",
        "anchor": "name"
      },
      {
        "depth": 3,
        "title": "Assertions",
        "anchor": "assertions"
      },
      {
        "depth": 3,
        "title": "Commands",
        "anchor": "commands"
      },
      {
        "depth": 2,
        "title": "Running a Test",
        "anchor": "running-a-test"
      },
      {
        "depth": 2,
        "title": "Example Test Files",
        "anchor": "example-test-files"
      }
    ],
    "stats": {
      "chars": 11200,
      "words": 1491,
      "headings": 8,
      "estimated_token_count_total": 2664
    },
    "hash": "sha256:ed0eb5028d99e6baf76092568e4e8f0129a3b2dbfe4510fbdfdfe7aa22b219ce",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "get-support-ai-ready-docs",
    "title": "AI Ready Docs",
    "slug": "get-support-ai-ready-docs",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/get-support-ai-ready-docs.md",
    "html_url": "https://docs.polkadot.com/get-support/ai-ready-docs/",
    "preview": "Polkadot provides files to make documentation content available in a structure optimized for use with large language models (LLMs) and AI tools. These resources help build AI assistants, power code search, or enable custom tooling trained on Polkadot’s documentation.",
    "outline": [
      {
        "depth": 2,
        "title": "How to Use These Files",
        "anchor": "how-to-use-these-files"
      },
      {
        "depth": 2,
        "title": "Download LLM Files",
        "anchor": "download-llm-files"
      }
    ],
    "stats": {
      "chars": 6976,
      "words": 685,
      "headings": 2,
      "estimated_token_count_total": 1795
    },
    "hash": "sha256:da0197ece553b3a1bde242ba860ef5bffe8ebe4872e4f9ebf4799daa42bea40e",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "get-support-explore-resources",
    "title": "Subscribe to Updates",
    "slug": "get-support-explore-resources",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/get-support-explore-resources.md",
    "html_url": "https://docs.polkadot.com/get-support/explore-resources/",
    "preview": "Looking for answers beyond the documentation? These platforms are full of useful content and experienced developers sharing insights.",
    "outline": [
      {
        "depth": 2,
        "title": "🧠 Stack Exchange",
        "anchor": "stack-exchange"
      },
      {
        "depth": 2,
        "title": "🧵 Reddit: r/Polkadot",
        "anchor": "reddit-rpolkadot"
      },
      {
        "depth": 2,
        "title": "💬 Discord (Community Threads Only)",
        "anchor": "discord-community-threads-only"
      },
      {
        "depth": 2,
        "title": "🎥 YouTube: @PolkadotNetwork",
        "anchor": "youtube-polkadotnetwork"
      },
      {
        "depth": 2,
        "title": "Community-Led Platforms and Ecosystem Updates",
        "anchor": "community-led-platforms-and-ecosystem-updates"
      },
      {
        "depth": 3,
        "title": "🔷 X (Twitter): Official Accounts",
        "anchor": "x-twitter-official-accounts"
      },
      {
        "depth": 3,
        "title": "🔁 X (Twitter): Community Accounts",
        "anchor": "x-twitter-community-accounts"
      },
      {
        "depth": 3,
        "title": "🗣️ Polkadot Forum",
        "anchor": "polkadot-forum"
      },
      {
        "depth": 3,
        "title": "🧑‍⚖️ Polkassembly: OpenGov",
        "anchor": "polkassembly-opengov"
      },
      {
        "depth": 3,
        "title": "📸 Instagram",
        "anchor": "instagram"
      }
    ],
    "stats": {
      "chars": 2456,
      "words": 295,
      "headings": 10,
      "estimated_token_count_total": 579
    },
    "hash": "sha256:4c33d0ec5026128b3bfdb1dfc1f4b29487404eaa8043071d536e8638356c6e1f",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "get-support-get-in-touch",
    "title": "Get in Touch",
    "slug": "get-support-get-in-touch",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/get-support-get-in-touch.md",
    "html_url": "https://docs.polkadot.com/get-support/get-in-touch/",
    "preview": "Use one of the channels below to get live technical support or ask questions.",
    "outline": [
      {
        "depth": 2,
        "title": "Need Help Fast?",
        "anchor": "need-help-fast"
      },
      {
        "depth": 2,
        "title": "📱 Telegram: Polkadot Developer Support",
        "anchor": "telegram-polkadot-developer-support"
      },
      {
        "depth": 2,
        "title": "🔌 Discord: Polkadot Official Server",
        "anchor": "discord-polkadot-official-server"
      },
      {
        "depth": 2,
        "title": "🧬 Matrix: Polkadot Developer Support",
        "anchor": "matrix-polkadot-developer-support"
      }
    ],
    "stats": {
      "chars": 1949,
      "words": 258,
      "headings": 4,
      "estimated_token_count_total": 557
    },
    "hash": "sha256:993e93b05c8fbdfc2f7510c61ac86bc4c2ff0f03e573695b2f260933c8b62f78",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-node-setup-bootnode",
    "title": "Set Up a Bootnode",
    "slug": "infrastructure-running-a-node-setup-bootnode",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-node-setup-bootnode.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-node/setup-bootnode/",
    "preview": "Bootnodes are essential for helping blockchain nodes discover peers and join the network. When a node starts, it needs to find other nodes, and bootnodes provide an initial point of contact. Once connected, a node can expand its peer connections and play its role in the network, like participating as a validator.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Accessing the Bootnode",
        "anchor": "accessing-the-bootnode"
      },
      {
        "depth": 2,
        "title": "Node Key",
        "anchor": "node-key"
      },
      {
        "depth": 2,
        "title": "Running the Bootnode",
        "anchor": "running-the-bootnode"
      },
      {
        "depth": 2,
        "title": "Testing Bootnode Connection",
        "anchor": "testing-bootnode-connection"
      },
      {
        "depth": 3,
        "title": "P2P",
        "anchor": "p2p"
      },
      {
        "depth": 3,
        "title": "P2P/WS",
        "anchor": "p2pws"
      },
      {
        "depth": 3,
        "title": "P2P/WSS",
        "anchor": "p2pwss"
      }
    ],
    "stats": {
      "chars": 4539,
      "words": 647,
      "headings": 9,
      "estimated_token_count_total": 1045
    },
    "hash": "sha256:219cfa8542b0053b8b3a1d6a5d466c2ae158d72cf3ddbcdede6321df31ab5901",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-node-setup-full-node",
    "title": "Set Up a Node",
    "slug": "infrastructure-running-a-node-setup-full-node",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-node-setup-full-node.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-node/setup-full-node/",
    "preview": "Running a node on Polkadot provides direct interaction with the network, enhanced privacy, and full control over RPC requests, transactions, and data queries. As the backbone of the network, nodes ensure decentralized data propagation, transaction validation, and seamless communication across the ecosystem.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Set Up a Node",
        "anchor": "set-up-a-node"
      },
      {
        "depth": 3,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 3,
        "title": "Install and Build the Polkadot Binary",
        "anchor": "install-and-build-the-polkadot-binary"
      },
      {
        "depth": 3,
        "title": "Use Docker",
        "anchor": "use-docker"
      },
      {
        "depth": 2,
        "title": "Configure and Run Your Node",
        "anchor": "configure-and-run-your-node"
      },
      {
        "depth": 3,
        "title": "RPC Configurations",
        "anchor": "rpc-configurations"
      },
      {
        "depth": 2,
        "title": "Sync Your Node",
        "anchor": "sync-your-node"
      },
      {
        "depth": 3,
        "title": "Connect to Your Node",
        "anchor": "connect-to-your-node"
      }
    ],
    "stats": {
      "chars": 15957,
      "words": 2502,
      "headings": 9,
      "estimated_token_count_total": 4232
    },
    "hash": "sha256:17294fb30140aeb9472c30fe84e4330ff62c7454364c70d2f17d2b27bfa8b03d",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-node-setup-secure-wss",
    "title": "Set Up Secure WebSocket",
    "slug": "infrastructure-running-a-node-setup-secure-wss",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-node-setup-secure-wss.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-node/setup-secure-wss/",
    "preview": "Ensuring secure WebSocket communication is crucial for maintaining the integrity and security of a Polkadot or Kusama node when interacting with remote clients. This guide walks you through setting up a secure WebSocket (WSS) connection for your node by leveraging SSL encryption with popular web server proxies like nginx or Apache.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Secure a WebSocket Port",
        "anchor": "secure-a-websocket-port"
      },
      {
        "depth": 3,
        "title": "Obtain an SSL Certificate",
        "anchor": "obtain-an-ssl-certificate"
      }
    ],
    "stats": {
      "chars": 5479,
      "words": 777,
      "headings": 3,
      "estimated_token_count_total": 1291
    },
    "hash": "sha256:3ba288f1f72753401faa9ee9fea427c50ffd5ea1c9c2036c2f3e1245020897f1",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-validator-onboarding-and-offboarding-key-management",
    "title": "Validator Key Management",
    "slug": "infrastructure-running-a-validator-onboarding-and-offboarding-key-management",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-validator-onboarding-and-offboarding-key-management.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-validator/onboarding-and-offboarding/key-management/",
    "preview": "After setting up your node environment as shown in the [Setup](/infrastructure/running-a-validator/onboarding-and-offboarding/set-up-validator){target=\\_blank} section, you'll need to configure multiple keys for your validator to operate properly. This includes setting up session keys, which are essential for participating in the consensus process, and configuring a node key that maintains a stable network identity. This guide walks you through the key management process, showing you how to gene",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Set Session Keys",
        "anchor": "set-session-keys"
      },
      {
        "depth": 3,
        "title": "Generate Session Keys",
        "anchor": "generate-session-keys"
      },
      {
        "depth": 3,
        "title": "Submit Transaction to Set Keys",
        "anchor": "submit-transaction-to-set-keys"
      },
      {
        "depth": 3,
        "title": "Verify Session Key Setup",
        "anchor": "verify-session-key-setup"
      },
      {
        "depth": 2,
        "title": "Set the Node Key",
        "anchor": "set-the-node-key"
      },
      {
        "depth": 3,
        "title": "Generate the Node Key",
        "anchor": "generate-the-node-key"
      },
      {
        "depth": 3,
        "title": "Set Node Key",
        "anchor": "set-node-key"
      }
    ],
    "stats": {
      "chars": 8178,
      "words": 1177,
      "headings": 8,
      "estimated_token_count_total": 1829
    },
    "hash": "sha256:ab9c5982b3394bd0ec73d5e98cad9ceeacaedf5ac05a3ca034c317a0f6779bc4",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-validator-onboarding-and-offboarding-set-up-validator",
    "title": "Set Up a Validator",
    "slug": "infrastructure-running-a-validator-onboarding-and-offboarding-set-up-validator",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-validator-onboarding-and-offboarding-set-up-validator.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-validator/onboarding-and-offboarding/set-up-validator/",
    "preview": "Setting up a Polkadot validator node is essential for securing the network and earning staking rewards. This guide walks you through the technical steps to set up a validator, from installing the necessary software to managing keys and synchronizing your node with the chain.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Initial Setup",
        "anchor": "initial-setup"
      },
      {
        "depth": 3,
        "title": "Install Network Time Protocol Client",
        "anchor": "install-network-time-protocol-client"
      },
      {
        "depth": 3,
        "title": "Verify Landlock is Activated",
        "anchor": "verify-landlock-is-activated"
      },
      {
        "depth": 2,
        "title": "Install the Polkadot Binaries",
        "anchor": "install-the-polkadot-binaries"
      },
      {
        "depth": 3,
        "title": "Install from Official Releases",
        "anchor": "install-from-official-releases"
      },
      {
        "depth": 3,
        "title": "Install with Package Managers",
        "anchor": "install-with-package-managers"
      },
      {
        "depth": 3,
        "title": "Install with Ansible",
        "anchor": "install-with-ansible"
      },
      {
        "depth": 3,
        "title": "Install with Docker",
        "anchor": "install-with-docker"
      },
      {
        "depth": 3,
        "title": "Build from Sources",
        "anchor": "build-from-sources"
      },
      {
        "depth": 2,
        "title": "Verify Installation",
        "anchor": "verify-installation"
      }
    ],
    "stats": {
      "chars": 11845,
      "words": 1654,
      "headings": 12,
      "estimated_token_count_total": 2544
    },
    "hash": "sha256:32ac11adda1305ac195a7c5149e69c9956aa57745f93cb15b8bdae1426e5cd25",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-validator-onboarding-and-offboarding-start-validating",
    "title": "Start Validating",
    "slug": "infrastructure-running-a-validator-onboarding-and-offboarding-start-validating",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-validator-onboarding-and-offboarding-start-validating.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-validator/onboarding-and-offboarding/start-validating/",
    "preview": "After configuring your node keys as shown in the [Key Management](/infrastructure/running-a-validator/onboarding-and-offboarding/key-management){target=\\_blank} section and ensuring your system is set up, you're ready to begin the validator setup process. This guide will walk you through choosing a network, synchronizing your node with the blockchain, bonding your DOT tokens, and starting your validator.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Choose a Network",
        "anchor": "choose-a-network"
      },
      {
        "depth": 2,
        "title": "Synchronize Chain Data",
        "anchor": "synchronize-chain-data"
      },
      {
        "depth": 3,
        "title": "Database Snapshot Services",
        "anchor": "database-snapshot-services"
      },
      {
        "depth": 2,
        "title": "Bond DOT",
        "anchor": "bond-dot"
      },
      {
        "depth": 3,
        "title": "Bonding DOT on Polkadot.js Apps",
        "anchor": "bonding-dot-on-polkadotjs-apps"
      },
      {
        "depth": 2,
        "title": "Validate",
        "anchor": "validate"
      },
      {
        "depth": 3,
        "title": "Verify Sync via Telemetry",
        "anchor": "verify-sync-via-telemetry"
      },
      {
        "depth": 3,
        "title": "Activate using Polkadot.js Apps",
        "anchor": "activate-using-polkadotjs-apps"
      },
      {
        "depth": 3,
        "title": "Monitor Validation Status and Slots",
        "anchor": "monitor-validation-status-and-slots"
      },
      {
        "depth": 2,
        "title": "Run a Validator Using Systemd",
        "anchor": "run-a-validator-using-systemd"
      },
      {
        "depth": 3,
        "title": "Create the Systemd Service File",
        "anchor": "create-the-systemd-service-file"
      },
      {
        "depth": 3,
        "title": "Run the Service",
        "anchor": "run-the-service"
      }
    ],
    "stats": {
      "chars": 16150,
      "words": 2502,
      "headings": 13,
      "estimated_token_count_total": 3877
    },
    "hash": "sha256:5c86d11c543c57ff31f51ff7de61116e33861de6e15b49b9944caebc9464f970",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-validator-onboarding-and-offboarding-stop-validating",
    "title": "Stop Validating",
    "slug": "infrastructure-running-a-validator-onboarding-and-offboarding-stop-validating",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-validator-onboarding-and-offboarding-stop-validating.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-validator/onboarding-and-offboarding/stop-validating/",
    "preview": "If you're ready to stop validating on Polkadot, there are essential steps to ensure a smooth transition while protecting your funds and account integrity. Whether you're taking a break for maintenance or unbonding entirely, you'll need to chill your validator, purge session keys, and unbond your tokens. This guide explains how to use Polkadot's tools and extrinsics to safely withdraw from validation activities, safeguarding your account's future usability.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Pause Versus Stop",
        "anchor": "pause-versus-stop"
      },
      {
        "depth": 2,
        "title": "Chill Validator",
        "anchor": "chill-validator"
      },
      {
        "depth": 2,
        "title": "Purge Validator Session Keys",
        "anchor": "purge-validator-session-keys"
      },
      {
        "depth": 2,
        "title": "Unbond Your Tokens",
        "anchor": "unbond-your-tokens"
      }
    ],
    "stats": {
      "chars": 3228,
      "words": 498,
      "headings": 5,
      "estimated_token_count_total": 625
    },
    "hash": "sha256:9ab570299106336e5d75923b876247e8eb4a71851a77e84d68e0335e9da5e0a8",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-validator-operational-tasks-general-management",
    "title": "General Management",
    "slug": "infrastructure-running-a-validator-operational-tasks-general-management",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-validator-operational-tasks-general-management.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-validator/operational-tasks/general-management/",
    "preview": "Validator performance is pivotal in maintaining the security and stability of the Polkadot network. As a validator, optimizing your setup ensures efficient transaction processing, minimizes latency, and maintains system reliability during high-demand periods. Proper configuration and proactive monitoring also help mitigate risks like slashing and service interruptions.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Configuration Optimization",
        "anchor": "configuration-optimization"
      },
      {
        "depth": 3,
        "title": "Deactivate Simultaneous Multithreading",
        "anchor": "deactivate-simultaneous-multithreading"
      },
      {
        "depth": 3,
        "title": "Deactivate Automatic NUMA Balancing",
        "anchor": "deactivate-automatic-numa-balancing"
      },
      {
        "depth": 3,
        "title": "Spectre and Meltdown Mitigations",
        "anchor": "spectre-and-meltdown-mitigations"
      },
      {
        "depth": 2,
        "title": "Monitor Your Node",
        "anchor": "monitor-your-node"
      },
      {
        "depth": 3,
        "title": "Environment Setup",
        "anchor": "environment-setup"
      },
      {
        "depth": 3,
        "title": "Install and Configure Prometheus",
        "anchor": "install-and-configure-prometheus"
      },
      {
        "depth": 3,
        "title": "Start Prometheus",
        "anchor": "start-prometheus"
      },
      {
        "depth": 3,
        "title": "Install and Configure Grafana",
        "anchor": "install-and-configure-grafana"
      },
      {
        "depth": 3,
        "title": "Install and Configure Alertmanager",
        "anchor": "install-and-configure-alertmanager"
      },
      {
        "depth": 2,
        "title": "Secure Your Validator",
        "anchor": "secure-your-validator"
      },
      {
        "depth": 3,
        "title": "Key Management",
        "anchor": "key-management"
      },
      {
        "depth": 3,
        "title": "Signing Outside the Client",
        "anchor": "signing-outside-the-client"
      },
      {
        "depth": 3,
        "title": "Secure-Validator Mode",
        "anchor": "secure-validator-mode"
      },
      {
        "depth": 3,
        "title": "Linux Best Practices",
        "anchor": "linux-best-practices"
      },
      {
        "depth": 3,
        "title": "Validator Best Practices",
        "anchor": "validator-best-practices"
      },
      {
        "depth": 2,
        "title": "Additional Resources",
        "anchor": "additional-resources"
      }
    ],
    "stats": {
      "chars": 25922,
      "words": 3328,
      "headings": 18,
      "estimated_token_count_total": 5776
    },
    "hash": "sha256:21a3bdf2363c9e3ba2c4885fb51f830007e292cae133b2af115ae5fc5c01ec43",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-validator-operational-tasks-pause-validating",
    "title": "Pause Validating",
    "slug": "infrastructure-running-a-validator-operational-tasks-pause-validating",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-validator-operational-tasks-pause-validating.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-validator/operational-tasks/pause-validating/",
    "preview": "If you need to temporarily stop participating in Polkadot staking activities without fully unbonding your funds, chilling your account allows you to do so efficiently. Chilling removes your node from active validation or nomination in the next era while keeping your funds bonded, making it ideal for planned downtimes or temporary pauses.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Chilling Your Node",
        "anchor": "chilling-your-node"
      },
      {
        "depth": 2,
        "title": "Staking Election Timing Considerations",
        "anchor": "staking-election-timing-considerations"
      },
      {
        "depth": 2,
        "title": "Chilling as a Nominator",
        "anchor": "chilling-as-a-nominator"
      },
      {
        "depth": 2,
        "title": "Chilling as a Validator",
        "anchor": "chilling-as-a-validator"
      },
      {
        "depth": 2,
        "title": "Chill Other",
        "anchor": "chill-other"
      }
    ],
    "stats": {
      "chars": 4437,
      "words": 679,
      "headings": 6,
      "estimated_token_count_total": 861
    },
    "hash": "sha256:97655248c65e816fdf3d85dab4ace7ca0c145c50f671c25c24627cfd7660c7a6",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-validator-operational-tasks-upgrade-your-node",
    "title": "Upgrade a Validator Node",
    "slug": "infrastructure-running-a-validator-operational-tasks-upgrade-your-node",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-validator-operational-tasks-upgrade-your-node.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-validator/operational-tasks/upgrade-your-node/",
    "preview": "Upgrading a Polkadot validator node is essential for staying current with network updates and maintaining optimal performance. This guide covers routine and extended maintenance scenarios, including software upgrades and major server changes. Following these steps, you can manage session keys and transition smoothly between servers without risking downtime, slashing, or network disruptions. The process requires strategic planning, especially if you need to perform long-lead maintenance, ensuring",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Session Keys",
        "anchor": "session-keys"
      },
      {
        "depth": 2,
        "title": "Keystore",
        "anchor": "keystore"
      },
      {
        "depth": 2,
        "title": "Upgrade Using Backup Validator",
        "anchor": "upgrade-using-backup-validator"
      },
      {
        "depth": 3,
        "title": "Session `N`",
        "anchor": "session-n"
      },
      {
        "depth": 3,
        "title": "Session `N+3`",
        "anchor": "session-n3"
      }
    ],
    "stats": {
      "chars": 5625,
      "words": 842,
      "headings": 7,
      "estimated_token_count_total": 1168
    },
    "hash": "sha256:0763bb5d3ce16e3007359e2f225fe8ac7ab64011f35c592e7df58bdf7817835f",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-validator-requirements",
    "title": "Validator Requirements",
    "slug": "infrastructure-running-a-validator-requirements",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-validator-requirements.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-validator/requirements/",
    "preview": "Running a validator in the Polkadot ecosystem is essential for maintaining network security and decentralization. Validators are responsible for validating transactions and adding new blocks to the chain, ensuring the system operates smoothly. In return for their services, validators earn rewards. However, the role comes with inherent risks, such as slashing penalties for misbehavior or technical failures. If you’re new to validation, starting on Kusama provides a lower-stakes environment to gai",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Minimum Hardware Requirements",
        "anchor": "minimum-hardware-requirements"
      },
      {
        "depth": 2,
        "title": "VPS Provider List",
        "anchor": "vps-provider-list"
      },
      {
        "depth": 2,
        "title": "Minimum Bond Requirement",
        "anchor": "minimum-bond-requirement"
      }
    ],
    "stats": {
      "chars": 6836,
      "words": 939,
      "headings": 5,
      "estimated_token_count_total": 1476
    },
    "hash": "sha256:7673201fe53809f0bdcd937212fa30327996e52cb08d4bb44a5a64e1a14ad5fe",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-staking-mechanics-offenses-and-slashes",
    "title": "Offenses and Slashes",
    "slug": "infrastructure-staking-mechanics-offenses-and-slashes",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-staking-mechanics-offenses-and-slashes.md",
    "html_url": "https://docs.polkadot.com/infrastructure/staking-mechanics/offenses-and-slashes/",
    "preview": "In Polkadot's Nominated Proof of Stake (NPoS) system, validator misconduct is deterred through a combination of slashing, disabling, and reputation penalties. Validators and nominators who stake tokens face consequences for validator misbehavior, which range from token slashes to restrictions on network participation.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Offenses",
        "anchor": "offenses"
      },
      {
        "depth": 3,
        "title": "Invalid Votes",
        "anchor": "invalid-votes"
      },
      {
        "depth": 3,
        "title": "Equivocations",
        "anchor": "equivocations"
      },
      {
        "depth": 2,
        "title": "Penalties",
        "anchor": "penalties"
      },
      {
        "depth": 3,
        "title": "Slashing",
        "anchor": "slashing"
      },
      {
        "depth": 3,
        "title": "Disabling",
        "anchor": "disabling"
      },
      {
        "depth": 3,
        "title": "Reputation Changes",
        "anchor": "reputation-changes"
      },
      {
        "depth": 3,
        "title": "Penalties by Offense",
        "anchor": "penalties-by-offense"
      }
    ],
    "stats": {
      "chars": 15427,
      "words": 2103,
      "headings": 9,
      "estimated_token_count_total": 3409
    },
    "hash": "sha256:abe6bedab04f463ec07f554977b8d6355a5d2fad9bcda01cbe58568152295daa",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-staking-mechanics-rewards-payout",
    "title": "Rewards Payout",
    "slug": "infrastructure-staking-mechanics-rewards-payout",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-staking-mechanics-rewards-payout.md",
    "html_url": "https://docs.polkadot.com/infrastructure/staking-mechanics/rewards-payout/",
    "preview": "Understanding how rewards are distributed to validators and nominators is essential for network participants. In Polkadot and Kusama, validators earn rewards based on their era points, which are accrued through actions like block production and parachain validation.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Era Points",
        "anchor": "era-points"
      },
      {
        "depth": 2,
        "title": "Reward Variance",
        "anchor": "reward-variance"
      },
      {
        "depth": 2,
        "title": "Payout Scheme",
        "anchor": "payout-scheme"
      },
      {
        "depth": 2,
        "title": "Running Multiple Validators",
        "anchor": "running-multiple-validators"
      },
      {
        "depth": 2,
        "title": "Nominators and Validator Payments",
        "anchor": "nominators-and-validator-payments"
      }
    ],
    "stats": {
      "chars": 11070,
      "words": 1764,
      "headings": 6,
      "estimated_token_count_total": 2617
    },
    "hash": "sha256:7d43408276d811c96b7b081a7b9f4d884893282a230b564c9eb3be2fc7857565",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-architecture-parachains-consensus",
    "title": "Parachain Consensus",
    "slug": "polkadot-protocol-architecture-parachains-consensus",
    "categories": [
      "Polkadot Protocol",
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-architecture-parachains-consensus.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/architecture/parachains/consensus/",
    "preview": "Parachains are independent blockchains built with the Polkadot SDK, designed to leverage Polkadot’s relay chain for shared security and transaction finality. These specialized chains operate as part of Polkadot’s execution sharding model, where each parachain manages its own state and transactions while relying on the relay chain for validation and consensus.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "The Role of Collators",
        "anchor": "the-role-of-collators"
      },
      {
        "depth": 2,
        "title": "Consensus and Validation",
        "anchor": "consensus-and-validation"
      },
      {
        "depth": 3,
        "title": "Path of a Parachain Block",
        "anchor": "path-of-a-parachain-block"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 6158,
      "words": 791,
      "headings": 5,
      "estimated_token_count_total": 1127
    },
    "hash": "sha256:a476a8f00a86860deb76ceb77de6eecc3d5ed17601841165a53176512ef7d1a6",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-architecture-parachains-overview",
    "title": "Overview",
    "slug": "polkadot-protocol-architecture-parachains-overview",
    "categories": [
      "Basics",
      "Polkadot Protocol",
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-architecture-parachains-overview.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/architecture/parachains/overview/",
    "preview": "A [_parachain_](/polkadot-protocol/glossary#parachain){target=\\_blank} is a coherent, application-specific blockchain that derives security from its respective relay chain. Parachains on Polkadot are each their own separate, fully functioning blockchain. The primary difference between a parachain and a regular, \"solo\" blockchain is that the relay chain verifies the state of all parachains that are connected to it. In many ways, parachains can be thought of as a [\"cynical\" rollup](#cryptoeconomic",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Coherent Systems",
        "anchor": "coherent-systems"
      },
      {
        "depth": 2,
        "title": "Flexible Ecosystem",
        "anchor": "flexible-ecosystem"
      },
      {
        "depth": 2,
        "title": "State Transition Functions (Runtimes)",
        "anchor": "state-transition-functions-runtimes"
      },
      {
        "depth": 2,
        "title": "Shared Security: Validated by the Relay Chain",
        "anchor": "shared-security-validated-by-the-relay-chain"
      },
      {
        "depth": 3,
        "title": "Cryptoeconomic Security: ELVES Protocol",
        "anchor": "cryptoeconomic-security-elves-protocol"
      },
      {
        "depth": 2,
        "title": "Interoperability",
        "anchor": "interoperability"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 9565,
      "words": 1324,
      "headings": 8,
      "estimated_token_count_total": 1867
    },
    "hash": "sha256:4681fa2a9a5e44a52035ac9e58fb2f5e2abb667c36df94bfb1d4575293129134",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-architecture-polkadot-chain-agile-coretime",
    "title": "Agile Coretime",
    "slug": "polkadot-protocol-architecture-polkadot-chain-agile-coretime",
    "categories": [
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-architecture-polkadot-chain-agile-coretime.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/architecture/polkadot-chain/agile-coretime/",
    "preview": "Agile Coretime is the [scheduling](https://en.wikipedia.org/wiki/Scheduling_(computing)){target=\\_blank} framework on Polkadot that lets parachains efficiently access cores, which comprise an active validator set tasked with parablock validation. As the first blockchain to enable a flexible scheduling system for blockspace production, Polkadot offers unparalleled adaptability for parachains.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Bulk Coretime",
        "anchor": "bulk-coretime"
      },
      {
        "depth": 3,
        "title": "Coretime Interlacing",
        "anchor": "coretime-interlacing"
      },
      {
        "depth": 3,
        "title": "Coretime Splitting",
        "anchor": "coretime-splitting"
      },
      {
        "depth": 2,
        "title": "On-Demand Coretime",
        "anchor": "on-demand-coretime"
      }
    ],
    "stats": {
      "chars": 3028,
      "words": 452,
      "headings": 5,
      "estimated_token_count_total": 619
    },
    "hash": "sha256:00be43ac8d666bbe15c5c2fa5a5085697d0bb5a6f341ebbb943a209f0be355df",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-architecture-polkadot-chain-elastic-scaling",
    "title": "Elastic Scaling",
    "slug": "polkadot-protocol-architecture-polkadot-chain-elastic-scaling",
    "categories": [
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-architecture-polkadot-chain-elastic-scaling.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/architecture/polkadot-chain/elastic-scaling/",
    "preview": "Polkadot's architecture delivers scalability and security through its shared security model, where the relay chain coordinates and validates multiple parallel chains.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "How Elastic Scaling Works",
        "anchor": "how-elastic-scaling-works"
      },
      {
        "depth": 2,
        "title": "Benefits of Elastic Scaling",
        "anchor": "benefits-of-elastic-scaling"
      },
      {
        "depth": 2,
        "title": "Use Cases",
        "anchor": "use-cases"
      },
      {
        "depth": 3,
        "title": "Handling Sudden Traffic Spikes",
        "anchor": "handling-sudden-traffic-spikes"
      },
      {
        "depth": 3,
        "title": "Supporting Early-Stage Growth",
        "anchor": "supporting-early-stage-growth"
      },
      {
        "depth": 3,
        "title": "Scaling Massive IoT Networks",
        "anchor": "scaling-massive-iot-networks"
      },
      {
        "depth": 3,
        "title": "Powering Real-Time, Low-Latency Systems",
        "anchor": "powering-real-time-low-latency-systems"
      }
    ],
    "stats": {
      "chars": 7871,
      "words": 1047,
      "headings": 8,
      "estimated_token_count_total": 1440
    },
    "hash": "sha256:2d228c52844df8952520fafdd3e6f0e26bfd2f32b5ee60c6241cf7d38603643c",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-architecture-polkadot-chain-overview",
    "title": "Overview of the Polkadot Relay Chain",
    "slug": "polkadot-protocol-architecture-polkadot-chain-overview",
    "categories": [
      "Basics",
      "Polkadot Protocol",
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-architecture-polkadot-chain-overview.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/architecture/polkadot-chain/overview/",
    "preview": "Polkadot is a next-generation blockchain protocol designed to support a multi-chain future by enabling secure communication and interoperability between different blockchains. Built as a Layer-0 protocol, Polkadot introduces innovations like application-specific Layer-1 chains ([parachains](/polkadot-protocol/architecture/parachains/){targe=\\_blank}), shared security through [Nominated Proof of Stake (NPoS)](/polkadot-protocol/glossary/#nominated-proof-of-stake-npos){target=\\_blank}, and cross-c",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Polkadot 1.0",
        "anchor": "polkadot-10"
      },
      {
        "depth": 3,
        "title": "High-Level Architecture",
        "anchor": "high-level-architecture"
      },
      {
        "depth": 3,
        "title": "Polkadot's Additional Functionalities",
        "anchor": "polkadots-additional-functionalities"
      },
      {
        "depth": 3,
        "title": "Polkadot's Resilience",
        "anchor": "polkadots-resilience"
      },
      {
        "depth": 3,
        "title": "Polkadot's Blockspace",
        "anchor": "polkadots-blockspace"
      },
      {
        "depth": 2,
        "title": "DOT Token",
        "anchor": "dot-token"
      },
      {
        "depth": 3,
        "title": "Redenomination of DOT",
        "anchor": "redenomination-of-dot"
      },
      {
        "depth": 3,
        "title": "The Planck Unit",
        "anchor": "the-planck-unit"
      },
      {
        "depth": 3,
        "title": "Uses for DOT",
        "anchor": "uses-for-dot"
      },
      {
        "depth": 2,
        "title": "JAM and the Road Ahead",
        "anchor": "jam-and-the-road-ahead"
      }
    ],
    "stats": {
      "chars": 12513,
      "words": 1781,
      "headings": 11,
      "estimated_token_count_total": 2591
    },
    "hash": "sha256:201e7efa0ad6b24890dd06f69714e19d9700ab7f7a51a33fe6d6e0664b7170b2",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-architecture-polkadot-chain-pos-consensus",
    "title": "Proof of Stake Consensus",
    "slug": "polkadot-protocol-architecture-polkadot-chain-pos-consensus",
    "categories": [
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-architecture-polkadot-chain-pos-consensus.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/architecture/polkadot-chain/pos-consensus/",
    "preview": "Polkadot's Proof of Stake consensus model leverages a unique hybrid approach by design to promote decentralized and secure network operations. In traditional Proof of Stake (PoS) systems, a node's ability to validate transactions is tied to its token holdings, which can lead to centralization risks and limited validator participation. Polkadot addresses these concerns through its [Nominated Proof of Stake (NPoS)](/polkadot-protocol/glossary/#nominated-proof-of-stake-npos){target=\\_blank} model a",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Nominated Proof of Stake",
        "anchor": "nominated-proof-of-stake"
      },
      {
        "depth": 2,
        "title": "Hybrid Consensus",
        "anchor": "hybrid-consensus"
      },
      {
        "depth": 2,
        "title": "Block Production - BABE",
        "anchor": "block-production-babe"
      },
      {
        "depth": 3,
        "title": "Validator Participation",
        "anchor": "validator-participation"
      },
      {
        "depth": 3,
        "title": "Additional Resources",
        "anchor": "additional-resources"
      },
      {
        "depth": 2,
        "title": "Finality Gadget - GRANDPA",
        "anchor": "finality-gadget-grandpa"
      },
      {
        "depth": 3,
        "title": "Probabilistic vs. Provable Finality",
        "anchor": "probabilistic-vs-provable-finality"
      },
      {
        "depth": 3,
        "title": "Additional Resources",
        "anchor": "additional-resources-2"
      },
      {
        "depth": 2,
        "title": "Fork Choice",
        "anchor": "fork-choice"
      },
      {
        "depth": 3,
        "title": "Additional Resources",
        "anchor": "additional-resources-3"
      },
      {
        "depth": 2,
        "title": "Bridging - BEEFY",
        "anchor": "bridging-beefy"
      },
      {
        "depth": 3,
        "title": "Additional Resources",
        "anchor": "additional-resources-4"
      }
    ],
    "stats": {
      "chars": 12786,
      "words": 1837,
      "headings": 13,
      "estimated_token_count_total": 2532
    },
    "hash": "sha256:5cc00e67dab617ab6f39d32e944fe39de111485a987c4931d4f83b870ac0d4d1",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-architecture-system-chains-asset-hub",
    "title": "Asset Hub",
    "slug": "polkadot-protocol-architecture-system-chains-asset-hub",
    "categories": [
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-architecture-system-chains-asset-hub.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/architecture/system-chains/asset-hub/",
    "preview": "The Asset Hub is a critical component in the Polkadot ecosystem, enabling the management of fungible and non-fungible assets across the network. Since the relay chain focuses on maintaining security and consensus without direct asset management, Asset Hub provides a streamlined platform for creating, managing, and using on-chain assets in a fee-efficient manner. This guide outlines the core features of Asset Hub, including how it handles asset operations, cross-chain transfers, and asset integra",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Assets Basics",
        "anchor": "assets-basics"
      },
      {
        "depth": 2,
        "title": "Assets Pallet",
        "anchor": "assets-pallet"
      },
      {
        "depth": 3,
        "title": "Key Features",
        "anchor": "key-features"
      },
      {
        "depth": 3,
        "title": "Main Functions",
        "anchor": "main-functions"
      },
      {
        "depth": 3,
        "title": "Querying Functions",
        "anchor": "querying-functions"
      },
      {
        "depth": 3,
        "title": "Permission Models and Roles",
        "anchor": "permission-models-and-roles"
      },
      {
        "depth": 3,
        "title": "Asset Freezing",
        "anchor": "asset-freezing"
      },
      {
        "depth": 3,
        "title": "Non-Custodial Transfers (Approval API)",
        "anchor": "non-custodial-transfers-approval-api"
      },
      {
        "depth": 2,
        "title": "Foreign Assets",
        "anchor": "foreign-assets"
      },
      {
        "depth": 3,
        "title": "Handling Foreign Assets",
        "anchor": "handling-foreign-assets"
      },
      {
        "depth": 2,
        "title": "Integration",
        "anchor": "integration"
      },
      {
        "depth": 3,
        "title": "API Sidecar",
        "anchor": "api-sidecar"
      },
      {
        "depth": 3,
        "title": "TxWrapper",
        "anchor": "txwrapper"
      },
      {
        "depth": 3,
        "title": "ParaSpell",
        "anchor": "paraspell"
      },
      {
        "depth": 3,
        "title": "Parachain Node",
        "anchor": "parachain-node"
      },
      {
        "depth": 2,
        "title": "XCM Transfer Monitoring",
        "anchor": "xcm-transfer-monitoring"
      },
      {
        "depth": 3,
        "title": "Monitor XCM Deposits",
        "anchor": "monitor-xcm-deposits"
      },
      {
        "depth": 3,
        "title": "Track XCM Information Back to the Source",
        "anchor": "track-xcm-information-back-to-the-source"
      },
      {
        "depth": 3,
        "title": "Practical Monitoring Examples",
        "anchor": "practical-monitoring-examples"
      },
      {
        "depth": 3,
        "title": "Monitor for Failed XCM Transfers",
        "anchor": "monitor-for-failed-xcm-transfers"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 20098,
      "words": 2909,
      "headings": 22,
      "estimated_token_count_total": 4103
    },
    "hash": "sha256:d4a6af97b12618da3d250a00576ed38651ec68ef7cce9f91d70be80adef772e4",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-architecture-system-chains-bridge-hub",
    "title": "Bridge Hub",
    "slug": "polkadot-protocol-architecture-system-chains-bridge-hub",
    "categories": [
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-architecture-system-chains-bridge-hub.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/architecture/system-chains/bridge-hub/",
    "preview": "The Bridge Hub system parachain plays a crucial role in facilitating trustless interactions between Polkadot, Kusama, Ethereum, and other blockchain ecosystems. By implementing on-chain light clients and supporting protocols like BEEFY and GRANDPA, Bridge Hub ensures seamless message transmission and state verification across chains. It also provides essential [pallets](/polkadot-protocol/glossary/#pallet){target=\\_blank} for sending and receiving messages, making it a cornerstone of Polkadot’s",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Trustless Bridging",
        "anchor": "trustless-bridging"
      },
      {
        "depth": 2,
        "title": "Bridging Components",
        "anchor": "bridging-components"
      },
      {
        "depth": 3,
        "title": "Ethereum-Specific Support",
        "anchor": "ethereum-specific-support"
      },
      {
        "depth": 2,
        "title": "Deployed Bridges",
        "anchor": "deployed-bridges"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 5469,
      "words": 772,
      "headings": 6,
      "estimated_token_count_total": 1212
    },
    "hash": "sha256:cb8c0a1d9d05434e41b9051cb24482a82e7407fa71456ce976d85ef1206c0e8e",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-architecture-system-chains-collectives",
    "title": "Collectives Chain",
    "slug": "polkadot-protocol-architecture-system-chains-collectives",
    "categories": [
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-architecture-system-chains-collectives.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/architecture/system-chains/collectives/",
    "preview": "Established through [Referendum 81](https://polkadot-old.polkassembly.io/referendum/81){target=\\_blank}, the Collectives chain operates as a dedicated parachain exclusive to the Polkadot network with no counterpart on Kusama. This specialized infrastructure provides a foundation for various on-chain governance groups essential to Polkadot's ecosystem.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Key Collectives",
        "anchor": "key-collectives"
      }
    ],
    "stats": {
      "chars": 2288,
      "words": 293,
      "headings": 2,
      "estimated_token_count_total": 424
    },
    "hash": "sha256:59ec351fbb8d3a392e90f4f5bf6b62f58b21d6d7a900c5e367e5d2e09ecb3aca",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-architecture-system-chains-coretime",
    "title": "Coretime Chain",
    "slug": "polkadot-protocol-architecture-system-chains-coretime",
    "categories": [
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-architecture-system-chains-coretime.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/architecture/system-chains/coretime/",
    "preview": "The Coretime system chain facilitates the allocation, procurement, sale, and scheduling of bulk [coretime](/polkadot-protocol/glossary/#coretime){target=\\_blank}, enabling tasks (such as [parachains](/polkadot-protocol/glossary/#parachain){target=\\_blank}) to utilize the computation and security provided by Polkadot.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Bulk Coretime Assignment",
        "anchor": "bulk-coretime-assignment"
      },
      {
        "depth": 2,
        "title": "On Demand Coretime",
        "anchor": "on-demand-coretime"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 5301,
      "words": 776,
      "headings": 4,
      "estimated_token_count_total": 1238
    },
    "hash": "sha256:6340c8a885d03adf633ae30438d8f21c195c276a48082657bb22dd53341f1cfb",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-architecture-system-chains-overview",
    "title": "Overview of Polkadot's System Chains",
    "slug": "polkadot-protocol-architecture-system-chains-overview",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-architecture-system-chains-overview.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/architecture/system-chains/overview/",
    "preview": "Polkadot's relay chain is designed to secure parachains and facilitate seamless inter-chain communication. However, resource-intensive—tasks like governance, asset management, and bridging are more efficiently handled by system parachains. These specialized chains offload functionality from the relay chain, leveraging Polkadot's parallel execution model to improve performance and scalability. By distributing key functionalities across system parachains, Polkadot can maximize its relay chain's bl",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "System Chains",
        "anchor": "system-chains"
      },
      {
        "depth": 2,
        "title": "Existing System Chains",
        "anchor": "existing-system-chains"
      },
      {
        "depth": 3,
        "title": "Asset Hub",
        "anchor": "asset-hub"
      },
      {
        "depth": 3,
        "title": "Collectives",
        "anchor": "collectives"
      },
      {
        "depth": 3,
        "title": "Bridge Hub",
        "anchor": "bridge-hub"
      },
      {
        "depth": 3,
        "title": "People Chain",
        "anchor": "people-chain"
      },
      {
        "depth": 3,
        "title": "Coretime Chain",
        "anchor": "coretime-chain"
      },
      {
        "depth": 3,
        "title": "Encointer",
        "anchor": "encointer"
      }
    ],
    "stats": {
      "chars": 7782,
      "words": 1111,
      "headings": 9,
      "estimated_token_count_total": 1655
    },
    "hash": "sha256:5f58eb1200eff8e4c3995d31addd9856a69da6bc38a12524a844343e161f0394",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-architecture-system-chains-people",
    "title": "People Chain",
    "slug": "polkadot-protocol-architecture-system-chains-people",
    "categories": [
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-architecture-system-chains-people.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/architecture/system-chains/people/",
    "preview": "People chain is a specialized parachain within the Polkadot ecosystem dedicated to secure, decentralized identity management.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Identity Management System",
        "anchor": "identity-management-system"
      },
      {
        "depth": 3,
        "title": "Sub-Identities",
        "anchor": "sub-identities"
      },
      {
        "depth": 2,
        "title": "Verification Process",
        "anchor": "verification-process"
      },
      {
        "depth": 3,
        "title": "Judgment Requests",
        "anchor": "judgment-requests"
      },
      {
        "depth": 3,
        "title": "Judgment Classifications",
        "anchor": "judgment-classifications"
      },
      {
        "depth": 3,
        "title": "Registrars",
        "anchor": "registrars"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 4750,
      "words": 606,
      "headings": 8,
      "estimated_token_count_total": 876
    },
    "hash": "sha256:8239d1e8d8642cb7c10e9e5f971c99b999e9e4a87373b50bf4a691225c1e4702",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-glossary",
    "title": "Glossary",
    "slug": "polkadot-protocol-glossary",
    "categories": [
      "Reference"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-glossary.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/glossary/",
    "preview": "Key definitions, concepts, and terminology specific to the Polkadot ecosystem are included here.",
    "outline": [
      {
        "depth": 2,
        "title": "Authority",
        "anchor": "authority"
      },
      {
        "depth": 2,
        "title": "Authority Round (Aura)",
        "anchor": "authority-round-aura"
      },
      {
        "depth": 2,
        "title": "Blind Assignment of Blockchain Extension (BABE)",
        "anchor": "blind-assignment-of-blockchain-extension-babe"
      },
      {
        "depth": 2,
        "title": "Block Author",
        "anchor": "block-author"
      },
      {
        "depth": 2,
        "title": "Byzantine Fault Tolerance (BFT)",
        "anchor": "byzantine-fault-tolerance-bft"
      },
      {
        "depth": 3,
        "title": "Byzantine Failure",
        "anchor": "byzantine-failure"
      },
      {
        "depth": 3,
        "title": "Practical Byzantine Fault Tolerance (pBFT)",
        "anchor": "practical-byzantine-fault-tolerance-pbft"
      },
      {
        "depth": 3,
        "title": "Preimage",
        "anchor": "preimage"
      },
      {
        "depth": 2,
        "title": "Call",
        "anchor": "call"
      },
      {
        "depth": 2,
        "title": "Chain Specification",
        "anchor": "chain-specification"
      },
      {
        "depth": 2,
        "title": "Collator",
        "anchor": "collator"
      },
      {
        "depth": 2,
        "title": "Collective",
        "anchor": "collective"
      },
      {
        "depth": 2,
        "title": "Consensus",
        "anchor": "consensus"
      },
      {
        "depth": 2,
        "title": "Consensus Algorithm",
        "anchor": "consensus-algorithm"
      },
      {
        "depth": 2,
        "title": "Consensus Engine",
        "anchor": "consensus-engine"
      },
      {
        "depth": 2,
        "title": "Coretime",
        "anchor": "coretime"
      },
      {
        "depth": 2,
        "title": "Development Phrase",
        "anchor": "development-phrase"
      },
      {
        "depth": 2,
        "title": "Digest",
        "anchor": "digest"
      },
      {
        "depth": 2,
        "title": "Dispatchable",
        "anchor": "dispatchable"
      },
      {
        "depth": 2,
        "title": "Events",
        "anchor": "events"
      },
      {
        "depth": 2,
        "title": "Executor",
        "anchor": "executor"
      },
      {
        "depth": 2,
        "title": "Existential Deposit",
        "anchor": "existential-deposit"
      },
      {
        "depth": 2,
        "title": "Extrinsic",
        "anchor": "extrinsic"
      },
      {
        "depth": 2,
        "title": "Fork Choice Rule/Strategy",
        "anchor": "fork-choice-rulestrategy"
      },
      {
        "depth": 2,
        "title": "FRAME (Framework for Runtime Aggregation of Modularized Entities)",
        "anchor": "frame-framework-for-runtime-aggregation-of-modularized-entities"
      },
      {
        "depth": 2,
        "title": "Full Node",
        "anchor": "full-node"
      },
      {
        "depth": 2,
        "title": "Genesis Configuration",
        "anchor": "genesis-configuration"
      },
      {
        "depth": 2,
        "title": "GRANDPA",
        "anchor": "grandpa"
      },
      {
        "depth": 2,
        "title": "Header",
        "anchor": "header"
      },
      {
        "depth": 2,
        "title": "Hybrid Consensus",
        "anchor": "hybrid-consensus"
      },
      {
        "depth": 2,
        "title": "Inherent Transactions",
        "anchor": "inherent-transactions"
      },
      {
        "depth": 2,
        "title": "JSON-RPC",
        "anchor": "json-rpc"
      },
      {
        "depth": 2,
        "title": "Keystore",
        "anchor": "keystore"
      },
      {
        "depth": 2,
        "title": "Kusama",
        "anchor": "kusama"
      },
      {
        "depth": 2,
        "title": "libp2p",
        "anchor": "libp2p"
      },
      {
        "depth": 2,
        "title": "Light Client",
        "anchor": "light-client"
      },
      {
        "depth": 2,
        "title": "Metadata",
        "anchor": "metadata"
      },
      {
        "depth": 2,
        "title": "Nominated Proof of Stake (NPoS)",
        "anchor": "nominated-proof-of-stake-npos"
      },
      {
        "depth": 2,
        "title": "Oracle",
        "anchor": "oracle"
      },
      {
        "depth": 2,
        "title": "Origin",
        "anchor": "origin"
      },
      {
        "depth": 2,
        "title": "Pallet",
        "anchor": "pallet"
      },
      {
        "depth": 2,
        "title": "Parachain",
        "anchor": "parachain"
      },
      {
        "depth": 2,
        "title": "Paseo",
        "anchor": "paseo"
      },
      {
        "depth": 2,
        "title": "Polkadot",
        "anchor": "polkadot"
      },
      {
        "depth": 2,
        "title": "Polkadot Cloud",
        "anchor": "polkadot-cloud"
      },
      {
        "depth": 2,
        "title": "Polkadot Hub",
        "anchor": "polkadot-hub"
      },
      {
        "depth": 2,
        "title": "PolkaVM",
        "anchor": "polkavm"
      },
      {
        "depth": 2,
        "title": "Relay Chain",
        "anchor": "relay-chain"
      },
      {
        "depth": 2,
        "title": "Rococo",
        "anchor": "rococo"
      },
      {
        "depth": 2,
        "title": "Runtime",
        "anchor": "runtime"
      },
      {
        "depth": 2,
        "title": "Slot",
        "anchor": "slot"
      },
      {
        "depth": 2,
        "title": "Sovereign Account",
        "anchor": "sovereign-account"
      },
      {
        "depth": 2,
        "title": "SS58 Address Format",
        "anchor": "ss58-address-format"
      },
      {
        "depth": 2,
        "title": "State Transition Function (STF)",
        "anchor": "state-transition-function-stf"
      },
      {
        "depth": 2,
        "title": "Storage Item",
        "anchor": "storage-item"
      },
      {
        "depth": 2,
        "title": "Substrate",
        "anchor": "substrate"
      },
      {
        "depth": 2,
        "title": "Transaction",
        "anchor": "transaction"
      },
      {
        "depth": 2,
        "title": "Transaction Era",
        "anchor": "transaction-era"
      },
      {
        "depth": 2,
        "title": "Trie (Patricia Merkle Tree)",
        "anchor": "trie-patricia-merkle-tree"
      },
      {
        "depth": 2,
        "title": "Validator",
        "anchor": "validator"
      },
      {
        "depth": 2,
        "title": "WebAssembly (Wasm)",
        "anchor": "webassembly-wasm"
      },
      {
        "depth": 2,
        "title": "Weight",
        "anchor": "weight"
      },
      {
        "depth": 2,
        "title": "Westend",
        "anchor": "westend"
      }
    ],
    "stats": {
      "chars": 24737,
      "words": 3624,
      "headings": 63,
      "estimated_token_count_total": 5269
    },
    "hash": "sha256:03c65c291e4365250df34053d501d6055691eb10441dfb461fad937f791c6ebf",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-onchain-governance-origins-tracks",
    "title": "Origins and Tracks",
    "slug": "polkadot-protocol-onchain-governance-origins-tracks",
    "categories": [
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-onchain-governance-origins-tracks.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/onchain-governance/origins-tracks/",
    "preview": "Polkadot's OpenGov system empowers decentralized decision-making and active community participation by tailoring the governance process to the impact of proposed changes. Through a system of origins and tracks, OpenGov ensures that every referendum receives the appropriate scrutiny, balancing security, inclusivity, and efficiency.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Origins",
        "anchor": "origins"
      },
      {
        "depth": 2,
        "title": "Tracks",
        "anchor": "tracks"
      },
      {
        "depth": 2,
        "title": "Additional Resources",
        "anchor": "additional-resources"
      }
    ],
    "stats": {
      "chars": 3333,
      "words": 469,
      "headings": 4,
      "estimated_token_count_total": 631
    },
    "hash": "sha256:baba9dd41091b792d09005d55d3df0bf65b35f42b40ebe63caf425a0978a22b0",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-onchain-governance-overview",
    "title": "On-Chain Governance Overview",
    "slug": "polkadot-protocol-onchain-governance-overview",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-onchain-governance-overview.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/onchain-governance/overview/",
    "preview": "Polkadot’s governance system exemplifies decentralized decision-making, empowering its community of stakeholders to shape the network’s future through active participation. The latest evolution, OpenGov, builds on Polkadot’s foundation by providing a more inclusive and efficient governance model.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Governance Evolution",
        "anchor": "governance-evolution"
      },
      {
        "depth": 2,
        "title": "OpenGov Key Features",
        "anchor": "opengov-key-features"
      },
      {
        "depth": 2,
        "title": "Origins and Tracks",
        "anchor": "origins-and-tracks"
      },
      {
        "depth": 2,
        "title": "Referendums",
        "anchor": "referendums"
      },
      {
        "depth": 3,
        "title": "Vote on Referendums",
        "anchor": "vote-on-referendums"
      },
      {
        "depth": 3,
        "title": "Delegate Voting Power",
        "anchor": "delegate-voting-power"
      },
      {
        "depth": 3,
        "title": "Cancel a Referendum",
        "anchor": "cancel-a-referendum"
      },
      {
        "depth": 2,
        "title": "Additional Resources",
        "anchor": "additional-resources"
      }
    ],
    "stats": {
      "chars": 7491,
      "words": 1018,
      "headings": 9,
      "estimated_token_count_total": 1609
    },
    "hash": "sha256:57e7e5e225225460ae89ebbe60310e6bf3dd12e570b032ba3ed67e3b760d3255",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-parachain-basics-accounts",
    "title": "Polkadot SDK Accounts",
    "slug": "polkadot-protocol-parachain-basics-accounts",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-parachain-basics-accounts.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/parachain-basics/accounts/",
    "preview": "Accounts are essential for managing identity, transactions, and governance on the network in the Polkadot SDK. Understanding these components is critical for seamless development and operation on the network, whether you're building or interacting with Polkadot-based chains.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Account Data Structure",
        "anchor": "account-data-structure"
      },
      {
        "depth": 3,
        "title": "Account",
        "anchor": "account"
      },
      {
        "depth": 3,
        "title": "Account Info",
        "anchor": "account-info"
      },
      {
        "depth": 3,
        "title": "Account Reference Counters",
        "anchor": "account-reference-counters"
      },
      {
        "depth": 2,
        "title": "Account Balance Types",
        "anchor": "account-balance-types"
      },
      {
        "depth": 3,
        "title": "Balance Types",
        "anchor": "balance-types"
      },
      {
        "depth": 3,
        "title": "Locks",
        "anchor": "locks"
      },
      {
        "depth": 3,
        "title": "Balance Types on Polkadot.js",
        "anchor": "balance-types-on-polkadotjs"
      },
      {
        "depth": 2,
        "title": "Address Formats",
        "anchor": "address-formats"
      },
      {
        "depth": 3,
        "title": "Basic Format",
        "anchor": "basic-format"
      },
      {
        "depth": 3,
        "title": "Address Type",
        "anchor": "address-type"
      },
      {
        "depth": 3,
        "title": "Address Length",
        "anchor": "address-length"
      },
      {
        "depth": 3,
        "title": "Checksum Types",
        "anchor": "checksum-types"
      },
      {
        "depth": 3,
        "title": "Validating Addresses",
        "anchor": "validating-addresses"
      }
    ],
    "stats": {
      "chars": 29646,
      "words": 4201,
      "headings": 15,
      "estimated_token_count_total": 6526
    },
    "hash": "sha256:58f269c0836080e59e93ee911ea423d705c0515939ffc54ffc7524d8d8377ace",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-parachain-basics-blocks-transactions-fees-blocks",
    "title": "Blocks",
    "slug": "polkadot-protocol-parachain-basics-blocks-transactions-fees-blocks",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-parachain-basics-blocks-transactions-fees-blocks.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/parachain-basics/blocks-transactions-fees/blocks/",
    "preview": "In the Polkadot SDK, blocks are fundamental to the functioning of the blockchain, serving as containers for [transactions](/polkadot-protocol/parachain-basics/blocks-transactions-fees/transactions/){target=\\_blank} and changes to the chain's state. Blocks consist of headers and an array of transactions, ensuring the integrity and validity of operations on the network. This guide explores the essential components of a block, the process of block production, and how blocks are validated and import",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "What is a Block?",
        "anchor": "what-is-a-block"
      },
      {
        "depth": 2,
        "title": "Block Production",
        "anchor": "block-production"
      },
      {
        "depth": 3,
        "title": "Initialize Block",
        "anchor": "initialize-block"
      },
      {
        "depth": 3,
        "title": "Finalize Block",
        "anchor": "finalize-block"
      },
      {
        "depth": 2,
        "title": "Block Authoring and Import",
        "anchor": "block-authoring-and-import"
      },
      {
        "depth": 3,
        "title": "Block Import Queue",
        "anchor": "block-import-queue"
      },
      {
        "depth": 2,
        "title": "Additional Resources",
        "anchor": "additional-resources"
      }
    ],
    "stats": {
      "chars": 6266,
      "words": 912,
      "headings": 8,
      "estimated_token_count_total": 1399
    },
    "hash": "sha256:bcad23a74d962cab72b54cdc090bf9ee0cd5ecf79f70fb642f154668c2743983",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-parachain-basics-blocks-transactions-fees-fees",
    "title": "Transactions Weights and Fees",
    "slug": "polkadot-protocol-parachain-basics-blocks-transactions-fees-fees",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-parachain-basics-blocks-transactions-fees-fees.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/parachain-basics/blocks-transactions-fees/fees/",
    "preview": "When transactions are executed, or data is stored on-chain, the activity changes the chain's state and consumes blockchain resources. Because the resources available to a blockchain are limited, managing how operations on-chain consume them is important. In addition to being limited in practical terms, such as storage capacity, blockchain resources represent a potential attack vector for malicious users. For example, a malicious user might attempt to overload the network with messages to stop th",
    "outline": [
      {
        "depth": 2,
        "title": "Introductions",
        "anchor": "introductions"
      },
      {
        "depth": 2,
        "title": "How Fees are Calculated",
        "anchor": "how-fees-are-calculated"
      },
      {
        "depth": 2,
        "title": "Using the Transaction Payment Pallet",
        "anchor": "using-the-transaction-payment-pallet"
      },
      {
        "depth": 3,
        "title": "Understanding the Inclusion Fee",
        "anchor": "understanding-the-inclusion-fee"
      },
      {
        "depth": 3,
        "title": "Accounts with an Insufficient Balance",
        "anchor": "accounts-with-an-insufficient-balance"
      },
      {
        "depth": 3,
        "title": "Fee Multipliers",
        "anchor": "fee-multipliers"
      },
      {
        "depth": 2,
        "title": "Transactions with Special Requirements",
        "anchor": "transactions-with-special-requirements"
      },
      {
        "depth": 2,
        "title": "Default Weight Annotations",
        "anchor": "default-weight-annotations"
      },
      {
        "depth": 3,
        "title": "Weights and Database Read/Write Operations",
        "anchor": "weights-and-database-readwrite-operations"
      },
      {
        "depth": 3,
        "title": "Dispatch Classes",
        "anchor": "dispatch-classes"
      },
      {
        "depth": 3,
        "title": "Dynamic Weights",
        "anchor": "dynamic-weights"
      },
      {
        "depth": 2,
        "title": "Post Dispatch Weight Correction",
        "anchor": "post-dispatch-weight-correction"
      },
      {
        "depth": 2,
        "title": "Custom Fees",
        "anchor": "custom-fees"
      },
      {
        "depth": 3,
        "title": "Custom Weights",
        "anchor": "custom-weights"
      },
      {
        "depth": 2,
        "title": "Additional Resources",
        "anchor": "additional-resources"
      }
    ],
    "stats": {
      "chars": 20800,
      "words": 2914,
      "headings": 15,
      "estimated_token_count_total": 4467
    },
    "hash": "sha256:e5d2941f9364a0bbcc287e3146e8ac006efe6fce125e58e0412dc62b7954cf1f",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-parachain-basics-blocks-transactions-fees-transactions",
    "title": "Transactions",
    "slug": "polkadot-protocol-parachain-basics-blocks-transactions-fees-transactions",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-parachain-basics-blocks-transactions-fees-transactions.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/parachain-basics/blocks-transactions-fees/transactions/",
    "preview": "Transactions are essential components of blockchain networks, enabling state changes and the execution of key operations. In the Polkadot SDK, transactions, often called extrinsics, come in multiple forms, including signed, unsigned, and inherent transactions.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "What Is a Transaction?",
        "anchor": "what-is-a-transaction"
      },
      {
        "depth": 3,
        "title": "Signed Transactions",
        "anchor": "signed-transactions"
      },
      {
        "depth": 3,
        "title": "Unsigned Transactions",
        "anchor": "unsigned-transactions"
      },
      {
        "depth": 3,
        "title": "Inherent Transactions",
        "anchor": "inherent-transactions"
      },
      {
        "depth": 2,
        "title": "Transaction Formats",
        "anchor": "transaction-formats"
      },
      {
        "depth": 3,
        "title": "Types of Transaction Formats",
        "anchor": "types-of-transaction-formats"
      },
      {
        "depth": 3,
        "title": "Signed Transaction Data Structure",
        "anchor": "signed-transaction-data-structure"
      },
      {
        "depth": 3,
        "title": "Signed Extensions",
        "anchor": "signed-extensions"
      },
      {
        "depth": 2,
        "title": "Transaction Construction",
        "anchor": "transaction-construction"
      },
      {
        "depth": 3,
        "title": "Construct a Signed Transaction",
        "anchor": "construct-a-signed-transaction"
      },
      {
        "depth": 3,
        "title": "Transaction Encoding",
        "anchor": "transaction-encoding"
      },
      {
        "depth": 3,
        "title": "Customize Transaction Construction",
        "anchor": "customize-transaction-construction"
      },
      {
        "depth": 2,
        "title": "Lifecycle of a Transaction",
        "anchor": "lifecycle-of-a-transaction"
      },
      {
        "depth": 3,
        "title": "Define Transaction Properties",
        "anchor": "define-transaction-properties"
      },
      {
        "depth": 3,
        "title": "Process on a Block Authoring Node",
        "anchor": "process-on-a-block-authoring-node"
      },
      {
        "depth": 3,
        "title": "Validate and Queue",
        "anchor": "validate-and-queue"
      },
      {
        "depth": 3,
        "title": "Transaction Ordering and Priority",
        "anchor": "transaction-ordering-and-priority"
      },
      {
        "depth": 3,
        "title": "Transaction Execution",
        "anchor": "transaction-execution"
      },
      {
        "depth": 2,
        "title": "Transaction Mortality",
        "anchor": "transaction-mortality"
      },
      {
        "depth": 2,
        "title": "Unique Identifiers for Extrinsics",
        "anchor": "unique-identifiers-for-extrinsics"
      },
      {
        "depth": 2,
        "title": "Additional Resources",
        "anchor": "additional-resources"
      }
    ],
    "stats": {
      "chars": 23605,
      "words": 3333,
      "headings": 22,
      "estimated_token_count_total": 4706
    },
    "hash": "sha256:bee505032851410eda182a09c5ee309d8e9a1dfae14cc0a31edb8ef382ddbb3d",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-parachain-basics-chain-data",
    "title": "Chain Data",
    "slug": "polkadot-protocol-parachain-basics-chain-data",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-parachain-basics-chain-data.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/parachain-basics/chain-data/",
    "preview": "Understanding and leveraging on-chain data is a fundamental aspect of blockchain development. Whether you're building frontend applications or backend systems, accessing and decoding runtime metadata is vital to interacting with the blockchain. This guide introduces you to the tools and processes for generating and retrieving metadata, explains its role in application development, and outlines the additional APIs available for interacting with a Polkadot node. By mastering these components, you",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Application Development",
        "anchor": "application-development"
      },
      {
        "depth": 2,
        "title": "Understand Metadata",
        "anchor": "understand-metadata"
      },
      {
        "depth": 2,
        "title": "Expose Runtime Information as Metadata",
        "anchor": "expose-runtime-information-as-metadata"
      },
      {
        "depth": 2,
        "title": "Generate Metadata",
        "anchor": "generate-metadata"
      },
      {
        "depth": 2,
        "title": "Retrieve Runtime Metadata",
        "anchor": "retrieve-runtime-metadata"
      },
      {
        "depth": 3,
        "title": "Use Polkadot.js",
        "anchor": "use-polkadotjs"
      },
      {
        "depth": 3,
        "title": "Use Curl",
        "anchor": "use-curl"
      },
      {
        "depth": 3,
        "title": "Use Subxt",
        "anchor": "use-subxt"
      },
      {
        "depth": 2,
        "title": "Client Applications and Metadata",
        "anchor": "client-applications-and-metadata"
      },
      {
        "depth": 2,
        "title": "Metadata Format",
        "anchor": "metadata-format"
      },
      {
        "depth": 3,
        "title": "Pallets",
        "anchor": "pallets"
      },
      {
        "depth": 3,
        "title": "Extrinsic",
        "anchor": "extrinsic"
      },
      {
        "depth": 2,
        "title": "Included RPC APIs",
        "anchor": "included-rpc-apis"
      },
      {
        "depth": 2,
        "title": "Additional Resources",
        "anchor": "additional-resources"
      }
    ],
    "stats": {
      "chars": 18682,
      "words": 2220,
      "headings": 15,
      "estimated_token_count_total": 3786
    },
    "hash": "sha256:be0dabe8ca4fdec04cccdbee41efb431fbc448de69d8de5d7c839067bc031107",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-parachain-basics-cryptography",
    "title": "Cryptography",
    "slug": "polkadot-protocol-parachain-basics-cryptography",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-parachain-basics-cryptography.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/parachain-basics/cryptography/",
    "preview": "Cryptography forms the backbone of blockchain technology, providing the mathematical verifiability crucial for consensus systems, data integrity, and user security. While a deep understanding of the underlying mathematical processes isn't necessary for most blockchain developers, grasping the fundamental applications of cryptography is essential. This page comprehensively overviews cryptographic implementations used across Polkadot SDK-based chains and the broader blockchain ecosystem.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Hash Functions",
        "anchor": "hash-functions"
      },
      {
        "depth": 3,
        "title": "Key Properties of Hash Functions",
        "anchor": "key-properties-of-hash-functions"
      },
      {
        "depth": 3,
        "title": "Blake2",
        "anchor": "blake2"
      },
      {
        "depth": 2,
        "title": "Types of Cryptography",
        "anchor": "types-of-cryptography"
      },
      {
        "depth": 3,
        "title": "Symmetric Cryptography",
        "anchor": "symmetric-cryptography"
      },
      {
        "depth": 3,
        "title": "Asymmetric Cryptography",
        "anchor": "asymmetric-cryptography"
      },
      {
        "depth": 3,
        "title": "Trade-offs and Compromises",
        "anchor": "trade-offs-and-compromises"
      },
      {
        "depth": 2,
        "title": "Digital Signatures",
        "anchor": "digital-signatures"
      },
      {
        "depth": 3,
        "title": "Example of Creating a Digital Signature",
        "anchor": "example-of-creating-a-digital-signature"
      },
      {
        "depth": 2,
        "title": "Elliptic Curve",
        "anchor": "elliptic-curve"
      },
      {
        "depth": 3,
        "title": "Various Implementations",
        "anchor": "various-implementations"
      }
    ],
    "stats": {
      "chars": 8860,
      "words": 1293,
      "headings": 12,
      "estimated_token_count_total": 1797
    },
    "hash": "sha256:259dcef86aadc513675258b665cc3940db65af6eb32a5db85da6ac339966fa60",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-parachain-basics-data-encoding",
    "title": "Data Encoding",
    "slug": "polkadot-protocol-parachain-basics-data-encoding",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-parachain-basics-data-encoding.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/parachain-basics/data-encoding/",
    "preview": "The Polkadot SDK uses a lightweight and efficient encoding/decoding mechanism to optimize data transmission across the network. This mechanism, known as the _SCALE_ codec, is used for serializing and deserializing data.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "SCALE Codec",
        "anchor": "scale-codec"
      },
      {
        "depth": 3,
        "title": "Encode",
        "anchor": "encode"
      },
      {
        "depth": 3,
        "title": "Decode",
        "anchor": "decode"
      },
      {
        "depth": 3,
        "title": "CompactAs",
        "anchor": "compactas"
      },
      {
        "depth": 3,
        "title": "HasCompact",
        "anchor": "hascompact"
      },
      {
        "depth": 3,
        "title": "EncodeLike",
        "anchor": "encodelike"
      },
      {
        "depth": 3,
        "title": "Data Types",
        "anchor": "data-types"
      },
      {
        "depth": 2,
        "title": "Encode and Decode Rust Trait Implementations",
        "anchor": "encode-and-decode-rust-trait-implementations"
      },
      {
        "depth": 2,
        "title": "SCALE Codec Libraries",
        "anchor": "scale-codec-libraries"
      }
    ],
    "stats": {
      "chars": 13630,
      "words": 1314,
      "headings": 10,
      "estimated_token_count_total": 3214
    },
    "hash": "sha256:1abd5003cddcb7bbba6eed3ca4866b2f6a4c100cdfc4f48d82d6380c9613425b",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-parachain-basics-interoperability",
    "title": "Interoperability",
    "slug": "polkadot-protocol-parachain-basics-interoperability",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-parachain-basics-interoperability.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/parachain-basics/interoperability/",
    "preview": "Interoperability lies at the heart of the Polkadot ecosystem, enabling communication and collaboration across a diverse range of blockchains. By bridging the gaps between parachains, relay chains, and even external networks, Polkadot unlocks the potential for truly decentralized applications, efficient resource sharing, and scalable solutions.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Why Interoperability Matters",
        "anchor": "why-interoperability-matters"
      },
      {
        "depth": 2,
        "title": "Key Mechanisms for Interoperability",
        "anchor": "key-mechanisms-for-interoperability"
      },
      {
        "depth": 3,
        "title": "Cross-Consensus Messaging (XCM): The Backbone of Communication",
        "anchor": "cross-consensus-messaging-xcm-the-backbone-of-communication"
      },
      {
        "depth": 3,
        "title": "Bridges: Connecting External Networks",
        "anchor": "bridges-connecting-external-networks"
      },
      {
        "depth": 2,
        "title": "The Polkadot Advantage",
        "anchor": "the-polkadot-advantage"
      },
      {
        "depth": 2,
        "title": "Looking Ahead",
        "anchor": "looking-ahead"
      }
    ],
    "stats": {
      "chars": 4657,
      "words": 588,
      "headings": 7,
      "estimated_token_count_total": 780
    },
    "hash": "sha256:077e7e5bfc9509cf09f455959a5da7a74b7af69836b3c4b334692f32e306ddf1",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-parachain-basics-networks",
    "title": "Networks",
    "slug": "polkadot-protocol-parachain-basics-networks",
    "categories": [
      "Basics",
      "Polkadot Protocol",
      "Networks"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-parachain-basics-networks.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/parachain-basics/networks/",
    "preview": "The Polkadot ecosystem is built on a robust set of networks designed to enable secure and scalable development. Whether you are testing new features or deploying to live production, Polkadot offers several layers of networks tailored for each stage of the development process. From local environments to experimental networks like Kusama and community-run TestNets such as Paseo, developers can thoroughly test, iterate, and validate their applications. This guide will introduce you to Polkadot's va",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Network Overview",
        "anchor": "network-overview"
      },
      {
        "depth": 2,
        "title": "Polkadot Development Networks",
        "anchor": "polkadot-development-networks"
      },
      {
        "depth": 2,
        "title": "Kusama Network",
        "anchor": "kusama-network"
      },
      {
        "depth": 2,
        "title": "Test Networks",
        "anchor": "test-networks"
      },
      {
        "depth": 3,
        "title": "Westend",
        "anchor": "westend"
      },
      {
        "depth": 3,
        "title": "Paseo",
        "anchor": "paseo"
      },
      {
        "depth": 2,
        "title": "Local Test Networks",
        "anchor": "local-test-networks"
      },
      {
        "depth": 3,
        "title": "Zombienet",
        "anchor": "zombienet"
      },
      {
        "depth": 3,
        "title": "Chopsticks",
        "anchor": "chopsticks"
      }
    ],
    "stats": {
      "chars": 7835,
      "words": 1112,
      "headings": 10,
      "estimated_token_count_total": 1474
    },
    "hash": "sha256:7241780e85c670cf9cf1788fe207d86f1b8ac84626ae851c288c25e9aec65ec1",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-parachain-basics-node-and-runtime",
    "title": "Node and Runtime",
    "slug": "polkadot-protocol-parachain-basics-node-and-runtime",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-parachain-basics-node-and-runtime.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/parachain-basics/node-and-runtime/",
    "preview": "Every blockchain platform relies on a decentralized network of computers, called nodes, that communicate with each other about transactions and blocks. In this context, a node refers to the software running on the connected devices rather than the physical or virtual machines in the network.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Architectural Principles",
        "anchor": "architectural-principles"
      },
      {
        "depth": 3,
        "title": "Advantages of this Architecture",
        "anchor": "advantages-of-this-architecture"
      },
      {
        "depth": 2,
        "title": "Node (Client)",
        "anchor": "node-client"
      },
      {
        "depth": 2,
        "title": "Runtime",
        "anchor": "runtime"
      },
      {
        "depth": 3,
        "title": "Characteristics",
        "anchor": "characteristics"
      },
      {
        "depth": 3,
        "title": "Key Functions",
        "anchor": "key-functions"
      },
      {
        "depth": 2,
        "title": "Communication Between Node and Runtime",
        "anchor": "communication-between-node-and-runtime"
      },
      {
        "depth": 3,
        "title": "Runtime APIs",
        "anchor": "runtime-apis"
      },
      {
        "depth": 3,
        "title": "Host Functions",
        "anchor": "host-functions"
      }
    ],
    "stats": {
      "chars": 4937,
      "words": 628,
      "headings": 10,
      "estimated_token_count_total": 914
    },
    "hash": "sha256:8122e21c149d0863cfe3b37fc5606bcdb91668e9d265f0f05451a61ff70e4e93",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-parachain-basics-randomness",
    "title": "Randomness",
    "slug": "polkadot-protocol-parachain-basics-randomness",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-parachain-basics-randomness.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/parachain-basics/randomness/",
    "preview": "Randomness is crucial in Proof of Stake (PoS) blockchains to ensure a fair and unpredictable distribution of validator duties. However, computers are inherently deterministic, meaning the same input always produces the same output. What we typically refer to as \"random\" numbers on a computer are actually pseudo-random. These numbers rely on an initial \"seed,\" which can come from external sources like [atmospheric noise](https://www.random.org/randomness/){target=\\_blank}, [heart rates](https://m",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "VRF",
        "anchor": "vrf"
      },
      {
        "depth": 3,
        "title": "How VRF Works",
        "anchor": "how-vrf-works"
      },
      {
        "depth": 2,
        "title": "RANDAO",
        "anchor": "randao"
      },
      {
        "depth": 2,
        "title": "VDFs",
        "anchor": "vdfs"
      },
      {
        "depth": 2,
        "title": "Additional Resources",
        "anchor": "additional-resources"
      }
    ],
    "stats": {
      "chars": 6541,
      "words": 1008,
      "headings": 6,
      "estimated_token_count_total": 1394
    },
    "hash": "sha256:217a79109aff1607594a0238fd91bfa812827620887c4f063c7e0a7a37f967d6",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-smart-contract-basics-accounts",
    "title": "Accounts in Asset Hub Smart Contracts",
    "slug": "polkadot-protocol-smart-contract-basics-accounts",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-smart-contract-basics-accounts.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/smart-contract-basics/accounts/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Address Types and Mappings",
        "anchor": "address-types-and-mappings"
      },
      {
        "depth": 3,
        "title": "Ethereum to Polkadot Mapping",
        "anchor": "ethereum-to-polkadot-mapping"
      },
      {
        "depth": 3,
        "title": "Polkadot to Ethereum Mapping",
        "anchor": "polkadot-to-ethereum-mapping"
      },
      {
        "depth": 3,
        "title": "Account Mapping for Native Polkadot Accounts",
        "anchor": "account-mapping-for-native-polkadot-accounts"
      },
      {
        "depth": 2,
        "title": "Account Registration",
        "anchor": "account-registration"
      },
      {
        "depth": 2,
        "title": "Fallback Accounts",
        "anchor": "fallback-accounts"
      },
      {
        "depth": 2,
        "title": "Contract Address Generation",
        "anchor": "contract-address-generation"
      },
      {
        "depth": 2,
        "title": "Security Considerations",
        "anchor": "security-considerations"
      }
    ],
    "stats": {
      "chars": 8540,
      "words": 1141,
      "headings": 9,
      "estimated_token_count_total": 1822
    },
    "hash": "sha256:69b904862135ad18ff58ef5f917d6279472375d997b3fe3e2c96f9009efb7015",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-smart-contract-basics-blocks-transactions-fees",
    "title": "Transactions and Fees on Asset Hub",
    "slug": "polkadot-protocol-smart-contract-basics-blocks-transactions-fees",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-smart-contract-basics-blocks-transactions-fees.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/smart-contract-basics/blocks-transactions-fees/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Smart Contract Blocks",
        "anchor": "smart-contract-blocks"
      },
      {
        "depth": 2,
        "title": "Smart Contract Transactions",
        "anchor": "smart-contract-transactions"
      },
      {
        "depth": 3,
        "title": "EVM Transaction Types",
        "anchor": "evm-transaction-types"
      },
      {
        "depth": 2,
        "title": "Fees and Gas",
        "anchor": "fees-and-gas"
      },
      {
        "depth": 3,
        "title": "Gas Model Overview",
        "anchor": "gas-model-overview"
      },
      {
        "depth": 3,
        "title": "Fee Components",
        "anchor": "fee-components"
      },
      {
        "depth": 3,
        "title": "Gas Calculation and Conversion",
        "anchor": "gas-calculation-and-conversion"
      }
    ],
    "stats": {
      "chars": 6363,
      "words": 789,
      "headings": 8,
      "estimated_token_count_total": 1178
    },
    "hash": "sha256:9560b711f0ee8342e97e3171609ddfe1a2084726c586628294d38c28a7e3e54d",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-smart-contract-basics-evm-vs-polkavm",
    "title": "EVM vs PolkaVM",
    "slug": "polkadot-protocol-smart-contract-basics-evm-vs-polkavm",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-smart-contract-basics-evm-vs-polkavm.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/smart-contract-basics/evm-vs-polkavm/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Core Virtual Machine Architecture",
        "anchor": "core-virtual-machine-architecture"
      },
      {
        "depth": 3,
        "title": "High-Level Architecture Comparison",
        "anchor": "high-level-architecture-comparison"
      },
      {
        "depth": 2,
        "title": "Gas Model",
        "anchor": "gas-model"
      },
      {
        "depth": 3,
        "title": "Dynamic Gas Value Scaling",
        "anchor": "dynamic-gas-value-scaling"
      },
      {
        "depth": 3,
        "title": "Multi-Dimensional Resource Metering",
        "anchor": "multi-dimensional-resource-metering"
      },
      {
        "depth": 2,
        "title": "Memory Management",
        "anchor": "memory-management"
      },
      {
        "depth": 3,
        "title": "Current Memory Limits",
        "anchor": "current-memory-limits"
      },
      {
        "depth": 2,
        "title": "Account Management - Existential Deposit",
        "anchor": "account-management-existential-deposit"
      },
      {
        "depth": 3,
        "title": "Account Management Comparison",
        "anchor": "account-management-comparison"
      },
      {
        "depth": 2,
        "title": "Contract Deployment",
        "anchor": "contract-deployment"
      },
      {
        "depth": 2,
        "title": "Solidity and YUL IR Translation Incompatibilities",
        "anchor": "solidity-and-yul-ir-translation-incompatibilities"
      },
      {
        "depth": 3,
        "title": "Contract Code Structure",
        "anchor": "contract-code-structure"
      },
      {
        "depth": 3,
        "title": "Solidity-Specific Differences",
        "anchor": "solidity-specific-differences"
      },
      {
        "depth": 3,
        "title": "YUL Function Translation Differences",
        "anchor": "yul-function-translation-differences"
      },
      {
        "depth": 3,
        "title": "Unsupported Operations",
        "anchor": "unsupported-operations"
      },
      {
        "depth": 3,
        "title": "Compilation Pipeline Considerations",
        "anchor": "compilation-pipeline-considerations"
      },
      {
        "depth": 3,
        "title": "Memory Pointer Limitations",
        "anchor": "memory-pointer-limitations"
      }
    ],
    "stats": {
      "chars": 27687,
      "words": 3391,
      "headings": 18,
      "estimated_token_count_total": 5303
    },
    "hash": "sha256:05f538c20c048c851006309de2e753945874f83f7d3a26f1348dfb7ed0f47b32",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-smart-contract-basics-networks",
    "title": "Networks for Polkadot Hub Smart Contracts",
    "slug": "polkadot-protocol-smart-contract-basics-networks",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-smart-contract-basics-networks.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/smart-contract-basics/networks/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Network Overview",
        "anchor": "network-overview"
      },
      {
        "depth": 2,
        "title": "Local Development",
        "anchor": "local-development"
      },
      {
        "depth": 2,
        "title": "Test Networks",
        "anchor": "test-networks"
      },
      {
        "depth": 3,
        "title": "Passet Hub",
        "anchor": "passet-hub"
      },
      {
        "depth": 3,
        "title": "Westend Hub",
        "anchor": "westend-hub"
      },
      {
        "depth": 2,
        "title": "Production Networks",
        "anchor": "production-networks"
      },
      {
        "depth": 3,
        "title": "Polkadot Hub",
        "anchor": "polkadot-hub"
      },
      {
        "depth": 3,
        "title": "Kusama Hub",
        "anchor": "kusama-hub"
      }
    ],
    "stats": {
      "chars": 5110,
      "words": 696,
      "headings": 9,
      "estimated_token_count_total": 891
    },
    "hash": "sha256:7e0fb00d13010a8eec2a14989d5403f7e1e50a42494be8dab7627438b80bf00e",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-smart-contract-basics-overview",
    "title": "Smart Contracts Basics Overview",
    "slug": "polkadot-protocol-smart-contract-basics-overview",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-smart-contract-basics-overview.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/smart-contract-basics/overview/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Smart Contracts Versus Parachains",
        "anchor": "smart-contracts-versus-parachains"
      },
      {
        "depth": 2,
        "title": "Building a Smart Contract",
        "anchor": "building-a-smart-contract"
      },
      {
        "depth": 3,
        "title": "PolkaVM Contracts",
        "anchor": "polkavm-contracts"
      },
      {
        "depth": 3,
        "title": "EVM Contracts",
        "anchor": "evm-contracts"
      },
      {
        "depth": 3,
        "title": "Wasm Contracts",
        "anchor": "wasm-contracts"
      }
    ],
    "stats": {
      "chars": 10921,
      "words": 1568,
      "headings": 6,
      "estimated_token_count_total": 2571
    },
    "hash": "sha256:553737302a0729b8a599bf1458e187793857811d46e0d53a4e51b9688c400cec",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-smart-contract-basics-polkavm-design",
    "title": "PolkaVM Design",
    "slug": "polkadot-protocol-smart-contract-basics-polkavm-design",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-smart-contract-basics-polkavm-design.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/smart-contract-basics/polkavm-design/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "PolkaVM",
        "anchor": "polkavm"
      },
      {
        "depth": 2,
        "title": "Architecture",
        "anchor": "architecture"
      },
      {
        "depth": 3,
        "title": "Pallet Revive",
        "anchor": "pallet-revive"
      },
      {
        "depth": 3,
        "title": "PolkaVM Design Fundamentals",
        "anchor": "polkavm-design-fundamentals"
      },
      {
        "depth": 2,
        "title": "Compilation Process",
        "anchor": "compilation-process"
      }
    ],
    "stats": {
      "chars": 5336,
      "words": 666,
      "headings": 6,
      "estimated_token_count_total": 994
    },
    "hash": "sha256:f1c53cff72e32550b0e6e6d27b2f3e5c92c197a0b45067c3d88b3e653789a933",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-dapps-remark-tutorial",
    "title": "PAPI Account Watcher Tutorial",
    "slug": "tutorials-dapps-remark-tutorial",
    "categories": [
      "Tooling",
      "Tutorial"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-dapps-remark-tutorial.md",
    "html_url": "https://docs.polkadot.com/tutorials/dapps/remark-tutorial/",
    "preview": "This tutorial demonstrates how to build a simple command-line interface (CLI) application that monitors a user's account on the relay chain for the [`system.remarkWithEvent`](https://paritytech.github.io/polkadot-sdk/master/frame_system/pallet/struct.Pallet.html#method.remark_with_event){target=\\_blank} extrinsic, using the [Polkadot API](/develop/toolkit/api-libraries/papi){target=\\_blank}.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Clone the Repository",
        "anchor": "clone-the-repository"
      },
      {
        "depth": 2,
        "title": "Explore the Template (Light Clients)",
        "anchor": "explore-the-template-light-clients"
      },
      {
        "depth": 2,
        "title": "Create the CLI",
        "anchor": "create-the-cli"
      },
      {
        "depth": 2,
        "title": "Watch for Remarks",
        "anchor": "watch-for-remarks"
      },
      {
        "depth": 2,
        "title": "Compile and Run",
        "anchor": "compile-and-run"
      },
      {
        "depth": 2,
        "title": "Test the CLI",
        "anchor": "test-the-cli"
      },
      {
        "depth": 2,
        "title": "Next Steps",
        "anchor": "next-steps"
      }
    ],
    "stats": {
      "chars": 8062,
      "words": 1112,
      "headings": 9,
      "estimated_token_count_total": 2256
    },
    "hash": "sha256:538079a93c535955f5071e621fa55dbd57216fb241363457b8bdd95b0152d3df",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-interoperability-replay-and-dry-run-xcms",
    "title": "Replay and Dry Run XCMs",
    "slug": "tutorials-interoperability-replay-and-dry-run-xcms",
    "categories": [
      "Tutorial"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-interoperability-replay-and-dry-run-xcms.md",
    "html_url": "https://docs.polkadot.com/tutorials/interoperability/replay-and-dry-run-xcms/",
    "preview": "In this tutorial, you'll learn how to replay and dry-run XCMs using [Chopsticks](/develop/toolkit/parachains/fork-chains/chopsticks/get-started/){target=\\_blank}, a powerful tool for forking live Polkadot SDK-based chains in your local environment. These techniques are essential for:",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Set Up Your Project",
        "anchor": "set-up-your-project"
      },
      {
        "depth": 2,
        "title": "Capture the XCM to Replay",
        "anchor": "capture-the-xcm-to-replay"
      },
      {
        "depth": 2,
        "title": "Fork the Relevant Chains",
        "anchor": "fork-the-relevant-chains"
      },
      {
        "depth": 3,
        "title": "Set the Block Numbers",
        "anchor": "set-the-block-numbers"
      },
      {
        "depth": 3,
        "title": "Enable Logging and Wasm Override",
        "anchor": "enable-logging-and-wasm-override"
      },
      {
        "depth": 2,
        "title": "Identify and Extract the XCM",
        "anchor": "identify-and-extract-the-xcm"
      },
      {
        "depth": 2,
        "title": "Replay the XCM",
        "anchor": "replay-the-xcm"
      },
      {
        "depth": 3,
        "title": "Add the Asset Hub Descriptor",
        "anchor": "add-the-asset-hub-descriptor"
      },
      {
        "depth": 3,
        "title": "Create a Replay Script",
        "anchor": "create-a-replay-script"
      },
      {
        "depth": 3,
        "title": "Execute the Replay Script",
        "anchor": "execute-the-replay-script"
      },
      {
        "depth": 3,
        "title": "Expected Output",
        "anchor": "expected-output"
      },
      {
        "depth": 2,
        "title": "Dry Run the XCM",
        "anchor": "dry-run-the-xcm"
      },
      {
        "depth": 3,
        "title": "Create a Dry Run Script",
        "anchor": "create-a-dry-run-script"
      },
      {
        "depth": 3,
        "title": "Execute the Dry Run Script",
        "anchor": "execute-the-dry-run-script"
      },
      {
        "depth": 2,
        "title": "Review and Debug",
        "anchor": "review-and-debug"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 18931,
      "words": 2367,
      "headings": 18,
      "estimated_token_count_total": 4840
    },
    "hash": "sha256:daafccba1ffc82c44e440831d3ec464f1c086a3bfcf43540761fee01ed27afa8",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-interoperability-xcm-channels-para-to-para",
    "title": "Opening HRMP Channels Between Parachains",
    "slug": "tutorials-interoperability-xcm-channels-para-to-para",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-interoperability-xcm-channels-para-to-para.md",
    "html_url": "https://docs.polkadot.com/tutorials/interoperability/xcm-channels/para-to-para/",
    "preview": "For establishing communication channels between parachains on the Polkadot network using the Horizontal Relay-routed Message Passing (HRMP) protocol, the following steps are required:",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Procedure to Initiate an HRMP Channel",
        "anchor": "procedure-to-initiate-an-hrmp-channel"
      },
      {
        "depth": 3,
        "title": "Fund Sender Sovereign Account",
        "anchor": "fund-sender-sovereign-account"
      },
      {
        "depth": 3,
        "title": "Create Channel Opening Extrinsic",
        "anchor": "create-channel-opening-extrinsic"
      },
      {
        "depth": 3,
        "title": "Craft and Submit the XCM Message from the Sender",
        "anchor": "craft-and-submit-the-xcm-message-from-the-sender"
      },
      {
        "depth": 2,
        "title": "Procedure to Accept an HRMP Channel",
        "anchor": "procedure-to-accept-an-hrmp-channel"
      },
      {
        "depth": 3,
        "title": "Fund Receiver Sovereign Account",
        "anchor": "fund-receiver-sovereign-account"
      },
      {
        "depth": 3,
        "title": "Create Channel Accepting Extrinsic",
        "anchor": "create-channel-accepting-extrinsic"
      },
      {
        "depth": 3,
        "title": "Craft and Submit the XCM Message from the Receiver",
        "anchor": "craft-and-submit-the-xcm-message-from-the-receiver"
      }
    ],
    "stats": {
      "chars": 10985,
      "words": 1594,
      "headings": 10,
      "estimated_token_count_total": 2375
    },
    "hash": "sha256:61bc251929352f2299ca1d413d05aa9c3672b914575a285d73c7ba53dbd75bff",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-interoperability-xcm-channels-para-to-system",
    "title": "Opening HRMP Channels with System Parachains",
    "slug": "tutorials-interoperability-xcm-channels-para-to-system",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-interoperability-xcm-channels-para-to-system.md",
    "html_url": "https://docs.polkadot.com/tutorials/interoperability/xcm-channels/para-to-system/",
    "preview": "While establishing Horizontal Relay-routed Message Passing (HRMP) channels between regular parachains involves a two-step request and acceptance procedure, opening channels with system parachains follows a more straightforward approach.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Procedure to Establish an HRMP Channel",
        "anchor": "procedure-to-establish-an-hrmp-channel"
      },
      {
        "depth": 3,
        "title": "Fund Parachain Sovereign Account",
        "anchor": "fund-parachain-sovereign-account"
      },
      {
        "depth": 3,
        "title": "Create Establish Channel with System Extrinsic",
        "anchor": "create-establish-channel-with-system-extrinsic"
      },
      {
        "depth": 3,
        "title": "Craft and Submit the XCM Message",
        "anchor": "craft-and-submit-the-xcm-message"
      }
    ],
    "stats": {
      "chars": 7061,
      "words": 906,
      "headings": 6,
      "estimated_token_count_total": 1462
    },
    "hash": "sha256:ecf77fddb94ed9b6f88957d72391fb221f0158ec865c858efc3c9e5ea824df5a",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-interoperability-xcm-fee-estimation",
    "title": "XCM Fee Estimation",
    "slug": "tutorials-interoperability-xcm-fee-estimation",
    "categories": [
      "Tutorial"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-interoperability-xcm-fee-estimation.md",
    "html_url": "https://docs.polkadot.com/tutorials/interoperability/xcm-fee-estimation/",
    "preview": "When sending cross-chain messages, ensure that the transaction will be successful not only in the local chain but also in the destination chain and any intermediate chains.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Fee Mechanism",
        "anchor": "fee-mechanism"
      },
      {
        "depth": 2,
        "title": "Environment Setup",
        "anchor": "environment-setup"
      },
      {
        "depth": 2,
        "title": "Client and API Setup",
        "anchor": "client-and-api-setup"
      },
      {
        "depth": 2,
        "title": "Create the XCM Message",
        "anchor": "create-the-xcm-message"
      },
      {
        "depth": 2,
        "title": "Fee Estimation Function",
        "anchor": "fee-estimation-function"
      },
      {
        "depth": 2,
        "title": "Complete Implementation",
        "anchor": "complete-implementation"
      },
      {
        "depth": 2,
        "title": "Full Code",
        "anchor": "full-code"
      },
      {
        "depth": 2,
        "title": "Running the Script",
        "anchor": "running-the-script"
      },
      {
        "depth": 2,
        "title": "Conclusion",
        "anchor": "conclusion"
      }
    ],
    "stats": {
      "chars": 45366,
      "words": 4660,
      "headings": 10,
      "estimated_token_count_total": 9746
    },
    "hash": "sha256:fe2379c4239a4a1b0c857c453e8590e1a67d34eec1cd87dd867f67ca3f3d1aae",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-interoperability-xcm-transfers-from-relaychain-to-parachain",
    "title": "XCM Transfers from Relay Chain to Parachain",
    "slug": "tutorials-interoperability-xcm-transfers-from-relaychain-to-parachain",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-interoperability-xcm-transfers-from-relaychain-to-parachain.md",
    "html_url": "https://docs.polkadot.com/tutorials/interoperability/xcm-transfers/from-relaychain-to-parachain/",
    "preview": "[Cross-Consensus Messaging (XCM)](/develop/interoperability/intro-to-xcm/){target=\\_blank} facilitates asset transfers both within the same consensus system and between different ones, such as between a relay chain and its parachains. For cross-system transfers, two main methods are available:",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Setup",
        "anchor": "setup"
      },
      {
        "depth": 2,
        "title": "Use Polkadot.js Apps",
        "anchor": "use-polkadotjs-apps"
      },
      {
        "depth": 3,
        "title": "From the Relay Chain Perspective",
        "anchor": "from-the-relay-chain-perspective"
      },
      {
        "depth": 3,
        "title": "From the Parachain Perspective",
        "anchor": "from-the-parachain-perspective"
      },
      {
        "depth": 2,
        "title": "Use PAPI",
        "anchor": "use-papi"
      },
      {
        "depth": 2,
        "title": "Additional Resources",
        "anchor": "additional-resources"
      }
    ],
    "stats": {
      "chars": 12251,
      "words": 1565,
      "headings": 8,
      "estimated_token_count_total": 2772
    },
    "hash": "sha256:94ae5c26e580d04ee292b315d4e13967b8d679dc0fbf575f123de6d8e0031597",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-onchain-governance-fast-track-gov-proposal",
    "title": "Fast Track a Governance Proposal",
    "slug": "tutorials-onchain-governance-fast-track-gov-proposal",
    "categories": [
      "Tooling",
      "Tutorial"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-onchain-governance-fast-track-gov-proposal.md",
    "html_url": "https://docs.polkadot.com/tutorials/onchain-governance/fast-track-gov-proposal/",
    "preview": "Polkadot's [OpenGov](/polkadot-protocol/onchain-governance/overview){target=\\_blank} is a sophisticated governance mechanism designed to allow the network to evolve gracefully over time, guided by its stakeholders. This system features multiple [tracks](https://wiki.polkadot.com/learn/learn-polkadot-opengov-origins/#origins-and-tracks-info){target=\\_blank} for different types of proposals, each with parameters for approval, support, and confirmation period. While this flexibility is powerful, it",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Set Up the Project",
        "anchor": "set-up-the-project"
      },
      {
        "depth": 2,
        "title": "Submit and Execute a Proposal Using Chopsticks",
        "anchor": "submit-and-execute-a-proposal-using-chopsticks"
      },
      {
        "depth": 3,
        "title": "Spin Up the Polkadot Fork",
        "anchor": "spin-up-the-polkadot-fork"
      },
      {
        "depth": 3,
        "title": "Set Up Dependencies and Structure",
        "anchor": "set-up-dependencies-and-structure"
      },
      {
        "depth": 3,
        "title": "Connect to the Forked Chain",
        "anchor": "connect-to-the-forked-chain"
      },
      {
        "depth": 3,
        "title": "Create and Submit the Proposal",
        "anchor": "create-and-submit-the-proposal"
      },
      {
        "depth": 3,
        "title": "Force Proposal Execution",
        "anchor": "force-proposal-execution"
      },
      {
        "depth": 2,
        "title": "Execute the Proposal Script",
        "anchor": "execute-the-proposal-script"
      },
      {
        "depth": 2,
        "title": "Summary",
        "anchor": "summary"
      },
      {
        "depth": 2,
        "title": "Full Code",
        "anchor": "full-code"
      }
    ],
    "stats": {
      "chars": 155338,
      "words": 17567,
      "headings": 12,
      "estimated_token_count_total": 34535
    },
    "hash": "sha256:bd0ece3ed39941568f54d0ac40d9cfc2557cf3a540dc6b8de576ef5603b9cea3",
    "last_modified": "2025-09-17T14:52:50+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-polkadot-sdk-parachains-zero-to-hero-add-pallets-to-runtime",
    "title": "Add Pallets to the Runtime",
    "slug": "tutorials-polkadot-sdk-parachains-zero-to-hero-add-pallets-to-runtime",
    "categories": [
      "Basics",
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-polkadot-sdk-parachains-zero-to-hero-add-pallets-to-runtime.md",
    "html_url": "https://docs.polkadot.com/tutorials/polkadot-sdk/parachains/zero-to-hero/add-pallets-to-runtime/",
    "preview": "In previous tutorials, you learned how to [create a custom pallet](/tutorials/polkadot-sdk/parachains/zero-to-hero/build-custom-pallet/){target=\\_blank} and [test it](/tutorials/polkadot-sdk/parachains/zero-to-hero/pallet-unit-testing/){target=\\_blank}. The next step is to include this pallet in your runtime, integrating it into the core logic of your blockchain.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Add the Pallets as Dependencies",
        "anchor": "add-the-pallets-as-dependencies"
      },
      {
        "depth": 3,
        "title": "Update the Runtime Configuration",
        "anchor": "update-the-runtime-configuration"
      },
      {
        "depth": 2,
        "title": "Recompile the Runtime",
        "anchor": "recompile-the-runtime"
      },
      {
        "depth": 2,
        "title": "Run Your Chain Locally",
        "anchor": "run-your-chain-locally"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 12060,
      "words": 1526,
      "headings": 6,
      "estimated_token_count_total": 3115
    },
    "hash": "sha256:732e428a8829d11de342f4f9d2bb7234ea4c27a529765c30cbb28c0fcad8e629",
    "last_modified": "2025-09-17T14:52:51+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-polkadot-sdk-parachains-zero-to-hero-build-custom-pallet",
    "title": "Build a Custom Pallet",
    "slug": "tutorials-polkadot-sdk-parachains-zero-to-hero-build-custom-pallet",
    "categories": [
      "Basics",
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-polkadot-sdk-parachains-zero-to-hero-build-custom-pallet.md",
    "html_url": "https://docs.polkadot.com/tutorials/polkadot-sdk/parachains/zero-to-hero/build-custom-pallet/",
    "preview": "In Polkadot SDK-based blockchains, runtime functionality is built through modular components called [pallets](/polkadot-protocol/glossary#pallet){target=\\_blank}. These pallets are Rust-based runtime modules created using [FRAME (Framework for Runtime Aggregation of Modular Entities)](/develop/parachains/customize-parachain/overview/){target=\\_blank}, a powerful library that simplifies blockchain development by providing specialized macros and standardized patterns for building blockchain logic.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Create a New Project",
        "anchor": "create-a-new-project"
      },
      {
        "depth": 2,
        "title": "Add Dependencies",
        "anchor": "add-dependencies"
      },
      {
        "depth": 2,
        "title": "Implement the Pallet Logic",
        "anchor": "implement-the-pallet-logic"
      },
      {
        "depth": 3,
        "title": "Add Scaffold Pallet Structure",
        "anchor": "add-scaffold-pallet-structure"
      },
      {
        "depth": 3,
        "title": "Pallet Configuration",
        "anchor": "pallet-configuration"
      },
      {
        "depth": 3,
        "title": "Add Events",
        "anchor": "add-events"
      },
      {
        "depth": 3,
        "title": "Add Storage Items",
        "anchor": "add-storage-items"
      },
      {
        "depth": 3,
        "title": "Implement Custom Errors",
        "anchor": "implement-custom-errors"
      },
      {
        "depth": 3,
        "title": "Implement Calls",
        "anchor": "implement-calls"
      },
      {
        "depth": 2,
        "title": "Verify Compilation",
        "anchor": "verify-compilation"
      },
      {
        "depth": 2,
        "title": "Key Takeaways",
        "anchor": "key-takeaways"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 31658,
      "words": 3454,
      "headings": 14,
      "estimated_token_count_total": 6762
    },
    "hash": "sha256:4fb69a1530ec1de2d9cf552ba7353905b51db664c846adbdd59188b3fb84edf2",
    "last_modified": "2025-09-17T14:52:51+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-polkadot-sdk-parachains-zero-to-hero-deploy-to-testnet",
    "title": "Deploy on Paseo TestNet",
    "slug": "tutorials-polkadot-sdk-parachains-zero-to-hero-deploy-to-testnet",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-polkadot-sdk-parachains-zero-to-hero-deploy-to-testnet.md",
    "html_url": "https://docs.polkadot.com/tutorials/polkadot-sdk/parachains/zero-to-hero/deploy-to-testnet/",
    "preview": "Previously, you learned how to [build and run a blockchain locally](/tutorials/polkadot-sdk/parachains/zero-to-hero/add-pallets-to-runtime/){target=\\_blank}. Now, you'll take the next step towards a production-like environment by deploying your parachain to a public test network.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Get Started with an Account and Tokens",
        "anchor": "get-started-with-an-account-and-tokens"
      },
      {
        "depth": 2,
        "title": "Reserve a Parachain Identifier",
        "anchor": "reserve-a-parachain-identifier"
      },
      {
        "depth": 2,
        "title": "Generate Customs Keys for Your Collator",
        "anchor": "generate-customs-keys-for-your-collator"
      },
      {
        "depth": 2,
        "title": "Generate the Chain Specification",
        "anchor": "generate-the-chain-specification"
      },
      {
        "depth": 2,
        "title": "Export Required Files",
        "anchor": "export-required-files"
      },
      {
        "depth": 2,
        "title": "Register a Parathread",
        "anchor": "register-a-parathread"
      },
      {
        "depth": 2,
        "title": "Start the Collator Node",
        "anchor": "start-the-collator-node"
      },
      {
        "depth": 2,
        "title": "Producing Blocks",
        "anchor": "producing-blocks"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 20493,
      "words": 2508,
      "headings": 10,
      "estimated_token_count_total": 4366
    },
    "hash": "sha256:2b6223530a6f5fe12879c60944318644777842fe3e0fbcb0e1951494f6daa6db",
    "last_modified": "2025-09-17T14:52:51+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-polkadot-sdk-parachains-zero-to-hero-obtain-coretime",
    "title": "Obtain Coretime",
    "slug": "tutorials-polkadot-sdk-parachains-zero-to-hero-obtain-coretime",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-polkadot-sdk-parachains-zero-to-hero-obtain-coretime.md",
    "html_url": "https://docs.polkadot.com/tutorials/polkadot-sdk/parachains/zero-to-hero/obtain-coretime/",
    "preview": "After deploying a parachain to the Paseo TestNet in the [Deploy to TestNet](/tutorials/polkadot-sdk/parachains/zero-to-hero/deploy-to-testnet/){target=\\_blank} tutorial, the focus shifts to understanding Coretime, which is the mechanism in which validation resources are allocated from the relay chain to the respective task, such as a parachain. A parachain could only produce blocks and finalize them on the relay chain by obtaining coretime.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Order On Demand Coretime",
        "anchor": "order-on-demand-coretime"
      },
      {
        "depth": 2,
        "title": "Purchase Bulk Coretime",
        "anchor": "purchase-bulk-coretime"
      },
      {
        "depth": 3,
        "title": "Get Coretime Funds",
        "anchor": "get-coretime-funds"
      },
      {
        "depth": 3,
        "title": "Purchase a Core",
        "anchor": "purchase-a-core"
      },
      {
        "depth": 3,
        "title": "Assign a Core",
        "anchor": "assign-a-core"
      }
    ],
    "stats": {
      "chars": 8627,
      "words": 1309,
      "headings": 7,
      "estimated_token_count_total": 2139
    },
    "hash": "sha256:3a6edadbb265a41bfebbdfef17e5b1c9bf34352c0660e158f72078f7fa73c203",
    "last_modified": "2025-09-17T14:52:51+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-polkadot-sdk-parachains-zero-to-hero-pallet-benchmarking",
    "title": "Pallet Benchmarking",
    "slug": "tutorials-polkadot-sdk-parachains-zero-to-hero-pallet-benchmarking",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-polkadot-sdk-parachains-zero-to-hero-pallet-benchmarking.md",
    "html_url": "https://docs.polkadot.com/tutorials/polkadot-sdk/parachains/zero-to-hero/pallet-benchmarking/",
    "preview": "After validating your pallet through testing and integrating it into your runtime, the next crucial step is benchmarking. Testing procedures were detailed in the [Pallet Unit Testing](/tutorials/polkadot-sdk/parachains/zero-to-hero/pallet-unit-testing/){target=\\_blank} tutorial, while runtime integration was covered in the [Add Pallets to the Runtime](/tutorials/polkadot-sdk/parachains/zero-to-hero/add-pallets-to-runtime/){target=\\_blank} guide.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Environment Setup",
        "anchor": "environment-setup"
      },
      {
        "depth": 2,
        "title": "Implement Benchmark Tests",
        "anchor": "implement-benchmark-tests"
      },
      {
        "depth": 2,
        "title": "Execute the Benchmarking",
        "anchor": "execute-the-benchmarking"
      },
      {
        "depth": 2,
        "title": "Add Benchmarking Weights to the Pallet",
        "anchor": "add-benchmarking-weights-to-the-pallet"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 14007,
      "words": 1730,
      "headings": 6,
      "estimated_token_count_total": 3259
    },
    "hash": "sha256:9847e91b172a179975cca8e4064e9b126a1df24a665b8323943f5a66a333bd02",
    "last_modified": "2025-09-17T14:52:51+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-polkadot-sdk-parachains-zero-to-hero-pallet-unit-testing",
    "title": "Pallet Unit Testing",
    "slug": "tutorials-polkadot-sdk-parachains-zero-to-hero-pallet-unit-testing",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-polkadot-sdk-parachains-zero-to-hero-pallet-unit-testing.md",
    "html_url": "https://docs.polkadot.com/tutorials/polkadot-sdk/parachains/zero-to-hero/pallet-unit-testing/",
    "preview": "You have learned how to create a new pallet in the [Build a Custom Pallet](/tutorials/polkadot-sdk/parachains/zero-to-hero/build-custom-pallet/){target=\\_blank} tutorial; now you will see how to test the pallet to ensure that it works as expected. As stated in the [Pallet Testing](/develop/parachains/testing/pallet-testing/){target=\\_blank} article, unit testing is crucial for ensuring the reliability and correctness of pallets in Polkadot SDK-based blockchains. Comprehensive testing helps valid",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Set Up the Testing Environment",
        "anchor": "set-up-the-testing-environment"
      },
      {
        "depth": 2,
        "title": "Implement Mocked Runtime",
        "anchor": "implement-mocked-runtime"
      },
      {
        "depth": 3,
        "title": "Full Mocked Runtime",
        "anchor": "full-mocked-runtime"
      },
      {
        "depth": 2,
        "title": "Implement Test Cases",
        "anchor": "implement-test-cases"
      },
      {
        "depth": 3,
        "title": "Successful Operations",
        "anchor": "successful-operations"
      },
      {
        "depth": 3,
        "title": "Preventing Value Overflow",
        "anchor": "preventing-value-overflow"
      },
      {
        "depth": 3,
        "title": "Origin and Access Control",
        "anchor": "origin-and-access-control"
      },
      {
        "depth": 3,
        "title": "Edge Case Handling",
        "anchor": "edge-case-handling"
      },
      {
        "depth": 3,
        "title": "Verify State Changes",
        "anchor": "verify-state-changes"
      },
      {
        "depth": 3,
        "title": "Full Test Suite",
        "anchor": "full-test-suite"
      },
      {
        "depth": 2,
        "title": "Run the Tests",
        "anchor": "run-the-tests"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 27586,
      "words": 2971,
      "headings": 14,
      "estimated_token_count_total": 5895
    },
    "hash": "sha256:2ec93282369dd7f5e147a9ee7634a13661405543746313698ea5137559c40011",
    "last_modified": "2025-09-17T14:52:51+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-polkadot-sdk-parachains-zero-to-hero-runtime-upgrade",
    "title": "Runtime Upgrades",
    "slug": "tutorials-polkadot-sdk-parachains-zero-to-hero-runtime-upgrade",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-polkadot-sdk-parachains-zero-to-hero-runtime-upgrade.md",
    "html_url": "https://docs.polkadot.com/tutorials/polkadot-sdk/parachains/zero-to-hero/runtime-upgrade/",
    "preview": "Upgrading the runtime of your Polkadot SDK-based blockchain is a fundamental feature that allows you to add new functionality, fix bugs, or improve performance without requiring a hard fork. Runtime upgrades are performed by submitting a special extrinsic that replaces the existing on-chain WASM runtime code. This process is trustless, transparent, and can be executed either through governance or using sudo, depending on your chain's configuration.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Update the Runtime",
        "anchor": "update-the-runtime"
      },
      {
        "depth": 3,
        "title": "Start Your Chain",
        "anchor": "start-your-chain"
      },
      {
        "depth": 3,
        "title": "Add a New Feature",
        "anchor": "add-a-new-feature"
      },
      {
        "depth": 3,
        "title": "Update Runtime Configuration",
        "anchor": "update-runtime-configuration"
      },
      {
        "depth": 3,
        "title": "Bump the Runtime Version",
        "anchor": "bump-the-runtime-version"
      },
      {
        "depth": 3,
        "title": "Build the New Runtime",
        "anchor": "build-the-new-runtime"
      },
      {
        "depth": 2,
        "title": "Submit the Runtime Upgrade",
        "anchor": "submit-the-runtime-upgrade"
      },
      {
        "depth": 2,
        "title": "Verify the Upgrade",
        "anchor": "verify-the-upgrade"
      },
      {
        "depth": 3,
        "title": "Check Runtime Version",
        "anchor": "check-runtime-version"
      },
      {
        "depth": 3,
        "title": "Test New Functionality",
        "anchor": "test-new-functionality"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 10596,
      "words": 1424,
      "headings": 12,
      "estimated_token_count_total": 2560
    },
    "hash": "sha256:b678fa44ec703083262a9347c79b84f469a0b82a96866857d0cc84ada575abde",
    "last_modified": "2025-09-17T14:52:51+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-polkadot-sdk-parachains-zero-to-hero-set-up-a-template",
    "title": "Set Up a Template",
    "slug": "tutorials-polkadot-sdk-parachains-zero-to-hero-set-up-a-template",
    "categories": [
      "Basics",
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-polkadot-sdk-parachains-zero-to-hero-set-up-a-template.md",
    "html_url": "https://docs.polkadot.com/tutorials/polkadot-sdk/parachains/zero-to-hero/set-up-a-template/",
    "preview": "[Polkadot SDK](https://github.com/paritytech/polkadot-sdk){target=\\_blank} offers a versatile and extensible blockchain development framework, enabling you to create custom blockchains tailored to your specific application or business requirements.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Utility Tools",
        "anchor": "utility-tools"
      },
      {
        "depth": 2,
        "title": "Compile the Runtime",
        "anchor": "compile-the-runtime"
      },
      {
        "depth": 2,
        "title": "Start the Local Chain",
        "anchor": "start-the-local-chain"
      },
      {
        "depth": 2,
        "title": "Interact with the Node",
        "anchor": "interact-with-the-node"
      },
      {
        "depth": 2,
        "title": "Stop the Node",
        "anchor": "stop-the-node"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 12175,
      "words": 1848,
      "headings": 8,
      "estimated_token_count_total": 3203
    },
    "hash": "sha256:ffd211e230faba6e8614cd00879dcbbbba8cd28dc56e892961ec43911eda44dc",
    "last_modified": "2025-09-17T14:52:51+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-polkadot-sdk-system-chains-asset-hub-asset-conversion",
    "title": "Convert Assets on Asset Hub",
    "slug": "tutorials-polkadot-sdk-system-chains-asset-hub-asset-conversion",
    "categories": [
      "dApps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-polkadot-sdk-system-chains-asset-hub-asset-conversion.md",
    "html_url": "https://docs.polkadot.com/tutorials/polkadot-sdk/system-chains/asset-hub/asset-conversion/",
    "preview": "Asset Conversion is an Automated Market Maker (AMM) utilizing [Uniswap V2](https://github.com/Uniswap/v2-core){target=\\_blank} logic and implemented as a pallet on Polkadot's Asset Hub. For more details about this feature, please visit the [Asset Conversion on Asset Hub](/tutorials/polkadot-sdk/system-chains/asset-hub/asset-conversion/){target=\\_blank} wiki page.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Create a Liquidity Pool",
        "anchor": "create-a-liquidity-pool"
      },
      {
        "depth": 2,
        "title": "Add Liquidity to a Pool",
        "anchor": "add-liquidity-to-a-pool"
      },
      {
        "depth": 2,
        "title": "Swap Assets",
        "anchor": "swap-assets"
      },
      {
        "depth": 3,
        "title": "Swap from an Exact Amount of Tokens",
        "anchor": "swap-from-an-exact-amount-of-tokens"
      },
      {
        "depth": 3,
        "title": "Swap to an Exact Amount of Tokens",
        "anchor": "swap-to-an-exact-amount-of-tokens"
      },
      {
        "depth": 2,
        "title": "Withdraw Liquidity from a Pool",
        "anchor": "withdraw-liquidity-from-a-pool"
      },
      {
        "depth": 2,
        "title": "Test Environment Setup",
        "anchor": "test-environment-setup"
      }
    ],
    "stats": {
      "chars": 18994,
      "words": 2682,
      "headings": 9,
      "estimated_token_count_total": 4240
    },
    "hash": "sha256:7d9e0febb048e9cbf4763e271e685ddcacf1e5e8442f5b380655665b27ce9f80",
    "last_modified": "2025-09-17T14:52:51+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-polkadot-sdk-system-chains-asset-hub-register-foreign-asset",
    "title": "Register a Foreign Asset on Asset Hub",
    "slug": "tutorials-polkadot-sdk-system-chains-asset-hub-register-foreign-asset",
    "categories": [
      "dApps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-polkadot-sdk-system-chains-asset-hub-register-foreign-asset.md",
    "html_url": "https://docs.polkadot.com/tutorials/polkadot-sdk/system-chains/asset-hub/register-foreign-asset/",
    "preview": "As outlined in the [Asset Hub Overview](/polkadot-protocol/architecture/system-chains/asset-hub){target=\\_blank}, Asset Hub supports two categories of assets: local and foreign. Local assets are created on the Asset Hub system parachain and are identified by integer IDs. On the other hand, foreign assets, which originate outside of Asset Hub, are recognized by [Multilocations](https://github.com/polkadot-fellows/xcm-format?tab=readme-ov-file#7-universal-consensus-location-identifiers){target=\\_b",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Steps to Register a Foreign Asset",
        "anchor": "steps-to-register-a-foreign-asset"
      },
      {
        "depth": 3,
        "title": "Asset Hub",
        "anchor": "asset-hub"
      },
      {
        "depth": 3,
        "title": "Source Parachain",
        "anchor": "source-parachain"
      },
      {
        "depth": 2,
        "title": "Asset Registration Verification",
        "anchor": "asset-registration-verification"
      },
      {
        "depth": 2,
        "title": "Test Environment Setup",
        "anchor": "test-environment-setup"
      }
    ],
    "stats": {
      "chars": 9821,
      "words": 1441,
      "headings": 7,
      "estimated_token_count_total": 2263
    },
    "hash": "sha256:a6a535f4f5e145d3e2a7518739f752ee3ed37b7745483f414e21c97792331d18",
    "last_modified": "2025-09-17T14:52:51+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-polkadot-sdk-system-chains-asset-hub-register-local-asset",
    "title": "Register a Local Asset",
    "slug": "tutorials-polkadot-sdk-system-chains-asset-hub-register-local-asset",
    "categories": [
      "Basics",
      "dApps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-polkadot-sdk-system-chains-asset-hub-register-local-asset.md",
    "html_url": "https://docs.polkadot.com/tutorials/polkadot-sdk/system-chains/asset-hub/register-local-asset/",
    "preview": "As detailed in the [Asset Hub Overview](/polkadot-protocol/architecture/system-chains/asset-hub){target=\\_blank} page, Asset Hub accommodates two types of assets: local and foreign. Local assets are those that were created in Asset Hub and are identifiable by an integer ID. On the other hand, foreign assets originate from a sibling parachain and are identified by a Multilocation.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Steps to Register a Local Asset",
        "anchor": "steps-to-register-a-local-asset"
      },
      {
        "depth": 2,
        "title": "Verify Asset Registration",
        "anchor": "verify-asset-registration"
      },
      {
        "depth": 2,
        "title": "Test Setup Environment",
        "anchor": "test-setup-environment"
      }
    ],
    "stats": {
      "chars": 6445,
      "words": 1039,
      "headings": 5,
      "estimated_token_count_total": 1571
    },
    "hash": "sha256:3ad540d8ad636304705cccb08bc1fdf21fe2fc7dc0f99bd509b23ae96d20e0ba",
    "last_modified": "2025-09-17T14:52:51+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-polkadot-sdk-testing-fork-live-chains",
    "title": "Fork a Chain with Chopsticks",
    "slug": "tutorials-polkadot-sdk-testing-fork-live-chains",
    "categories": [
      "Basics",
      "dApps",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-polkadot-sdk-testing-fork-live-chains.md",
    "html_url": "https://docs.polkadot.com/tutorials/polkadot-sdk/testing/fork-live-chains/",
    "preview": "Chopsticks is an innovative tool that simplifies the process of forking live Polkadot SDK chains. This guide provides step-by-step instructions to configure and fork chains, enabling developers to:",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Configuration File",
        "anchor": "configuration-file"
      },
      {
        "depth": 2,
        "title": "Create a Fork",
        "anchor": "create-a-fork"
      },
      {
        "depth": 2,
        "title": "Interact with a Fork",
        "anchor": "interact-with-a-fork"
      },
      {
        "depth": 3,
        "title": "Use Polkadot.js Apps",
        "anchor": "use-polkadotjs-apps"
      },
      {
        "depth": 3,
        "title": "Use Polkadot.js Library",
        "anchor": "use-polkadotjs-library"
      },
      {
        "depth": 2,
        "title": "Replay Blocks",
        "anchor": "replay-blocks"
      },
      {
        "depth": 2,
        "title": "XCM Testing",
        "anchor": "xcm-testing"
      }
    ],
    "stats": {
      "chars": 21807,
      "words": 1343,
      "headings": 9,
      "estimated_token_count_total": 2741
    },
    "hash": "sha256:31cc848794b5e92a44316f06dadfc79012ec84c7be907d1ad9c7454fa834734c",
    "last_modified": "2025-09-17T14:52:51+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-polkadot-sdk-testing-spawn-basic-chain",
    "title": "Spawn a Basic Chain with Zombienet",
    "slug": "tutorials-polkadot-sdk-testing-spawn-basic-chain",
    "categories": [
      "Basics",
      "dApps",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-polkadot-sdk-testing-spawn-basic-chain.md",
    "html_url": "https://docs.polkadot.com/tutorials/polkadot-sdk/testing/spawn-basic-chain/",
    "preview": "Zombienet simplifies blockchain development by enabling developers to create temporary, customizable networks for testing and validation. These ephemeral chains are ideal for experimenting with configurations, debugging applications, and validating functionality in a controlled environment.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Set Up Local Provider",
        "anchor": "set-up-local-provider"
      },
      {
        "depth": 2,
        "title": "Define the Network",
        "anchor": "define-the-network"
      },
      {
        "depth": 2,
        "title": "Spawn the Network",
        "anchor": "spawn-the-network"
      },
      {
        "depth": 2,
        "title": "Interact with the Spawned Network",
        "anchor": "interact-with-the-spawned-network"
      },
      {
        "depth": 3,
        "title": "Connect to the Nodes",
        "anchor": "connect-to-the-nodes"
      },
      {
        "depth": 3,
        "title": "Check Metrics",
        "anchor": "check-metrics"
      },
      {
        "depth": 3,
        "title": "Check Logs",
        "anchor": "check-logs"
      }
    ],
    "stats": {
      "chars": 9528,
      "words": 1403,
      "headings": 9,
      "estimated_token_count_total": 2583
    },
    "hash": "sha256:e1d803d600950c93badec9ccbaadd8ef97219ce96af815c39206456e39950964",
    "last_modified": "2025-09-17T14:52:51+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-smart-contracts-demo-aplications-deploying-uniswap-v2",
    "title": "Deploying Uniswap V2 on Polkadot",
    "slug": "tutorials-smart-contracts-demo-aplications-deploying-uniswap-v2",
    "categories": [
      "dApps",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-smart-contracts-demo-aplications-deploying-uniswap-v2.md",
    "html_url": "https://docs.polkadot.com/tutorials/smart-contracts/demo-aplications/deploying-uniswap-v2/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Set Up the Project",
        "anchor": "set-up-the-project"
      },
      {
        "depth": 2,
        "title": "Understanding Uniswap V2 Architecture",
        "anchor": "understanding-uniswap-v2-architecture"
      },
      {
        "depth": 2,
        "title": "Test the Contracts",
        "anchor": "test-the-contracts"
      },
      {
        "depth": 2,
        "title": "Deploy the Contracts",
        "anchor": "deploy-the-contracts"
      },
      {
        "depth": 2,
        "title": "Conclusion",
        "anchor": "conclusion"
      }
    ],
    "stats": {
      "chars": 11296,
      "words": 1560,
      "headings": 7,
      "estimated_token_count_total": 2673
    },
    "hash": "sha256:ad71f4c28acfa0ecbfdf72e21b5137ed01f483d1926af047b520d50f7d99039e",
    "last_modified": "2025-09-17T14:52:51+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-smart-contracts-deploy-erc20",
    "title": "Deploy an ERC-20 to Polkadot Hub",
    "slug": "tutorials-smart-contracts-deploy-erc20",
    "categories": [
      "Basics",
      "dApps",
      "Smart Contracts",
      "Tutorial"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-smart-contracts-deploy-erc20.md",
    "html_url": "https://docs.polkadot.com/tutorials/smart-contracts/deploy-erc20/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Create the ERC-20 Contract",
        "anchor": "create-the-erc-20-contract"
      },
      {
        "depth": 2,
        "title": "Compile the Contract",
        "anchor": "compile-the-contract"
      },
      {
        "depth": 2,
        "title": "Deploy the Contract",
        "anchor": "deploy-the-contract"
      },
      {
        "depth": 2,
        "title": "Interact with Your ERC-20 Contract",
        "anchor": "interact-with-your-erc-20-contract"
      }
    ],
    "stats": {
      "chars": 8691,
      "words": 1182,
      "headings": 6,
      "estimated_token_count_total": 2057
    },
    "hash": "sha256:b4bfe432282015ca100c019c907af34cc60ba47a59e5ec26ae0b98772ba87755",
    "last_modified": "2025-09-17T14:52:51+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-smart-contracts-deploy-nft",
    "title": "Deploy an NFT to Polkadot Hub",
    "slug": "tutorials-smart-contracts-deploy-nft",
    "categories": [
      "Basics",
      "dApps",
      "Smart Contracts",
      "Tutorial"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-smart-contracts-deploy-nft.md",
    "html_url": "https://docs.polkadot.com/tutorials/smart-contracts/deploy-nft/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Create the NFT Contract",
        "anchor": "create-the-nft-contract"
      },
      {
        "depth": 2,
        "title": "Compile the Contract",
        "anchor": "compile-the-contract"
      },
      {
        "depth": 2,
        "title": "Deploy the Contract",
        "anchor": "deploy-the-contract"
      },
      {
        "depth": 2,
        "title": "Interact with Your NFT Contract",
        "anchor": "interact-with-your-nft-contract"
      }
    ],
    "stats": {
      "chars": 9566,
      "words": 1303,
      "headings": 6,
      "estimated_token_count_total": 2221
    },
    "hash": "sha256:4f7f2b2721f062dce60aa54becfcf4c23d317a789ae772d8e95888818ffab792",
    "last_modified": "2025-09-17T14:52:51+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-smart-contracts-launch-your-first-project-create-contracts",
    "title": "Create a Smart Contract",
    "slug": "tutorials-smart-contracts-launch-your-first-project-create-contracts",
    "categories": [
      "Basics",
      "Smart Contracts"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-smart-contracts-launch-your-first-project-create-contracts.md",
    "html_url": "https://docs.polkadot.com/tutorials/smart-contracts/launch-your-first-project/create-contracts/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Understanding Smart Contract Structure",
        "anchor": "understanding-smart-contract-structure"
      },
      {
        "depth": 2,
        "title": "Create the Smart Contract",
        "anchor": "create-the-smart-contract"
      },
      {
        "depth": 2,
        "title": "Understanding the Code",
        "anchor": "understanding-the-code"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 8546,
      "words": 1178,
      "headings": 6,
      "estimated_token_count_total": 1762
    },
    "hash": "sha256:b0e527e7452a8bbae9158f47cdd25d57cb36b49882ad93a15702cc34dbb54fb6",
    "last_modified": "2025-09-17T14:52:52+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-smart-contracts-launch-your-first-project-create-dapp-ethers-js",
    "title": "Create a dApp With Ethers.js",
    "slug": "tutorials-smart-contracts-launch-your-first-project-create-dapp-ethers-js",
    "categories": [
      "dApp",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-smart-contracts-launch-your-first-project-create-dapp-ethers-js.md",
    "html_url": "https://docs.polkadot.com/tutorials/smart-contracts/launch-your-first-project/create-dapp-ethers-js/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Project Overview",
        "anchor": "project-overview"
      },
      {
        "depth": 2,
        "title": "Set Up the Project",
        "anchor": "set-up-the-project"
      },
      {
        "depth": 2,
        "title": "Connect to Polkadot Hub",
        "anchor": "connect-to-polkadot-hub"
      },
      {
        "depth": 2,
        "title": "Set Up the Smart Contract Interface",
        "anchor": "set-up-the-smart-contract-interface"
      },
      {
        "depth": 2,
        "title": "Create the Wallet Connection Component",
        "anchor": "create-the-wallet-connection-component"
      },
      {
        "depth": 2,
        "title": "Read Data from the Blockchain",
        "anchor": "read-data-from-the-blockchain"
      },
      {
        "depth": 2,
        "title": "Write Data to the Blockchain",
        "anchor": "write-data-to-the-blockchain"
      },
      {
        "depth": 2,
        "title": "Conclusion",
        "anchor": "conclusion"
      }
    ],
    "stats": {
      "chars": 21887,
      "words": 2569,
      "headings": 10,
      "estimated_token_count_total": 5141
    },
    "hash": "sha256:e927931ad31eb69936a5a3b1765ce828abbffe3fbc2a6a4035e31e1440ac24c6",
    "last_modified": "2025-09-17T14:52:54+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-smart-contracts-launch-your-first-project-create-dapp-viem",
    "title": "Create a dApp With Viem",
    "slug": "tutorials-smart-contracts-launch-your-first-project-create-dapp-viem",
    "categories": [
      "dApp",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-smart-contracts-launch-your-first-project-create-dapp-viem.md",
    "html_url": "https://docs.polkadot.com/tutorials/smart-contracts/launch-your-first-project/create-dapp-viem/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Project Overview",
        "anchor": "project-overview"
      },
      {
        "depth": 2,
        "title": "Set Up the Project",
        "anchor": "set-up-the-project"
      },
      {
        "depth": 2,
        "title": "Install Dependencies",
        "anchor": "install-dependencies"
      },
      {
        "depth": 2,
        "title": "Connect to Polkadot Hub",
        "anchor": "connect-to-polkadot-hub"
      },
      {
        "depth": 2,
        "title": "Set Up the Smart Contract Interface",
        "anchor": "set-up-the-smart-contract-interface"
      },
      {
        "depth": 2,
        "title": "Create the Wallet Connection Component",
        "anchor": "create-the-wallet-connection-component"
      },
      {
        "depth": 2,
        "title": "Create the Read Contract Component",
        "anchor": "create-the-read-contract-component"
      },
      {
        "depth": 2,
        "title": "Create the Write Contract Component",
        "anchor": "create-the-write-contract-component"
      },
      {
        "depth": 2,
        "title": "How It Works",
        "anchor": "how-it-works"
      },
      {
        "depth": 2,
        "title": "Conclusion",
        "anchor": "conclusion"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 27859,
      "words": 3205,
      "headings": 12,
      "estimated_token_count_total": 6227
    },
    "hash": "sha256:850a510bef2666b56c827e61e4bcf8782582848a50c1b57a29351cc385e97bb8",
    "last_modified": "2025-09-17T14:52:56+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-smart-contracts-launch-your-first-project-test-and-deploy-with-hardhat",
    "title": "Test and Deploy with Hardhat",
    "slug": "tutorials-smart-contracts-launch-your-first-project-test-and-deploy-with-hardhat",
    "categories": [
      "dApp",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-smart-contracts-launch-your-first-project-test-and-deploy-with-hardhat.md",
    "html_url": "https://docs.polkadot.com/tutorials/smart-contracts/launch-your-first-project/test-and-deploy-with-hardhat/",
    "preview": "-!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Setting Up the Development Environment",
        "anchor": "setting-up-the-development-environment"
      },
      {
        "depth": 2,
        "title": "Adding the Smart Contract",
        "anchor": "adding-the-smart-contract"
      },
      {
        "depth": 2,
        "title": "Writing Tests",
        "anchor": "writing-tests"
      },
      {
        "depth": 2,
        "title": "Deploying with Ignition",
        "anchor": "deploying-with-ignition"
      },
      {
        "depth": 2,
        "title": "Interacting with Your Deployed Contract",
        "anchor": "interacting-with-your-deployed-contract"
      },
      {
        "depth": 2,
        "title": "Conclusion",
        "anchor": "conclusion"
      }
    ],
    "stats": {
      "chars": 17047,
      "words": 2188,
      "headings": 8,
      "estimated_token_count_total": 4030
    },
    "hash": "sha256:590397c0ddcccea6cc299fac5fe00637c6a3b926c98257c42d08c9c5cbcab02e",
    "last_modified": "2025-09-17T14:52:57+00:00",
    "token_estimator": "heuristic-v1"
  }
]