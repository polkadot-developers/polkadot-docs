[
  {
    "id": "develop-interoperability-intro-to-xcm",
    "title": "Introduction to XCM",
    "slug": "develop-interoperability-intro-to-xcm",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-intro-to-xcm.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/intro-to-xcm/",
    "preview": "Polkadot’s unique value lies in its ability to enable interoperability between parachains and other blockchain systems. At the core of this capability is XCM (Cross-Consensus Messaging)—a flexible messaging format that facilitates communication and collaboration between independent consensus systems.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Messaging Format",
        "anchor": "messaging-format"
      },
      {
        "depth": 2,
        "title": "The Four Principles of XCM",
        "anchor": "the-four-principles-of-xcm"
      },
      {
        "depth": 2,
        "title": "The XCM Tech Stack",
        "anchor": "the-xcm-tech-stack"
      },
      {
        "depth": 2,
        "title": "Core Functionalities of XCM",
        "anchor": "core-functionalities-of-xcm"
      },
      {
        "depth": 2,
        "title": "XCM Example",
        "anchor": "xcm-example"
      },
      {
        "depth": 2,
        "title": "Overview",
        "anchor": "overview"
      }
    ],
    "stats": {
      "chars": 7456,
      "words": 976,
      "headings": 7,
      "estimated_token_count_total": 1505
    },
    "hash": "sha256:2b017d8a89f8734b9cbb501f03612a22657d2f8d4d85c51e490e4c8ca4bf771b",
    "last_modified": "2025-10-08T17:32:19+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-send-messages",
    "title": "Send XCM Messages",
    "slug": "develop-interoperability-send-messages",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-send-messages.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/send-messages/",
    "preview": "One of the core FRAME pallets that enables parachains to engage in cross-chain communication using the Cross-Consensus Message (XCM) format is [`pallet-xcm`](https://paritytech.github.io/polkadot-sdk/master/pallet_xcm/pallet/index.html){target=\\_blank}. It facilitates the sending, execution, and management of XCM messages, thereby allowing parachains to interact with other chains within the ecosystem. Additionally, `pallet-xcm`, also referred to as the XCM pallet, supports essential operations l",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "XCM Frame Pallet Overview",
        "anchor": "xcm-frame-pallet-overview"
      },
      {
        "depth": 3,
        "title": "Key Roles of the XCM Pallet",
        "anchor": "key-roles-of-the-xcm-pallet"
      },
      {
        "depth": 2,
        "title": "Primary Extrinsics of the XCM Pallet",
        "anchor": "primary-extrinsics-of-the-xcm-pallet"
      },
      {
        "depth": 3,
        "title": "Execute",
        "anchor": "execute"
      },
      {
        "depth": 3,
        "title": "Send",
        "anchor": "send"
      },
      {
        "depth": 2,
        "title": "XCM Router",
        "anchor": "xcm-router"
      }
    ],
    "stats": {
      "chars": 7146,
      "words": 978,
      "headings": 7,
      "estimated_token_count_total": 1635
    },
    "hash": "sha256:46252e238b0b51105148dc622da6d8809c55ec11da7ec7b2953c35ca52f5f585",
    "last_modified": "2025-10-08T17:32:19+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-test-and-debug",
    "title": "Testing and Debugging",
    "slug": "develop-interoperability-test-and-debug",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-test-and-debug.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/test-and-debug/",
    "preview": "Cross-Consensus Messaging (XCM) is a core feature of the Polkadot ecosystem, enabling communication between parachains, relay chains, and system chains. To ensure the reliability of XCM-powered blockchains, thorough testing and debugging are essential before production deployment.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "XCM Emulator",
        "anchor": "xcm-emulator"
      },
      {
        "depth": 3,
        "title": "Advantages and Limitations",
        "anchor": "advantages-and-limitations"
      },
      {
        "depth": 3,
        "title": "How Does It Work?",
        "anchor": "how-does-it-work"
      }
    ],
    "stats": {
      "chars": 7729,
      "words": 836,
      "headings": 4,
      "estimated_token_count_total": 1487
    },
    "hash": "sha256:b07cb65636f24dbff99f21a5c6e4ac047e6455a879c3f9bbf692514fc24da17b",
    "last_modified": "2025-10-08T17:32:20+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-versions-v5-asset-claimer",
    "title": "Asset claimer",
    "slug": "develop-interoperability-versions-v5-asset-claimer",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-versions-v5-asset-claimer.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/versions/v5/asset-claimer/",
    "preview": "XCMv5 introduces the [`AssetClaimer`](https://paritytech.github.io/polkadot-sdk/master/staging_xcm/v5/enum.Hint.html#variant.AssetClaimer){target=\\_blank} execution hint through [`SetHints`](https://paritytech.github.io/polkadot-sdk/master/staging_xcm/v5/enum.Instruction.html#variant.SetHints){target=\\_blank}, which significantly simplifies the process of recovering trapped assets when XCM execution fails.",
    "outline": [
      {
        "depth": 2,
        "title": "The problem before v5",
        "anchor": "the-problem-before-v5"
      },
      {
        "depth": 2,
        "title": "The V5 Solution: `AssetClaimer` Hint",
        "anchor": "the-v5-solution-assetclaimer-hint"
      },
      {
        "depth": 2,
        "title": "How it Improves the Situation",
        "anchor": "how-it-improves-the-situation"
      },
      {
        "depth": 2,
        "title": "Key Improvements",
        "anchor": "key-improvements"
      },
      {
        "depth": 2,
        "title": "Best Practices",
        "anchor": "best-practices"
      },
      {
        "depth": 3,
        "title": "Set Hint Early",
        "anchor": "set-hint-early"
      },
      {
        "depth": 3,
        "title": "Use for Cross-Chain Transfers",
        "anchor": "use-for-cross-chain-transfers"
      },
      {
        "depth": 3,
        "title": "Consider Origin Preservation",
        "anchor": "consider-origin-preservation"
      },
      {
        "depth": 2,
        "title": "Migration Impact",
        "anchor": "migration-impact"
      }
    ],
    "stats": {
      "chars": 5080,
      "words": 582,
      "headings": 9,
      "estimated_token_count_total": 955
    },
    "hash": "sha256:72ee7394fd1308c111a8d548cb4dc63c6b9bc5b6e2bb556dd1baacbaedb92286",
    "last_modified": "2025-10-08T17:32:20+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-versions-v5-fees",
    "title": "Fees",
    "slug": "develop-interoperability-versions-v5-fees",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-versions-v5-fees.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/versions/v5/fees/",
    "preview": "XCM V5 introduces a new fee payment mechanism that simplifies and unifies the handling of fees across various XCM operations.",
    "outline": [
      {
        "depth": 2,
        "title": "Key Changes from V4",
        "anchor": "key-changes-from-v4"
      },
      {
        "depth": 3,
        "title": "BuyExecution vs. PayFees",
        "anchor": "buyexecution-vs-payfees"
      },
      {
        "depth": 3,
        "title": "PayFees Instruction",
        "anchor": "payfees-instruction"
      },
      {
        "depth": 2,
        "title": "Backward Compatibility",
        "anchor": "backward-compatibility"
      },
      {
        "depth": 2,
        "title": "Migration Considerations",
        "anchor": "migration-considerations"
      },
      {
        "depth": 2,
        "title": "`RefundSurplus` Instruction",
        "anchor": "refundsurplus-instruction"
      }
    ],
    "stats": {
      "chars": 4145,
      "words": 531,
      "headings": 6,
      "estimated_token_count_total": 876
    },
    "hash": "sha256:d6cb22337280a19bdf24981dcba98f337d48ee4f79ce7ac040466ef1cb4b330b",
    "last_modified": "2025-10-08T17:32:20+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-versions-v5-migration-guide",
    "title": "Migration Guide (XCM V4 → XCM V5)",
    "slug": "develop-interoperability-versions-v5-migration-guide",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-versions-v5-migration-guide.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/versions/v5/migration-guide/",
    "preview": "This guide helps migrate existing code that uses XCM from XCM V4 to XCM V5. Most XCM V4 code continues to work, but XCM V5 introduces powerful new patterns that improve flexibility and developer experience.",
    "outline": [
      {
        "depth": 2,
        "title": "When to migrate",
        "anchor": "when-to-migrate"
      },
      {
        "depth": 2,
        "title": "Key Changes",
        "anchor": "key-changes"
      },
      {
        "depth": 3,
        "title": "From Dedicated Extrinsics to Raw XCMs",
        "anchor": "from-dedicated-extrinsics-to-raw-xcms"
      },
      {
        "depth": 3,
        "title": "Unified Transfer Instructions",
        "anchor": "unified-transfer-instructions"
      },
      {
        "depth": 3,
        "title": "Predictable fee payment",
        "anchor": "predictable-fee-payment"
      },
      {
        "depth": 2,
        "title": "Migration Examples",
        "anchor": "migration-examples"
      },
      {
        "depth": 3,
        "title": "Simple Teleport",
        "anchor": "simple-teleport"
      },
      {
        "depth": 3,
        "title": "Example 2: Multi-Asset Transfer and a Transact",
        "anchor": "example-2-multi-asset-transfer-and-a-transact"
      },
      {
        "depth": 2,
        "title": "Breaking Changes to Watch Out For",
        "anchor": "breaking-changes-to-watch-out-for"
      },
      {
        "depth": 3,
        "title": "`fallback_max_weight` in `Transact`",
        "anchor": "fallback_max_weight-in-transact"
      },
      {
        "depth": 3,
        "title": "Network IDs Cleanup",
        "anchor": "network-ids-cleanup"
      },
      {
        "depth": 2,
        "title": "Next Steps",
        "anchor": "next-steps"
      }
    ],
    "stats": {
      "chars": 13459,
      "words": 1562,
      "headings": 12,
      "estimated_token_count_total": 2744
    },
    "hash": "sha256:1a2d34ccab19bd71263763bbc294977acf34f5800398f51398753594cfc7d7a6",
    "last_modified": "2025-10-08T17:32:20+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-versions-v5-transact",
    "title": "Transact",
    "slug": "develop-interoperability-versions-v5-transact",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-versions-v5-transact.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/versions/v5/transact/",
    "preview": "XCM V5 improves the [`Transact`](https://paritytech.github.io/polkadot-sdk/master/staging_xcm/v5/enum.Instruction.html#variant.Transact){target=\\_blank} instruction by introducing optional weight specification through the `fallback_max_weight` parameter, making cross-chain calls more flexible and reliable.",
    "outline": [
      {
        "depth": 2,
        "title": "Changes from V4",
        "anchor": "changes-from-v4"
      },
      {
        "depth": 3,
        "title": "Weight Parameter Evolution",
        "anchor": "weight-parameter-evolution"
      },
      {
        "depth": 2,
        "title": "The `fallback_max_weight` Parameter",
        "anchor": "the-fallback_max_weight-parameter"
      },
      {
        "depth": 3,
        "title": "When to Use `undefined`",
        "anchor": "when-to-use-undefined"
      },
      {
        "depth": 3,
        "title": "When to Specify Weight",
        "anchor": "when-to-specify-weight"
      },
      {
        "depth": 2,
        "title": "Benefits of the New Approach",
        "anchor": "benefits-of-the-new-approach"
      },
      {
        "depth": 3,
        "title": "Problems Solved",
        "anchor": "problems-solved"
      },
      {
        "depth": 3,
        "title": "XCM V5 Improvements",
        "anchor": "xcm-v5-improvements"
      },
      {
        "depth": 2,
        "title": "Migration Strategy",
        "anchor": "migration-strategy"
      },
      {
        "depth": 2,
        "title": "Fee Implications",
        "anchor": "fee-implications"
      }
    ],
    "stats": {
      "chars": 3637,
      "words": 370,
      "headings": 10,
      "estimated_token_count_total": 608
    },
    "hash": "sha256:7bba6105d99721373aa6f494627d20af97b1851c19703f26be26c32f0c83524b",
    "last_modified": "2025-10-08T17:32:20+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-versions-v5-transfers",
    "title": "Transfers",
    "slug": "develop-interoperability-versions-v5-transfers",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-versions-v5-transfers.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/versions/v5/transfers/",
    "preview": "XCM V5 introduces the unified [`InitiateTransfer`](https://paritytech.github.io/polkadot-sdk/master/staging_xcm/v5/enum.Instruction.html#variant.InitiateTransfer){target=\\_blank} instruction that consolidates and enhances cross-chain transfer capabilities.",
    "outline": [
      {
        "depth": 2,
        "title": "Changes from v4",
        "anchor": "changes-from-v4"
      },
      {
        "depth": 3,
        "title": "Instruction Consolidation",
        "anchor": "instruction-consolidation"
      },
      {
        "depth": 3,
        "title": "Enhanced Transfer Specification",
        "anchor": "enhanced-transfer-specification"
      },
      {
        "depth": 2,
        "title": "Key Enhancements",
        "anchor": "key-enhancements"
      },
      {
        "depth": 3,
        "title": "Mixed Transfer Types",
        "anchor": "mixed-transfer-types"
      },
      {
        "depth": 3,
        "title": "Origin Preservation",
        "anchor": "origin-preservation"
      },
      {
        "depth": 3,
        "title": "Integrated Fee Handling",
        "anchor": "integrated-fee-handling"
      },
      {
        "depth": 2,
        "title": "Backward Compatibility",
        "anchor": "backward-compatibility"
      },
      {
        "depth": 2,
        "title": "Migration Benefits",
        "anchor": "migration-benefits"
      }
    ],
    "stats": {
      "chars": 3243,
      "words": 336,
      "headings": 9,
      "estimated_token_count_total": 558
    },
    "hash": "sha256:b79fe56c9604712825bdf30d17667fd8f237fce9691be0d8d042d38691dbba7a",
    "last_modified": "2025-10-08T17:32:20+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-versions-v5-writing-xcm-programs",
    "title": "Writing XCM Programs",
    "slug": "develop-interoperability-versions-v5-writing-xcm-programs",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-versions-v5-writing-xcm-programs.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/versions/v5/writing-xcm-programs/",
    "preview": "XCM V5 shifts the recommended approach from using dedicated extrinsics to executing raw XCM programs directly.",
    "outline": [
      {
        "depth": 2,
        "title": "The Paradigm Shift",
        "anchor": "the-paradigm-shift"
      },
      {
        "depth": 3,
        "title": "Previous Approach",
        "anchor": "previous-approach"
      },
      {
        "depth": 3,
        "title": "XCM V5 Recommendation",
        "anchor": "xcm-v5-recommendation"
      },
      {
        "depth": 2,
        "title": "Execution Approach",
        "anchor": "execution-approach"
      },
      {
        "depth": 2,
        "title": "Benefits of Direct Execution",
        "anchor": "benefits-of-direct-execution"
      },
      {
        "depth": 2,
        "title": "Migration Considerations",
        "anchor": "migration-considerations"
      }
    ],
    "stats": {
      "chars": 1830,
      "words": 215,
      "headings": 6,
      "estimated_token_count_total": 348
    },
    "hash": "sha256:11cd8d428fa9c3e70490da5c63ce4597cd89ec46306d2bb49b016ced6aa68c3d",
    "last_modified": "2025-10-08T17:32:20+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-xcm-channels",
    "title": "XCM Channels",
    "slug": "develop-interoperability-xcm-channels",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-xcm-channels.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/xcm-channels/",
    "preview": "Polkadot is designed to enable interoperability between its connected parachains. At the core of this interoperability is the [Cross-Consensus Message Format (XCM)](/develop/interoperability/intro-to-xcm/){target=\\_blank}, a standard language that allows parachains to communicate and interact with each other.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Establishing HRMP Channels",
        "anchor": "establishing-hrmp-channels"
      },
      {
        "depth": 3,
        "title": "Relay Chain Parameters",
        "anchor": "relay-chain-parameters"
      },
      {
        "depth": 3,
        "title": "Dispatching Extrinsics",
        "anchor": "dispatching-extrinsics"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 6418,
      "words": 874,
      "headings": 5,
      "estimated_token_count_total": 1373
    },
    "hash": "sha256:fc85c27ad58c1ca6d0e1fcded4b8e2b6e3d0e888ed4aa99158e21a5e799f5e6b",
    "last_modified": "2025-10-08T17:32:20+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-xcm-config",
    "title": "XCM Config",
    "slug": "develop-interoperability-xcm-config",
    "categories": [
      "Reference",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-xcm-config.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/xcm-config/",
    "preview": "The [XCM executor](https://paritytech.github.io/polkadot-sdk/master/staging_xcm_executor/index.html){target=\\_blank} is a crucial component responsible for interpreting and executing XCM messages (XCMs) with Polkadot SDK-based chains. It processes and manages XCM instructions, ensuring they are executed correctly and in sequentially. Adhering to the [Cross-Consensus Virtual Machine (XCVM) specification](https://paritytech.github.io/xcm-docs/overview/xcvm.html#the-xcvm){target=\\_blank}, the XCM e",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "XCM Executor Configuration",
        "anchor": "xcm-executor-configuration"
      },
      {
        "depth": 2,
        "title": "Config Items",
        "anchor": "config-items"
      },
      {
        "depth": 3,
        "title": "Inner Config",
        "anchor": "inner-config"
      },
      {
        "depth": 3,
        "title": "Outer Config",
        "anchor": "outer-config"
      },
      {
        "depth": 2,
        "title": "Multiple Implementations",
        "anchor": "multiple-implementations"
      }
    ],
    "stats": {
      "chars": 21710,
      "words": 2458,
      "headings": 6,
      "estimated_token_count_total": 4979
    },
    "hash": "sha256:ed3b7c8101b69f9c907cca7c5edfef67fdb5e7bc3c8df8d9fbad297f9dd3c80a",
    "last_modified": "2025-10-08T17:32:20+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-xcm-guides-from-apps-claiming-trapped-assets",
    "title": "Claiming Trapped Assets",
    "slug": "develop-interoperability-xcm-guides-from-apps-claiming-trapped-assets",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-xcm-guides-from-apps-claiming-trapped-assets.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/xcm-guides/from-apps/claiming-trapped-assets/",
    "preview": "When XCM execution fails or succeeds, leftover assets can become \"trapped\" on the destination chain. These assets are held by the system but are not accessible through normal means. XCM provides mechanisms to claim these trapped assets and recover them. This guide details the process and required steps to claim trapped assets.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Trapped Assets Causes",
        "anchor": "trapped-assets-causes"
      },
      {
        "depth": 2,
        "title": "The `ClaimAsset` Instruction",
        "anchor": "the-claimasset-instruction"
      },
      {
        "depth": 3,
        "title": "Parameters",
        "anchor": "parameters"
      },
      {
        "depth": 3,
        "title": "Basic Claiming Process",
        "anchor": "basic-claiming-process"
      },
      {
        "depth": 2,
        "title": "The `AssetClaimer` Hint",
        "anchor": "the-assetclaimer-hint"
      },
      {
        "depth": 2,
        "title": "Best practices",
        "anchor": "best-practices"
      }
    ],
    "stats": {
      "chars": 8821,
      "words": 958,
      "headings": 7,
      "estimated_token_count_total": 1781
    },
    "hash": "sha256:35c71a215558cd0642d363e4515ad240093995d42720e6495cd2994c859243e4",
    "last_modified": "2025-10-08T17:32:20+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-xcm-guides-from-apps-fees",
    "title": "Fees",
    "slug": "develop-interoperability-xcm-guides-from-apps-fees",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-xcm-guides-from-apps-fees.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/xcm-guides/from-apps/fees/",
    "preview": "In blockchain systems, fees are crucial. They prevent malicious actors from exhausting the results of the network, making such attacks expensive. The XCM subsystem has its own way of dealing with fees, flexible enough to allow feeless execution in situations that warrant it.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Execution",
        "anchor": "execution"
      },
      {
        "depth": 2,
        "title": "Delivery",
        "anchor": "delivery"
      },
      {
        "depth": 2,
        "title": "PayFees",
        "anchor": "payfees"
      },
      {
        "depth": 2,
        "title": "Estimations",
        "anchor": "estimations"
      }
    ],
    "stats": {
      "chars": 6304,
      "words": 926,
      "headings": 5,
      "estimated_token_count_total": 1449
    },
    "hash": "sha256:346061a3b851699f815068b42a949f7a2259f6ece083c97cf35538cb7bd4e547",
    "last_modified": "2025-10-08T17:32:20+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-xcm-guides-from-apps-transact",
    "title": "Transact",
    "slug": "develop-interoperability-xcm-guides-from-apps-transact",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-xcm-guides-from-apps-transact.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/xcm-guides/from-apps/transact/",
    "preview": "The [`Transact`](https://paritytech.github.io/polkadot-sdk/master/staging_xcm/v5/opaque/type.Instruction.html#variant.Transact){target=\\_blank} instruction enables arbitrary cross-chain execution of pallet calls or smart contract functions. It's one of the most powerful XCM instructions because it allows you to perform any operation that would normally be done locally on a remote chain. However, it requires knowing the implementation details of the destination chain.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Chain-Specific Knowledge Required",
        "anchor": "chain-specific-knowledge-required"
      },
      {
        "depth": 3,
        "title": "Required Knowledge",
        "anchor": "required-knowledge"
      },
      {
        "depth": 3,
        "title": "Examples of Chain-Specific Requirements",
        "anchor": "examples-of-chain-specific-requirements"
      },
      {
        "depth": 2,
        "title": "Origin Considerations",
        "anchor": "origin-considerations"
      }
    ],
    "stats": {
      "chars": 4444,
      "words": 562,
      "headings": 5,
      "estimated_token_count_total": 1082
    },
    "hash": "sha256:ec82957c768c2c07a272e7a28659c812b223df836e21372b1642f0bb249d7b39",
    "last_modified": "2025-10-08T17:32:20+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-xcm-guides-from-apps-transfers",
    "title": "Transfers",
    "slug": "develop-interoperability-xcm-guides-from-apps-transfers",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-xcm-guides-from-apps-transfers.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/xcm-guides/from-apps/transfers/",
    "preview": "The [`InitiateTransfer`](https://paritytech.github.io/polkadot-sdk/master/staging_xcm/v5/enum.Instruction.html#variant.InitiateTransfer){target=\\_blank} instruction is the primary mechanism for cross-chain transfers in XCM. It provides a unified interface for different types of transfers and brings additional functionalities not possible with previous instruction versions.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Transfer Types",
        "anchor": "transfer-types"
      },
      {
        "depth": 2,
        "title": "Remote Fees",
        "anchor": "remote-fees"
      },
      {
        "depth": 2,
        "title": "Origin Preservation",
        "anchor": "origin-preservation"
      }
    ],
    "stats": {
      "chars": 20278,
      "words": 2293,
      "headings": 4,
      "estimated_token_count_total": 4182
    },
    "hash": "sha256:25a2c4b5830df38e0aacec94d288179064742759e7df31fcb9905ad405e78fc3",
    "last_modified": "2025-10-08T17:32:20+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-interoperability-xcm-runtime-apis",
    "title": "XCM Runtime APIs",
    "slug": "develop-interoperability-xcm-runtime-apis",
    "categories": [
      "Reference",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-interoperability-xcm-runtime-apis.md",
    "html_url": "https://docs.polkadot.com/develop/interoperability/xcm-runtime-apis/",
    "preview": "Runtime APIs allow node-side code to extract information from the runtime state. While simple storage access retrieves stored values directly, runtime APIs enable arbitrary computation, making them a powerful tool for interacting with the chain's state.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Dry Run API",
        "anchor": "dry-run-api"
      },
      {
        "depth": 3,
        "title": "Dry Run Call",
        "anchor": "dry-run-call"
      },
      {
        "depth": 3,
        "title": "Dry Run XCM",
        "anchor": "dry-run-xcm"
      },
      {
        "depth": 2,
        "title": "XCM Payment API",
        "anchor": "xcm-payment-api"
      },
      {
        "depth": 3,
        "title": "Query Acceptable Payment Assets",
        "anchor": "query-acceptable-payment-assets"
      },
      {
        "depth": 3,
        "title": "Query XCM Weight",
        "anchor": "query-xcm-weight"
      },
      {
        "depth": 3,
        "title": "Query Weight to Asset Fee",
        "anchor": "query-weight-to-asset-fee"
      },
      {
        "depth": 3,
        "title": "Query Delivery Fees",
        "anchor": "query-delivery-fees"
      }
    ],
    "stats": {
      "chars": 33184,
      "words": 3164,
      "headings": 9,
      "estimated_token_count_total": 6512
    },
    "hash": "sha256:43a4a5832611e49024022c1e9e825742919017f959036bbcb82e82622d0daa18",
    "last_modified": "2025-10-08T17:32:21+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-networks",
    "title": "Networks",
    "slug": "develop-networks",
    "categories": [
      "Basics",
      "Networks"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-networks.md",
    "html_url": "https://docs.polkadot.com/develop/networks/",
    "preview": "The Polkadot ecosystem consists of multiple networks designed to support different stages of blockchain development, from main networks to test networks. Each network serves a unique purpose, providing developers with flexible environments for building, testing, and deploying blockchain applications.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Production Networks",
        "anchor": "production-networks"
      },
      {
        "depth": 3,
        "title": "Polkadot",
        "anchor": "polkadot"
      },
      {
        "depth": 3,
        "title": "Kusama",
        "anchor": "kusama"
      },
      {
        "depth": 2,
        "title": "Test Networks",
        "anchor": "test-networks"
      },
      {
        "depth": 3,
        "title": "Westend",
        "anchor": "westend"
      },
      {
        "depth": 3,
        "title": "Paseo",
        "anchor": "paseo"
      },
      {
        "depth": 2,
        "title": "Additional Resources",
        "anchor": "additional-resources"
      }
    ],
    "stats": {
      "chars": 6097,
      "words": 664,
      "headings": 8,
      "estimated_token_count_total": 1520
    },
    "hash": "sha256:ed09ef7a6abe21204006186fd5791ada7597688fad67e30244dc449c51330309",
    "last_modified": "2025-10-08T17:32:21+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-connect-to-kusama",
    "title": "Connect to Kusama",
    "slug": "develop-smart-contracts-connect-to-kusama",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-connect-to-kusama.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/connect-to-kusama/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. <div class=\"button-wrapper\"> <a href=\"#\" class=\"md-button connectMetaMask\" value=\"kusamaHub\">Connect to Kusama Hub</a> </div>",
    "outline": [
      {
        "depth": 2,
        "title": "Networks Details",
        "anchor": "networks-details"
      },
      {
        "depth": 2,
        "title": "Important Deployment Considerations",
        "anchor": "important-deployment-considerations"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 3590,
      "words": 474,
      "headings": 3,
      "estimated_token_count_total": 508
    },
    "hash": "sha256:563ae25a7c6479d71347efae4f11301c83654b9d1675cc299d23bc7cbc34b6d5",
    "last_modified": "2025-10-08T17:32:21+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-connect-to-polkadot",
    "title": "Connect to Polkadot",
    "slug": "develop-smart-contracts-connect-to-polkadot",
    "categories": [
      "Smart Contracts"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-connect-to-polkadot.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/connect-to-polkadot/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. <div class=\"button-wrapper\"> <a href=\"#\" class=\"md-button connectMetaMask\" value=\"passetHub\">Connect to Polkadot Hub TestNet</a> </div>",
    "outline": [
      {
        "depth": 2,
        "title": "Networks Details",
        "anchor": "networks-details"
      },
      {
        "depth": 2,
        "title": "Test Tokens",
        "anchor": "test-tokens"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 3496,
      "words": 482,
      "headings": 3,
      "estimated_token_count_total": 570
    },
    "hash": "sha256:1247dfb5f5ac040bca81cd1002153e0ee53f4052b2a3d40b623834bd7f00d065",
    "last_modified": "2025-10-08T17:32:21+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-dev-environments-foundry",
    "title": "Use Foundry with Polkadot Hub",
    "slug": "develop-smart-contracts-dev-environments-foundry",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-dev-environments-foundry.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/dev-environments/foundry/",
    "preview": "!!! warning Consider that features like Anvil (Foundry's local blockchain) and `forge test` (for running Solidity tests) are not yet supported in `foundry-polkadot`.",
    "outline": [
      {
        "depth": 2,
        "title": "Overview",
        "anchor": "overview"
      },
      {
        "depth": 2,
        "title": "Installation",
        "anchor": "installation"
      },
      {
        "depth": 2,
        "title": "Compiler Integration",
        "anchor": "compiler-integration"
      },
      {
        "depth": 2,
        "title": "Command-Line Interface (CLI)",
        "anchor": "command-line-interface-cli"
      },
      {
        "depth": 2,
        "title": "Unsupported or Modified Features",
        "anchor": "unsupported-or-modified-features"
      },
      {
        "depth": 2,
        "title": "Set up a Project",
        "anchor": "set-up-a-project"
      },
      {
        "depth": 2,
        "title": "Compile a Project",
        "anchor": "compile-a-project"
      },
      {
        "depth": 2,
        "title": "Deploy a Contract",
        "anchor": "deploy-a-contract"
      },
      {
        "depth": 2,
        "title": "Supported `foundry-polkadot` Commands",
        "anchor": "supported-foundry-polkadot-commands"
      },
      {
        "depth": 3,
        "title": "Forge Commands",
        "anchor": "forge-commands"
      },
      {
        "depth": 3,
        "title": "Cast Commands",
        "anchor": "cast-commands"
      }
    ],
    "stats": {
      "chars": 23398,
      "words": 2744,
      "headings": 11,
      "estimated_token_count_total": 6228
    },
    "hash": "sha256:72e41f816f07026d96c803f399c71852aa1151c464e79cec3e1746b282d5eaae",
    "last_modified": "2025-10-08T17:32:21+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-dev-environments-hardhat",
    "title": "Use Hardhat with Polkadot Hub",
    "slug": "develop-smart-contracts-dev-environments-hardhat",
    "categories": [
      "Smart Contracts",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-dev-environments-hardhat.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/dev-environments/hardhat/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. <div class=\"grid cards\" markdown> - :octicons-code-16:{ .lg .middle } __Test and Deploy with Hardhat__",
    "outline": [
      {
        "depth": 2,
        "title": "Overview",
        "anchor": "overview"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Set Up Hardhat",
        "anchor": "set-up-hardhat"
      },
      {
        "depth": 2,
        "title": "Compile Your Contract",
        "anchor": "compile-your-contract"
      },
      {
        "depth": 2,
        "title": "Set Up a Testing Environment",
        "anchor": "set-up-a-testing-environment"
      },
      {
        "depth": 2,
        "title": "Test Your Contract",
        "anchor": "test-your-contract"
      },
      {
        "depth": 2,
        "title": "Deploy to a Local Node",
        "anchor": "deploy-to-a-local-node"
      },
      {
        "depth": 2,
        "title": "Deploying to a Live Network",
        "anchor": "deploying-to-a-live-network"
      },
      {
        "depth": 2,
        "title": "Interacting with Your Contract",
        "anchor": "interacting-with-your-contract"
      },
      {
        "depth": 2,
        "title": "Upgrading the Plugin",
        "anchor": "upgrading-the-plugin"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 18520,
      "words": 2475,
      "headings": 11,
      "estimated_token_count_total": 4188
    },
    "hash": "sha256:fe008393aa37c27bb71b4483d4e2c4fbcda94f8c1be461fdd07eff40efbb4e26",
    "last_modified": "2025-10-08T17:32:21+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-dev-environments-remix",
    "title": "Use the Polkadot Remix IDE",
    "slug": "develop-smart-contracts-dev-environments-remix",
    "categories": [
      "Smart Contracts",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-dev-environments-remix.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/dev-environments/remix/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. <div class=\"grid cards\" markdown> - :octicons-code-16:{ .lg .middle } __Deploy NFTs Using Remix IDE__",
    "outline": [
      {
        "depth": 2,
        "title": "Overview",
        "anchor": "overview"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Accessing Remix IDE",
        "anchor": "accessing-remix-ide"
      },
      {
        "depth": 2,
        "title": "Creating a New Contract",
        "anchor": "creating-a-new-contract"
      },
      {
        "depth": 2,
        "title": "Compiling Your Contract",
        "anchor": "compiling-your-contract"
      },
      {
        "depth": 2,
        "title": "Deploying Contracts",
        "anchor": "deploying-contracts"
      },
      {
        "depth": 2,
        "title": "Interacting with Contracts",
        "anchor": "interacting-with-contracts"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 6732,
      "words": 913,
      "headings": 8,
      "estimated_token_count_total": 1375
    },
    "hash": "sha256:8e6bfed5fa59bb748e80698ea702f62ce6951c48bdb955ee9ef0d3516e856887",
    "last_modified": "2025-10-08T17:32:21+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-faqs",
    "title": "Polkadot Hub Smart Contract FAQs",
    "slug": "develop-smart-contracts-faqs",
    "categories": [
      "Smart Contracts"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-faqs.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/faqs/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. !!! note For a list of known incompatibilities, please refer to the [Solidity and Yul IR translation incompatibilities](/polkadot-protocol/smart-contract-basics/evm-vs-polkavm/#solidity-and-yul-ir-translation-incompatibilities){target=\\_blank} section.",
    "outline": [
      {
        "depth": 2,
        "title": "General Questions",
        "anchor": "general-questions"
      },
      {
        "depth": 3,
        "title": "What are the different types of smart contracts I can build on Polkadot?",
        "anchor": "what-are-the-different-types-of-smart-contracts-i-can-build-on-polkadot"
      },
      {
        "depth": 3,
        "title": "Should I build a smart contract or a parachain?",
        "anchor": "should-i-build-a-smart-contract-or-a-parachain"
      },
      {
        "depth": 3,
        "title": "What's the difference between Polkadot Hub smart contracts and other EVM chains?",
        "anchor": "whats-the-difference-between-polkadot-hub-smart-contracts-and-other-evm-chains"
      },
      {
        "depth": 2,
        "title": "Development Environment",
        "anchor": "development-environment"
      },
      {
        "depth": 3,
        "title": "Can I use my existing Ethereum development tools?",
        "anchor": "can-i-use-my-existing-ethereum-development-tools"
      },
      {
        "depth": 3,
        "title": "How do I set up local development?",
        "anchor": "how-do-i-set-up-local-development"
      },
      {
        "depth": 3,
        "title": "What networks are available for testing and deployment?",
        "anchor": "what-networks-are-available-for-testing-and-deployment"
      },
      {
        "depth": 2,
        "title": "Technical Implementation",
        "anchor": "technical-implementation"
      },
      {
        "depth": 3,
        "title": "How do Ethereum addresses work on Polkadot?",
        "anchor": "how-do-ethereum-addresses-work-on-polkadot"
      },
      {
        "depth": 3,
        "title": "What are the key differences in the gas model?",
        "anchor": "what-are-the-key-differences-in-the-gas-model"
      },
      {
        "depth": 3,
        "title": "How does contract deployment work?",
        "anchor": "how-does-contract-deployment-work"
      },
      {
        "depth": 3,
        "title": "Which Solidity features are not supported?",
        "anchor": "which-solidity-features-are-not-supported"
      },
      {
        "depth": 3,
        "title": "How do I handle the existential deposit requirement?",
        "anchor": "how-do-i-handle-the-existential-deposit-requirement"
      },
      {
        "depth": 2,
        "title": "Migration and Compatibility",
        "anchor": "migration-and-compatibility"
      },
      {
        "depth": 3,
        "title": "Can I migrate my existing Ethereum contracts?",
        "anchor": "can-i-migrate-my-existing-ethereum-contracts"
      },
      {
        "depth": 2,
        "title": "Troubleshooting",
        "anchor": "troubleshooting"
      },
      {
        "depth": 3,
        "title": "Why are my gas calculations different?",
        "anchor": "why-are-my-gas-calculations-different"
      },
      {
        "depth": 3,
        "title": "I deployed a contract with MetaMask, and got a `code size` error - why?",
        "anchor": "i-deployed-a-contract-with-metamask-and-got-a-code-size-error-why"
      },
      {
        "depth": 3,
        "title": "I found a bug, where can I log it?",
        "anchor": "i-found-a-bug-where-can-i-log-it"
      },
      {
        "depth": 2,
        "title": "Known Issues",
        "anchor": "known-issues"
      },
      {
        "depth": 3,
        "title": "Runtime Behavior",
        "anchor": "runtime-behavior"
      },
      {
        "depth": 3,
        "title": "Development Tools",
        "anchor": "development-tools"
      },
      {
        "depth": 3,
        "title": "Contract Patterns",
        "anchor": "contract-patterns"
      },
      {
        "depth": 3,
        "title": "Compilation",
        "anchor": "compilation"
      }
    ],
    "stats": {
      "chars": 7469,
      "words": 979,
      "headings": 25,
      "estimated_token_count_total": 1605
    },
    "hash": "sha256:89410eccd72495aa0a4eecf229c74a8f2db31994c6a03b9957c2be92ea227520",
    "last_modified": "2025-10-08T17:32:21+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-json-rpc-apis",
    "title": "JSON-RPC APIs",
    "slug": "develop-smart-contracts-json-rpc-apis",
    "categories": [
      "Reference"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-json-rpc-apis.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/json-rpc-apis/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Available Methods",
        "anchor": "available-methods"
      },
      {
        "depth": 3,
        "title": "eth_accounts",
        "anchor": "eth_accounts"
      },
      {
        "depth": 3,
        "title": "eth_blockNumber",
        "anchor": "eth_blocknumber"
      },
      {
        "depth": 3,
        "title": "eth_call",
        "anchor": "eth_call"
      },
      {
        "depth": 3,
        "title": "eth_chainId",
        "anchor": "eth_chainid"
      },
      {
        "depth": 3,
        "title": "eth_estimateGas",
        "anchor": "eth_estimategas"
      },
      {
        "depth": 3,
        "title": "eth_gasPrice",
        "anchor": "eth_gasprice"
      },
      {
        "depth": 3,
        "title": "eth_getBalance",
        "anchor": "eth_getbalance"
      },
      {
        "depth": 3,
        "title": "eth_getBlockByHash",
        "anchor": "eth_getblockbyhash"
      },
      {
        "depth": 3,
        "title": "eth_getBlockByNumber",
        "anchor": "eth_getblockbynumber"
      },
      {
        "depth": 3,
        "title": "eth_getBlockTransactionCountByNumber",
        "anchor": "eth_getblocktransactioncountbynumber"
      },
      {
        "depth": 3,
        "title": "eth_getBlockTransactionCountByHash",
        "anchor": "eth_getblocktransactioncountbyhash"
      },
      {
        "depth": 3,
        "title": "eth_getCode",
        "anchor": "eth_getcode"
      },
      {
        "depth": 3,
        "title": "eth_getLogs",
        "anchor": "eth_getlogs"
      },
      {
        "depth": 3,
        "title": "eth_getStorageAt",
        "anchor": "eth_getstorageat"
      },
      {
        "depth": 3,
        "title": "eth_getTransactionCount",
        "anchor": "eth_gettransactioncount"
      },
      {
        "depth": 3,
        "title": "eth_getTransactionByHash",
        "anchor": "eth_gettransactionbyhash"
      },
      {
        "depth": 3,
        "title": "eth_getTransactionByBlockNumberAndIndex",
        "anchor": "eth_gettransactionbyblocknumberandindex"
      },
      {
        "depth": 3,
        "title": "eth_getTransactionByBlockHashAndIndex",
        "anchor": "eth_gettransactionbyblockhashandindex"
      },
      {
        "depth": 3,
        "title": "eth_getTransactionReceipt",
        "anchor": "eth_gettransactionreceipt"
      },
      {
        "depth": 3,
        "title": "eth_maxPriorityFeePerGas",
        "anchor": "eth_maxpriorityfeepergas"
      },
      {
        "depth": 3,
        "title": "eth_sendRawTransaction",
        "anchor": "eth_sendrawtransaction"
      },
      {
        "depth": 3,
        "title": "eth_sendTransaction",
        "anchor": "eth_sendtransaction"
      },
      {
        "depth": 3,
        "title": "eth_syncing",
        "anchor": "eth_syncing"
      },
      {
        "depth": 3,
        "title": "net_listening",
        "anchor": "net_listening"
      },
      {
        "depth": 3,
        "title": "net_peerCount",
        "anchor": "net_peercount"
      },
      {
        "depth": 3,
        "title": "net_version",
        "anchor": "net_version"
      },
      {
        "depth": 3,
        "title": "system_health",
        "anchor": "system_health"
      },
      {
        "depth": 3,
        "title": "web3_clientVersion",
        "anchor": "web3_clientversion"
      },
      {
        "depth": 3,
        "title": "debug_traceBlockByNumber",
        "anchor": "debug_traceblockbynumber"
      },
      {
        "depth": 3,
        "title": "debug_traceTransaction",
        "anchor": "debug_tracetransaction"
      },
      {
        "depth": 3,
        "title": "debug_traceCall",
        "anchor": "debug_tracecall"
      },
      {
        "depth": 2,
        "title": "Response Format",
        "anchor": "response-format"
      },
      {
        "depth": 2,
        "title": "Error Handling",
        "anchor": "error-handling"
      }
    ],
    "stats": {
      "chars": 31726,
      "words": 3942,
      "headings": 35,
      "estimated_token_count_total": 9750
    },
    "hash": "sha256:1fb7a20bc4a799a771954720428029419ec73afa640e589590c43dd041a7e307",
    "last_modified": "2025-10-08T17:32:21+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-libraries-ethers-js",
    "title": "Deploy Contracts to Polkadot Hub with Ethers.js",
    "slug": "develop-smart-contracts-libraries-ethers-js",
    "categories": [
      "Smart Contracts",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-libraries-ethers-js.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/libraries/ethers-js/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Project Structure",
        "anchor": "project-structure"
      },
      {
        "depth": 2,
        "title": "Set Up the Project",
        "anchor": "set-up-the-project"
      },
      {
        "depth": 2,
        "title": "Install Dependencies",
        "anchor": "install-dependencies"
      },
      {
        "depth": 2,
        "title": "Set Up the Ethers.js Provider",
        "anchor": "set-up-the-ethersjs-provider"
      },
      {
        "depth": 2,
        "title": "Compile Contracts",
        "anchor": "compile-contracts"
      },
      {
        "depth": 3,
        "title": "Install the Revive Library",
        "anchor": "install-the-revive-library"
      },
      {
        "depth": 3,
        "title": "Sample Storage Smart Contract",
        "anchor": "sample-storage-smart-contract"
      },
      {
        "depth": 3,
        "title": "Compile the Smart Contract",
        "anchor": "compile-the-smart-contract"
      },
      {
        "depth": 2,
        "title": "Deploy the Compiled Contract",
        "anchor": "deploy-the-compiled-contract"
      },
      {
        "depth": 2,
        "title": "Interact with the Contract",
        "anchor": "interact-with-the-contract"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 20464,
      "words": 2334,
      "headings": 13,
      "estimated_token_count_total": 4475
    },
    "hash": "sha256:f0cee7ccb3cd294e8f909a220bb63987239ef8155c187a04f8c4864ffdcde288",
    "last_modified": "2025-10-08T17:32:21+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-libraries-viem",
    "title": "viem for Polkadot Hub Smart Contracts",
    "slug": "develop-smart-contracts-libraries-viem",
    "categories": [
      "Smart Contracts",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-libraries-viem.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/libraries/viem/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Project Structure",
        "anchor": "project-structure"
      },
      {
        "depth": 2,
        "title": "Set Up the Project",
        "anchor": "set-up-the-project"
      },
      {
        "depth": 2,
        "title": "Install Dependencies",
        "anchor": "install-dependencies"
      },
      {
        "depth": 2,
        "title": "Initialize Project",
        "anchor": "initialize-project"
      },
      {
        "depth": 2,
        "title": "Set Up the Chain Configuration",
        "anchor": "set-up-the-chain-configuration"
      },
      {
        "depth": 2,
        "title": "Set Up the viem Client",
        "anchor": "set-up-the-viem-client"
      },
      {
        "depth": 2,
        "title": "Set Up a Wallet",
        "anchor": "set-up-a-wallet"
      },
      {
        "depth": 2,
        "title": "Sample Smart Contract",
        "anchor": "sample-smart-contract"
      },
      {
        "depth": 2,
        "title": "Compile the Contract",
        "anchor": "compile-the-contract"
      },
      {
        "depth": 2,
        "title": "Deploy the Contract",
        "anchor": "deploy-the-contract"
      },
      {
        "depth": 2,
        "title": "Interact with the Contract",
        "anchor": "interact-with-the-contract"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 16645,
      "words": 1945,
      "headings": 14,
      "estimated_token_count_total": 3900
    },
    "hash": "sha256:a7541553a50a250521c0a280f997d614763c643b1028147f3fb61391950bda15",
    "last_modified": "2025-10-08T17:32:21+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-libraries-wagmi",
    "title": "Wagmi for Polkadot Hub Smart Contracts",
    "slug": "develop-smart-contracts-libraries-wagmi",
    "categories": [
      "Smart Contracts",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-libraries-wagmi.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/libraries/wagmi/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Set Up the Project",
        "anchor": "set-up-the-project"
      },
      {
        "depth": 2,
        "title": "Install Dependencies",
        "anchor": "install-dependencies"
      },
      {
        "depth": 2,
        "title": "Configure Wagmi for Polkadot Hub",
        "anchor": "configure-wagmi-for-polkadot-hub"
      },
      {
        "depth": 2,
        "title": "Set Up the Wagmi Provider",
        "anchor": "set-up-the-wagmi-provider"
      },
      {
        "depth": 2,
        "title": "Connect a Wallet",
        "anchor": "connect-a-wallet"
      },
      {
        "depth": 2,
        "title": "Fetch Blockchain Data",
        "anchor": "fetch-blockchain-data"
      },
      {
        "depth": 2,
        "title": "Interact with Deployed Contract",
        "anchor": "interact-with-deployed-contract"
      },
      {
        "depth": 2,
        "title": "Integrate Components",
        "anchor": "integrate-components"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 13604,
      "words": 1515,
      "headings": 10,
      "estimated_token_count_total": 3250
    },
    "hash": "sha256:bc771f912627fa09cad64adab1bc81c052f650d6c5a3b4f0c91883a98f6628da",
    "last_modified": "2025-10-08T17:32:21+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-libraries-web3-js",
    "title": "Web3.js",
    "slug": "develop-smart-contracts-libraries-web3-js",
    "categories": [
      "Smart Contracts",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-libraries-web3-js.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/libraries/web3-js/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. !!! warning Web3.js has been [sunset](https://blog.chainsafe.io/web3-js-sunset/){target=\\_blank}. You can find guides on using [Ethers.js](/develop/smart-contracts/libraries/ethers-js){target=\\_blank} and [viem](/develop/smart-contracts/libraries/viem){target=\\_blank} in the [Libraries](/develop/smart-contracts/libraries/){target=\\_",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Project Structure",
        "anchor": "project-structure"
      },
      {
        "depth": 2,
        "title": "Set Up the Project",
        "anchor": "set-up-the-project"
      },
      {
        "depth": 2,
        "title": "Install Dependencies",
        "anchor": "install-dependencies"
      },
      {
        "depth": 2,
        "title": "Set Up the Web3 Provider",
        "anchor": "set-up-the-web3-provider"
      },
      {
        "depth": 2,
        "title": "Compile Contracts",
        "anchor": "compile-contracts"
      },
      {
        "depth": 2,
        "title": "Contract Deployment",
        "anchor": "contract-deployment"
      },
      {
        "depth": 2,
        "title": "Interact with the Contract",
        "anchor": "interact-with-the-contract"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 13347,
      "words": 1586,
      "headings": 10,
      "estimated_token_count_total": 3033
    },
    "hash": "sha256:bc87533eaf42a979a0c17f50ecdc668c364889257c7e0d27b81129770660fd53",
    "last_modified": "2025-10-08T17:32:21+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-libraries-web3-py",
    "title": "Web3.py",
    "slug": "develop-smart-contracts-libraries-web3-py",
    "categories": [
      "Smart Contracts",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-libraries-web3-py.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/libraries/web3-py/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Set Up the Project",
        "anchor": "set-up-the-project"
      },
      {
        "depth": 2,
        "title": "Set Up the Web3 Provider",
        "anchor": "set-up-the-web3-provider"
      },
      {
        "depth": 2,
        "title": "Contract Deployment",
        "anchor": "contract-deployment"
      },
      {
        "depth": 2,
        "title": "Interact with the Contract",
        "anchor": "interact-with-the-contract"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 11652,
      "words": 1335,
      "headings": 6,
      "estimated_token_count_total": 2512
    },
    "hash": "sha256:5d13a0873a78a9802b06686d7caafbf4d23b6ba1edf7d3518943301f2b0110c4",
    "last_modified": "2025-10-08T17:32:21+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-local-development-node",
    "title": "Local Development Node",
    "slug": "develop-smart-contracts-local-development-node",
    "categories": [
      "Smart Contracts"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-local-development-node.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/local-development-node/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Install the Revive Dev Node and ETH-RPC Adapter",
        "anchor": "install-the-revive-dev-node-and-eth-rpc-adapter"
      },
      {
        "depth": 2,
        "title": "Run the Local Node",
        "anchor": "run-the-local-node"
      }
    ],
    "stats": {
      "chars": 9064,
      "words": 1433,
      "headings": 4,
      "estimated_token_count_total": 2432
    },
    "hash": "sha256:809d0ff921587f29045df1d31a5a9fe32ee13fa7b9698aa27ff9f60b2aa7a4d8",
    "last_modified": "2025-10-08T17:32:21+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-overview",
    "title": "Smart Contracts Overview",
    "slug": "develop-smart-contracts-overview",
    "categories": [
      "Basics",
      "Smart Contracts"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-overview.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/overview/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Native Smart Contracts",
        "anchor": "native-smart-contracts"
      },
      {
        "depth": 3,
        "title": "Introduction",
        "anchor": "introduction-2"
      },
      {
        "depth": 3,
        "title": "Smart Contract Development",
        "anchor": "smart-contract-development"
      },
      {
        "depth": 3,
        "title": "Technical Architecture",
        "anchor": "technical-architecture"
      },
      {
        "depth": 3,
        "title": "Development Tools and Resources",
        "anchor": "development-tools-and-resources"
      },
      {
        "depth": 3,
        "title": "Cross-Chain Capabilities",
        "anchor": "cross-chain-capabilities"
      },
      {
        "depth": 3,
        "title": "Use Cases",
        "anchor": "use-cases"
      },
      {
        "depth": 2,
        "title": "Other Smart Contract Environments",
        "anchor": "other-smart-contract-environments"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 6294,
      "words": 802,
      "headings": 10,
      "estimated_token_count_total": 1118
    },
    "hash": "sha256:0468268436ffdb759cad8390a838d5fba2391118baa8fd8cd494b36397b10329",
    "last_modified": "2025-10-08T17:32:21+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-precompiles-interact-with-precompiles",
    "title": "Interact with Precompiles",
    "slug": "develop-smart-contracts-precompiles-interact-with-precompiles",
    "categories": [
      "Smart Contracts"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-precompiles-interact-with-precompiles.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/precompiles/interact-with-precompiles/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Basic Precompile Interaction Pattern",
        "anchor": "basic-precompile-interaction-pattern"
      },
      {
        "depth": 2,
        "title": "ECRecover (0x01)",
        "anchor": "ecrecover-0x01"
      },
      {
        "depth": 2,
        "title": "SHA-256 (0x02)",
        "anchor": "sha-256-0x02"
      },
      {
        "depth": 2,
        "title": "RIPEMD-160 (0x03)",
        "anchor": "ripemd-160-0x03"
      },
      {
        "depth": 2,
        "title": "Identity (Data Copy) (0x04)",
        "anchor": "identity-data-copy-0x04"
      },
      {
        "depth": 2,
        "title": "Modular Exponentiation (0x05)",
        "anchor": "modular-exponentiation-0x05"
      },
      {
        "depth": 2,
        "title": "BN128 Addition (0x06)",
        "anchor": "bn128-addition-0x06"
      },
      {
        "depth": 2,
        "title": "BN128 Scalar Multiplication (0x07)",
        "anchor": "bn128-scalar-multiplication-0x07"
      },
      {
        "depth": 2,
        "title": "BN128 Pairing Check (0x08)",
        "anchor": "bn128-pairing-check-0x08"
      },
      {
        "depth": 2,
        "title": "Blake2F (0x09)",
        "anchor": "blake2f-0x09"
      },
      {
        "depth": 2,
        "title": "Conclusion",
        "anchor": "conclusion"
      }
    ],
    "stats": {
      "chars": 18009,
      "words": 2181,
      "headings": 12,
      "estimated_token_count_total": 3820
    },
    "hash": "sha256:10c2497147b1d5404e8ab22432832d54fd0ebcf5eb36bbbe9e2d38308a1dfe72",
    "last_modified": "2025-10-08T17:32:23+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-precompiles-xcm-precompile",
    "title": "Interact with the XCM Precompile",
    "slug": "develop-smart-contracts-precompiles-xcm-precompile",
    "categories": [
      "Smart Contracts"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-precompiles-xcm-precompile.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/precompiles/xcm-precompile/",
    "preview": "The [XCM (Cross-Consensus Message)](/develop/interoperability/intro-to-xcm){target=\\_blank} precompile enables Polkadot Hub developers to access XCM functionality directly from their smart contracts using a Solidity interface.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Precompile Interface",
        "anchor": "precompile-interface"
      },
      {
        "depth": 2,
        "title": "Interact with the XCM Precompile",
        "anchor": "interact-with-the-xcm-precompile"
      },
      {
        "depth": 3,
        "title": "Weigh a Message",
        "anchor": "weigh-a-message"
      },
      {
        "depth": 3,
        "title": "Execute a Message",
        "anchor": "execute-a-message"
      },
      {
        "depth": 3,
        "title": "Send a Message",
        "anchor": "send-a-message"
      },
      {
        "depth": 2,
        "title": "Cross Contract Calls",
        "anchor": "cross-contract-calls"
      },
      {
        "depth": 2,
        "title": "Conclusion",
        "anchor": "conclusion"
      },
      {
        "depth": 2,
        "title": "Next steps",
        "anchor": "next-steps"
      }
    ],
    "stats": {
      "chars": 10769,
      "words": 1440,
      "headings": 9,
      "estimated_token_count_total": 2317
    },
    "hash": "sha256:605d2cbb7eabb2ea0fd928bc3ecdf9ee8b095e3dd9643f2b0918fef7b5a3f4a8",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-smart-contracts-wallets",
    "title": "Wallets for Polkadot Hub",
    "slug": "develop-smart-contracts-wallets",
    "categories": [
      "Smart Contracts",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-smart-contracts-wallets.md",
    "html_url": "https://docs.polkadot.com/develop/smart-contracts/wallets/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Connect Your Wallet",
        "anchor": "connect-your-wallet"
      },
      {
        "depth": 3,
        "title": "MetaMask",
        "anchor": "metamask"
      },
      {
        "depth": 3,
        "title": "SubWallet",
        "anchor": "subwallet"
      },
      {
        "depth": 3,
        "title": "Talisman",
        "anchor": "talisman"
      },
      {
        "depth": 2,
        "title": "Conclusion",
        "anchor": "conclusion"
      }
    ],
    "stats": {
      "chars": 7299,
      "words": 1047,
      "headings": 6,
      "estimated_token_count_total": 1638
    },
    "hash": "sha256:807cee6869059dd933905d1cf6c76e3b86e02baee3de3113f7e5b4c8697fbd22",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-api-libraries-dedot",
    "title": "Dedot",
    "slug": "develop-toolkit-api-libraries-dedot",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-api-libraries-dedot.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/api-libraries/dedot/",
    "preview": "[Dedot](https://github.com/dedotdev/dedot){target=\\_blank} is a next-generation JavaScript client for Polkadot and Polkadot SDK-based blockchains. Designed to elevate the dApp development experience, Dedot is built and optimized to be lightweight and tree-shakable, offering precise types and APIs suggestions for individual Polkadot SDK-based blockchains and [ink! smart contracts](https://use.ink/){target=\\_blank}.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 3,
        "title": "Key Features",
        "anchor": "key-features"
      },
      {
        "depth": 2,
        "title": "Installation",
        "anchor": "installation"
      },
      {
        "depth": 2,
        "title": "Get Started",
        "anchor": "get-started"
      },
      {
        "depth": 3,
        "title": "Initialize a Client Instance",
        "anchor": "initialize-a-client-instance"
      },
      {
        "depth": 3,
        "title": "Enable Type and API Suggestions",
        "anchor": "enable-type-and-api-suggestions"
      },
      {
        "depth": 3,
        "title": "Read On-Chain Data",
        "anchor": "read-on-chain-data"
      },
      {
        "depth": 3,
        "title": "Sign and Send Transactions",
        "anchor": "sign-and-send-transactions"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 8855,
      "words": 1100,
      "headings": 9,
      "estimated_token_count_total": 2300
    },
    "hash": "sha256:ba24e31e2ad94fbf1d73f1878da92dd2e1476db00170780bbdf0e65ab18bc961",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-api-libraries-papi",
    "title": "Polkadot-API",
    "slug": "develop-toolkit-api-libraries-papi",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-api-libraries-papi.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/api-libraries/papi/",
    "preview": "[Polkadot-API](https://github.com/polkadot-api/polkadot-api){target=\\_blank} (PAPI) is a set of libraries built to be modular, composable, and grounded in a “light-client first” approach. Its primary aim is to equip dApp developers with an extensive toolkit for building fully decentralized applications.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Get Started",
        "anchor": "get-started"
      },
      {
        "depth": 3,
        "title": "API Instantiation",
        "anchor": "api-instantiation"
      },
      {
        "depth": 3,
        "title": "Reading Chain Data",
        "anchor": "reading-chain-data"
      },
      {
        "depth": 3,
        "title": "Sending Transactions",
        "anchor": "sending-transactions"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 8957,
      "words": 1156,
      "headings": 6,
      "estimated_token_count_total": 1987
    },
    "hash": "sha256:2ca93b09d3bb9159bbf53816886a9b242bb3c13b996c51fd52962e049e2d5477",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-api-libraries-polkadart",
    "title": "Polkadart",
    "slug": "develop-toolkit-api-libraries-polkadart",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-api-libraries-polkadart.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/api-libraries/polkadart/",
    "preview": "Polkadart is the most comprehensive Dart/Flutter SDK for interacting with Polkadot, Substrate, and other compatible blockchain networks. Designed with a Dart-first approach and type-safe APIs, it provides everything developers need to build powerful decentralized applications.",
    "outline": [
      {
        "depth": 2,
        "title": "Installation",
        "anchor": "installation"
      },
      {
        "depth": 2,
        "title": "Get Started",
        "anchor": "get-started"
      },
      {
        "depth": 3,
        "title": "Type Generation",
        "anchor": "type-generation"
      },
      {
        "depth": 3,
        "title": "Run Generator",
        "anchor": "run-generator"
      },
      {
        "depth": 3,
        "title": "Use Generated Types",
        "anchor": "use-generated-types"
      },
      {
        "depth": 3,
        "title": "Creating an API Instance",
        "anchor": "creating-an-api-instance"
      },
      {
        "depth": 3,
        "title": "Reading Chain Data",
        "anchor": "reading-chain-data"
      },
      {
        "depth": 3,
        "title": "Subscribe to New Blocks",
        "anchor": "subscribe-to-new-blocks"
      },
      {
        "depth": 3,
        "title": "Send a Transaction",
        "anchor": "send-a-transaction"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 5178,
      "words": 624,
      "headings": 10,
      "estimated_token_count_total": 1084
    },
    "hash": "sha256:7f533abe61586af8438e350c41b741d74a8edb839f9dc4139bc4619ba3748258",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-api-libraries-polkadot-js-api",
    "title": "Polkadot.js API",
    "slug": "develop-toolkit-api-libraries-polkadot-js-api",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-api-libraries-polkadot-js-api.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/api-libraries/polkadot-js-api/",
    "preview": "!!! warning \"Maintenance Mode Only\" The Polkadot.js API is now in maintenance mode and is no longer actively developed. New projects should use [Dedot](/develop/toolkit/api-libraries/dedot){target=\\_blank} (TypeScript-first API) or [Polkadot API](/develop/toolkit/api-libraries/papi){target=\\_blank} (modern, type-safe API) as actively maintained alternatives.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 3,
        "title": "Dynamic API Generation",
        "anchor": "dynamic-api-generation"
      },
      {
        "depth": 3,
        "title": "Available API Categories",
        "anchor": "available-api-categories"
      },
      {
        "depth": 2,
        "title": "Installation",
        "anchor": "installation"
      },
      {
        "depth": 2,
        "title": "Get Started",
        "anchor": "get-started"
      },
      {
        "depth": 3,
        "title": "Creating an API Instance",
        "anchor": "creating-an-api-instance"
      },
      {
        "depth": 3,
        "title": "Reading Chain Data",
        "anchor": "reading-chain-data"
      },
      {
        "depth": 3,
        "title": "Sending Transactions",
        "anchor": "sending-transactions"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 5042,
      "words": 684,
      "headings": 9,
      "estimated_token_count_total": 1166
    },
    "hash": "sha256:ed3986f30880fefca5975fcdc847c68b4aca65862c63e3002b25391b0521781d",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-api-libraries-py-substrate-interface",
    "title": "Python Substrate Interface",
    "slug": "develop-toolkit-api-libraries-py-substrate-interface",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-api-libraries-py-substrate-interface.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/api-libraries/py-substrate-interface/",
    "preview": "The [Python Substrate Interface](https://github.com/polkascan/py-substrate-interface){target=\\_blank} is a powerful library that enables interaction with Polkadot SDK-based chains. It provides essential functionality for:",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Installation",
        "anchor": "installation"
      },
      {
        "depth": 2,
        "title": "Get Started",
        "anchor": "get-started"
      },
      {
        "depth": 3,
        "title": "Establishing Connection",
        "anchor": "establishing-connection"
      },
      {
        "depth": 3,
        "title": "Reading Chain State",
        "anchor": "reading-chain-state"
      },
      {
        "depth": 3,
        "title": "Submitting Transactions",
        "anchor": "submitting-transactions"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 4302,
      "words": 541,
      "headings": 7,
      "estimated_token_count_total": 942
    },
    "hash": "sha256:8987fc35cd28602054ee018031f773e2e3837425107c51d0e2ac68a94b86e9c0",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-api-libraries-sidecar",
    "title": "Sidecar Rest API",
    "slug": "develop-toolkit-api-libraries-sidecar",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-api-libraries-sidecar.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/api-libraries/sidecar/",
    "preview": "The [Sidecar Rest API](https://github.com/paritytech/substrate-api-sidecar){target=\\_blank} is a service that provides a REST interface for interacting with Polkadot SDK-based blockchains. With this API, developers can easily access a broad range of endpoints for nodes, accounts, transactions, parachains, and more.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Installation",
        "anchor": "installation"
      },
      {
        "depth": 2,
        "title": "Usage",
        "anchor": "usage"
      },
      {
        "depth": 3,
        "title": "Endpoints",
        "anchor": "endpoints"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 7309,
      "words": 1033,
      "headings": 6,
      "estimated_token_count_total": 1945
    },
    "hash": "sha256:b8759f61ab57b636228b69d5770c74591998b912cd4596e89eb2ec011da7ef73",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-api-libraries-subxt",
    "title": "Subxt Rust API",
    "slug": "develop-toolkit-api-libraries-subxt",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-api-libraries-subxt.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/api-libraries/subxt/",
    "preview": "Subxt is a Rust library designed to interact with Polkadot SDK-based blockchains. It provides a type-safe interface for submitting transactions, querying on-chain state, and performing other blockchain interactions. By leveraging Rust's strong type system, subxt ensures that your code is validated at compile time, reducing runtime errors and improving reliability.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Installation",
        "anchor": "installation"
      },
      {
        "depth": 2,
        "title": "Get Started",
        "anchor": "get-started"
      },
      {
        "depth": 3,
        "title": "Download Chain Metadata",
        "anchor": "download-chain-metadata"
      },
      {
        "depth": 3,
        "title": "Generate Type-Safe Interfaces",
        "anchor": "generate-type-safe-interfaces"
      },
      {
        "depth": 3,
        "title": "Initialize the Subxt Client",
        "anchor": "initialize-the-subxt-client"
      },
      {
        "depth": 3,
        "title": "Read Chain Data",
        "anchor": "read-chain-data"
      },
      {
        "depth": 3,
        "title": "Submit Transactions",
        "anchor": "submit-transactions"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 9174,
      "words": 1175,
      "headings": 10,
      "estimated_token_count_total": 2187
    },
    "hash": "sha256:56269d9ea47f5b4e92cd7d5a1e65ab06d181a9c380f90bb3ef285529b12299f7",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-integrations-indexers",
    "title": "Indexers",
    "slug": "develop-toolkit-integrations-indexers",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-integrations-indexers.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/integrations/indexers/",
    "preview": "Blockchain data is inherently sequential and distributed, with information stored chronologically across numerous blocks. While retrieving data from a single block through JSON-RPC API calls is straightforward, more complex queries that span multiple blocks present significant challenges:",
    "outline": [
      {
        "depth": 2,
        "title": "The Challenge of Blockchain Data Access",
        "anchor": "the-challenge-of-blockchain-data-access"
      },
      {
        "depth": 2,
        "title": "What is a Blockchain Indexer?",
        "anchor": "what-is-a-blockchain-indexer"
      },
      {
        "depth": 2,
        "title": "Indexer Implementations",
        "anchor": "indexer-implementations"
      }
    ],
    "stats": {
      "chars": 2230,
      "words": 302,
      "headings": 3,
      "estimated_token_count_total": 428
    },
    "hash": "sha256:cfcc76bb24779c9b613f2c046b6f99a0f2529c25fd82287d804f6b945b936227",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-integrations-oracles",
    "title": "Oracles",
    "slug": "develop-toolkit-integrations-oracles",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-integrations-oracles.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/integrations/oracles/",
    "preview": "Oracles enable blockchains to access external data sources. Since blockchains operate as isolated networks, they cannot natively interact with external systems - this limitation is known as the \"blockchain oracle problem.\" Oracles solves this by extracting data from external sources (like APIs, IoT devices, or other blockchains), validating it, and submitting it on-chain.",
    "outline": [
      {
        "depth": 2,
        "title": "What is a Blockchain Oracle?",
        "anchor": "what-is-a-blockchain-oracle"
      },
      {
        "depth": 2,
        "title": "Oracle Implementations",
        "anchor": "oracle-implementations"
      }
    ],
    "stats": {
      "chars": 1343,
      "words": 181,
      "headings": 2,
      "estimated_token_count_total": 245
    },
    "hash": "sha256:6d8e01281a5895fd2bc4438b24c170c72a496de0b838626a53e87685aea4aa25",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-integrations-storage",
    "title": "Storage",
    "slug": "develop-toolkit-integrations-storage",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-integrations-storage.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/integrations/storage/",
    "preview": "Polkadot offers developers a range of decentralized storage solutions to manage dApp data, host front ends, and store large files in a censorship-resistant and resilient manner. These integrations are essential for building fully decentralized applications, ensuring that all components of your dApp, from the front end to the data, are not reliant on centralized servers.",
    "outline": [
      {
        "depth": 2,
        "title": "Key Storage Solutions",
        "anchor": "key-storage-solutions"
      },
      {
        "depth": 2,
        "title": "Crust Network",
        "anchor": "crust-network"
      },
      {
        "depth": 3,
        "title": "Key Features of Crust",
        "anchor": "key-features-of-crust"
      },
      {
        "depth": 3,
        "title": "Use Cases",
        "anchor": "use-cases"
      },
      {
        "depth": 2,
        "title": "IPFS",
        "anchor": "ipfs"
      },
      {
        "depth": 3,
        "title": "Using IPFS with Polkadot",
        "anchor": "using-ipfs-with-polkadot"
      },
      {
        "depth": 2,
        "title": "Other Solutions",
        "anchor": "other-solutions"
      }
    ],
    "stats": {
      "chars": 4369,
      "words": 642,
      "headings": 7,
      "estimated_token_count_total": 847
    },
    "hash": "sha256:a206dd86fc3d80aed22384000839ca0c9c75c69ad461abd9810d96c03cf6a3bd",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-integrations-transaction-construction",
    "title": "Transaction Construction",
    "slug": "develop-toolkit-integrations-transaction-construction",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-integrations-transaction-construction.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/integrations/transaction-construction/",
    "preview": "This page will discuss the transaction format in Polkadot and how to create, sign, and broadcast transactions, as well as highlight some of the commands and tools available for integrators.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Transaction Format",
        "anchor": "transaction-format"
      },
      {
        "depth": 3,
        "title": "Mode and Metadata Hash",
        "anchor": "mode-and-metadata-hash"
      },
      {
        "depth": 3,
        "title": "Serialized Transactions and Metadata",
        "anchor": "serialized-transactions-and-metadata"
      },
      {
        "depth": 3,
        "title": "Transaction Flow",
        "anchor": "transaction-flow"
      },
      {
        "depth": 2,
        "title": "Polkadot-JS Tools",
        "anchor": "polkadot-js-tools"
      },
      {
        "depth": 3,
        "title": "Creating a Transaction, Signing, and Submitting",
        "anchor": "creating-a-transaction-signing-and-submitting"
      },
      {
        "depth": 2,
        "title": "Txwrapper",
        "anchor": "txwrapper"
      },
      {
        "depth": 3,
        "title": "Creating a Transaction, Signing, and Submitting",
        "anchor": "creating-a-transaction-signing-and-submitting-2"
      },
      {
        "depth": 2,
        "title": "Additional Libraries for Submitting a Transaction",
        "anchor": "additional-libraries-for-submitting-a-transaction"
      }
    ],
    "stats": {
      "chars": 27784,
      "words": 2965,
      "headings": 10,
      "estimated_token_count_total": 6312
    },
    "hash": "sha256:d132a135b7be0a571277eabd4f76781fe02de29d692c1e958560613ec25e891f",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-integrations-wallets",
    "title": "Wallets",
    "slug": "develop-toolkit-integrations-wallets",
    "categories": [
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-integrations-wallets.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/integrations/wallets/",
    "preview": "A wallet serves as your gateway to interacting with blockchain networks. Rather than storing funds, wallets secure your private keys, controlling access to your blockchain assets. Your private key provides complete control over all permitted transactions on your blockchain account, making it essential to keep it secure.",
    "outline": [
      {
        "depth": 2,
        "title": "What is a Blockchain Wallet?",
        "anchor": "what-is-a-blockchain-wallet"
      },
      {
        "depth": 2,
        "title": "Hot Wallets",
        "anchor": "hot-wallets"
      },
      {
        "depth": 2,
        "title": "Cold Wallets",
        "anchor": "cold-wallets"
      }
    ],
    "stats": {
      "chars": 2921,
      "words": 401,
      "headings": 3,
      "estimated_token_count_total": 633
    },
    "hash": "sha256:62c5ad101282227f79eac0e30a3ba9ce3ae1bf9e358bd58c0b17ef45db29c2ff",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-interoperability-paraspell-xcm-sdk-transfer-tokens-between-parachains",
    "title": "Transfer Tokens Between Parachains",
    "slug": "develop-toolkit-interoperability-paraspell-xcm-sdk-transfer-tokens-between-parachains",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-interoperability-paraspell-xcm-sdk-transfer-tokens-between-parachains.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/interoperability/paraspell-xcm-sdk/transfer-tokens-between-parachains/",
    "preview": "This guide walks you through transferring tokens between two parachains using the [ParaSpell XCM SDK](https://paraspell.github.io/docs/){target=\\_blank}. This example utilizes [Asset Hub](/polkadot-protocol/architecture/system-chains/asset-hub/){target=\\_blank} and the [People Chain](/polkadot-protocol/architecture/system-chains/people/){target=\\_blank}. However, the same approach can be applied to transfers between other parachains.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 3,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Initialize Your Project",
        "anchor": "initialize-your-project"
      },
      {
        "depth": 2,
        "title": "Build a Token Transfer Transaction",
        "anchor": "build-a-token-transfer-transaction"
      },
      {
        "depth": 2,
        "title": "Perform a Dry Run",
        "anchor": "perform-a-dry-run"
      },
      {
        "depth": 2,
        "title": "Verify the Existential Deposit",
        "anchor": "verify-the-existential-deposit"
      },
      {
        "depth": 2,
        "title": "Get Transfer Info and Fee Estimates",
        "anchor": "get-transfer-info-and-fee-estimates"
      },
      {
        "depth": 2,
        "title": "Next Steps",
        "anchor": "next-steps"
      }
    ],
    "stats": {
      "chars": 26622,
      "words": 2267,
      "headings": 8,
      "estimated_token_count_total": 5209
    },
    "hash": "sha256:966ec1bcc014a454f6b837b503025d9fb89c30f6a65d0aaec82ea5ff976e53a9",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "develop-toolkit-interoperability-xcm-tools",
    "title": "XCM Tools",
    "slug": "develop-toolkit-interoperability-xcm-tools",
    "categories": [
      "Basics",
      "Tooling",
      "Dapps"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/develop-toolkit-interoperability-xcm-tools.md",
    "html_url": "https://docs.polkadot.com/develop/toolkit/interoperability/xcm-tools/",
    "preview": "As described in the [Interoperability](/develop/interoperability){target=\\_blank} section, XCM (Cross-Consensus Messaging) is a protocol used in the Polkadot and Kusama ecosystems to enable communication and interaction between chains. It facilitates cross-chain communication, allowing assets, data, and messages to flow seamlessly across the ecosystem.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Popular XCM Tools",
        "anchor": "popular-xcm-tools"
      },
      {
        "depth": 3,
        "title": "Moonsong Labs XCM Tools",
        "anchor": "moonsong-labs-xcm-tools"
      },
      {
        "depth": 3,
        "title": "ParaSpell",
        "anchor": "paraspell"
      },
      {
        "depth": 3,
        "title": "Astar XCM Tools",
        "anchor": "astar-xcm-tools"
      },
      {
        "depth": 3,
        "title": "Chopsticks",
        "anchor": "chopsticks"
      },
      {
        "depth": 3,
        "title": "Moonbeam XCM SDK",
        "anchor": "moonbeam-xcm-sdk"
      }
    ],
    "stats": {
      "chars": 7524,
      "words": 1043,
      "headings": 7,
      "estimated_token_count_total": 1700
    },
    "hash": "sha256:47328231d6ff4dc52cd93aaf1baf5d0bc2d9fc372f3d79339d87aafa0dabd1b8",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "get-support-ai-ready-docs",
    "title": "AI Ready Docs",
    "slug": "get-support-ai-ready-docs",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/get-support-ai-ready-docs.md",
    "html_url": "https://docs.polkadot.com/get-support/ai-ready-docs/",
    "preview": "Polkadot provides files to make documentation content available in a structure optimized for use with large language models (LLMs) and AI tools. These resources help build AI assistants, power code search, or enable custom tooling trained on Polkadot’s documentation.",
    "outline": [
      {
        "depth": 2,
        "title": "How to Use These Files",
        "anchor": "how-to-use-these-files"
      },
      {
        "depth": 2,
        "title": "Download LLM Files",
        "anchor": "download-llm-files"
      }
    ],
    "stats": {
      "chars": 7659,
      "words": 777,
      "headings": 2,
      "estimated_token_count_total": 2073
    },
    "hash": "sha256:9836ab7da420e9ca8196da77dc3ff8198cb3b622548842d0505c0aa043a5f02e",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "get-support-explore-resources",
    "title": "Subscribe to Updates",
    "slug": "get-support-explore-resources",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/get-support-explore-resources.md",
    "html_url": "https://docs.polkadot.com/get-support/explore-resources/",
    "preview": "Looking for answers beyond the documentation? These platforms are full of useful content and experienced developers sharing insights.",
    "outline": [
      {
        "depth": 2,
        "title": "🧠 Stack Exchange",
        "anchor": "stack-exchange"
      },
      {
        "depth": 2,
        "title": "🧵 Reddit: r/Polkadot",
        "anchor": "reddit-rpolkadot"
      },
      {
        "depth": 2,
        "title": "💬 Discord (Community Threads Only)",
        "anchor": "discord-community-threads-only"
      },
      {
        "depth": 2,
        "title": "🎥 YouTube: @PolkadotNetwork",
        "anchor": "youtube-polkadotnetwork"
      },
      {
        "depth": 2,
        "title": "Community-Led Platforms and Ecosystem Updates",
        "anchor": "community-led-platforms-and-ecosystem-updates"
      },
      {
        "depth": 3,
        "title": "🔷 X (Twitter): Official Accounts",
        "anchor": "x-twitter-official-accounts"
      },
      {
        "depth": 3,
        "title": "🔁 X (Twitter): Community Accounts",
        "anchor": "x-twitter-community-accounts"
      },
      {
        "depth": 3,
        "title": "🗣️ Polkadot Forum",
        "anchor": "polkadot-forum"
      },
      {
        "depth": 3,
        "title": "🧑‍⚖️ Polkassembly: OpenGov",
        "anchor": "polkassembly-opengov"
      },
      {
        "depth": 3,
        "title": "📸 Instagram",
        "anchor": "instagram"
      }
    ],
    "stats": {
      "chars": 2456,
      "words": 295,
      "headings": 10,
      "estimated_token_count_total": 579
    },
    "hash": "sha256:4c33d0ec5026128b3bfdb1dfc1f4b29487404eaa8043071d536e8638356c6e1f",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "get-support-get-in-touch",
    "title": "Get in Touch",
    "slug": "get-support-get-in-touch",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/get-support-get-in-touch.md",
    "html_url": "https://docs.polkadot.com/get-support/get-in-touch/",
    "preview": "Use one of the channels below to get live technical support or ask questions.",
    "outline": [
      {
        "depth": 2,
        "title": "Need Help Fast?",
        "anchor": "need-help-fast"
      },
      {
        "depth": 2,
        "title": "📱 Telegram: Polkadot Developer Support",
        "anchor": "telegram-polkadot-developer-support"
      },
      {
        "depth": 2,
        "title": "🔌 Discord: Polkadot Official Server",
        "anchor": "discord-polkadot-official-server"
      },
      {
        "depth": 2,
        "title": "🧬 Matrix: Polkadot Developer Support",
        "anchor": "matrix-polkadot-developer-support"
      }
    ],
    "stats": {
      "chars": 1949,
      "words": 258,
      "headings": 4,
      "estimated_token_count_total": 557
    },
    "hash": "sha256:993e93b05c8fbdfc2f7510c61ac86bc4c2ff0f03e573695b2f260933c8b62f78",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-node-setup-bootnode",
    "title": "Set Up a Bootnode",
    "slug": "infrastructure-running-a-node-setup-bootnode",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-node-setup-bootnode.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-node/setup-bootnode/",
    "preview": "Bootnodes are essential for helping blockchain nodes discover peers and join the network. When a node starts, it needs to find other nodes, and bootnodes provide an initial point of contact. Once connected, a node can expand its peer connections and play its role in the network, like participating as a validator.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Accessing the Bootnode",
        "anchor": "accessing-the-bootnode"
      },
      {
        "depth": 2,
        "title": "Node Key",
        "anchor": "node-key"
      },
      {
        "depth": 2,
        "title": "Running the Bootnode",
        "anchor": "running-the-bootnode"
      },
      {
        "depth": 2,
        "title": "Testing Bootnode Connection",
        "anchor": "testing-bootnode-connection"
      },
      {
        "depth": 3,
        "title": "P2P",
        "anchor": "p2p"
      },
      {
        "depth": 3,
        "title": "P2P/WS",
        "anchor": "p2pws"
      },
      {
        "depth": 3,
        "title": "P2P/WSS",
        "anchor": "p2pwss"
      }
    ],
    "stats": {
      "chars": 4538,
      "words": 647,
      "headings": 9,
      "estimated_token_count_total": 1044
    },
    "hash": "sha256:d84a5af1a0237a911d25a68c077f508ebbce608f673ef4f9055e8e434daa96b9",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-node-setup-full-node",
    "title": "Set Up a Node",
    "slug": "infrastructure-running-a-node-setup-full-node",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-node-setup-full-node.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-node/setup-full-node/",
    "preview": "Running a node on Polkadot provides direct interaction with the network, enhanced privacy, and full control over RPC requests, transactions, and data queries. As the backbone of the network, nodes ensure decentralized data propagation, transaction validation, and seamless communication across the ecosystem.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Set Up a Node",
        "anchor": "set-up-a-node"
      },
      {
        "depth": 3,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 3,
        "title": "Install and Build the Polkadot Binary",
        "anchor": "install-and-build-the-polkadot-binary"
      },
      {
        "depth": 3,
        "title": "Use Docker",
        "anchor": "use-docker"
      },
      {
        "depth": 2,
        "title": "Configure and Run Your Node",
        "anchor": "configure-and-run-your-node"
      },
      {
        "depth": 3,
        "title": "RPC Configurations",
        "anchor": "rpc-configurations"
      },
      {
        "depth": 2,
        "title": "Sync Your Node",
        "anchor": "sync-your-node"
      },
      {
        "depth": 3,
        "title": "Connect to Your Node",
        "anchor": "connect-to-your-node"
      }
    ],
    "stats": {
      "chars": 16059,
      "words": 2502,
      "headings": 9,
      "estimated_token_count_total": 4229
    },
    "hash": "sha256:abd9f939f68b068a18567b875c9f7e11d102c54fc02ca0e6ee8041c539061ed0",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-node-setup-secure-wss",
    "title": "Set Up Secure WebSocket",
    "slug": "infrastructure-running-a-node-setup-secure-wss",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-node-setup-secure-wss.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-node/setup-secure-wss/",
    "preview": "Ensuring secure WebSocket communication is crucial for maintaining the integrity and security of a Polkadot or Kusama node when interacting with remote clients. This guide walks you through setting up a secure WebSocket (WSS) connection for your node by leveraging SSL encryption with popular web server proxies like nginx or Apache.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Secure a WebSocket Port",
        "anchor": "secure-a-websocket-port"
      },
      {
        "depth": 3,
        "title": "Obtain an SSL Certificate",
        "anchor": "obtain-an-ssl-certificate"
      },
      {
        "depth": 2,
        "title": "Install a Proxy Server",
        "anchor": "install-a-proxy-server"
      },
      {
        "depth": 3,
        "title": "Use nginx",
        "anchor": "use-nginx"
      },
      {
        "depth": 3,
        "title": "Use Apache2",
        "anchor": "use-apache2"
      },
      {
        "depth": 2,
        "title": "Connect to the Node",
        "anchor": "connect-to-the-node"
      }
    ],
    "stats": {
      "chars": 5597,
      "words": 777,
      "headings": 7,
      "estimated_token_count_total": 1286
    },
    "hash": "sha256:0b43b452e9d709cb324bf51fd88c2fed8e6249534a7c2b852e1bd36bcb9b981a",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-validator-onboarding-and-offboarding-key-management",
    "title": "Validator Key Management",
    "slug": "infrastructure-running-a-validator-onboarding-and-offboarding-key-management",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-validator-onboarding-and-offboarding-key-management.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-validator/onboarding-and-offboarding/key-management/",
    "preview": "After setting up your node environment as shown in the [Setup](/infrastructure/running-a-validator/onboarding-and-offboarding/set-up-validator){target=\\_blank} section, you'll need to configure multiple keys for your validator to operate properly. This includes setting up session keys, which are essential for participating in the consensus process, and configuring a node key that maintains a stable network identity. This guide walks you through the key management process, showing you how to gene",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Set Session Keys",
        "anchor": "set-session-keys"
      },
      {
        "depth": 3,
        "title": "Generate Session Keys",
        "anchor": "generate-session-keys"
      },
      {
        "depth": 3,
        "title": "Submit Transaction to Set Keys",
        "anchor": "submit-transaction-to-set-keys"
      },
      {
        "depth": 3,
        "title": "Verify Session Key Setup",
        "anchor": "verify-session-key-setup"
      },
      {
        "depth": 2,
        "title": "Set the Node Key",
        "anchor": "set-the-node-key"
      },
      {
        "depth": 3,
        "title": "Generate the Node Key",
        "anchor": "generate-the-node-key"
      },
      {
        "depth": 3,
        "title": "Set Node Key",
        "anchor": "set-node-key"
      }
    ],
    "stats": {
      "chars": 8218,
      "words": 1177,
      "headings": 8,
      "estimated_token_count_total": 1827
    },
    "hash": "sha256:1090b02689df5f4c59bb83f9c81436718d06e46f3b615bc655fef3c7b6c9fb02",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-validator-onboarding-and-offboarding-set-up-validator",
    "title": "Set Up a Validator",
    "slug": "infrastructure-running-a-validator-onboarding-and-offboarding-set-up-validator",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-validator-onboarding-and-offboarding-set-up-validator.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-validator/onboarding-and-offboarding/set-up-validator/",
    "preview": "Setting up a Polkadot validator node is essential for securing the network and earning staking rewards. This guide walks you through the technical steps to set up a validator, from installing the necessary software to managing keys and synchronizing your node with the chain.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Initial Setup",
        "anchor": "initial-setup"
      },
      {
        "depth": 3,
        "title": "Install Network Time Protocol Client",
        "anchor": "install-network-time-protocol-client"
      },
      {
        "depth": 3,
        "title": "Verify Landlock is Activated",
        "anchor": "verify-landlock-is-activated"
      },
      {
        "depth": 2,
        "title": "Install the Polkadot Binaries",
        "anchor": "install-the-polkadot-binaries"
      },
      {
        "depth": 3,
        "title": "Install from Official Releases",
        "anchor": "install-from-official-releases"
      },
      {
        "depth": 3,
        "title": "Install with Package Managers",
        "anchor": "install-with-package-managers"
      },
      {
        "depth": 3,
        "title": "Install with Ansible",
        "anchor": "install-with-ansible"
      },
      {
        "depth": 3,
        "title": "Install with Docker",
        "anchor": "install-with-docker"
      },
      {
        "depth": 3,
        "title": "Build from Sources",
        "anchor": "build-from-sources"
      },
      {
        "depth": 2,
        "title": "Verify Installation",
        "anchor": "verify-installation"
      }
    ],
    "stats": {
      "chars": 11883,
      "words": 1662,
      "headings": 12,
      "estimated_token_count_total": 2559
    },
    "hash": "sha256:0857a9e83aefc6d3f04e8cb320ab82d35211bbd73d2eb2614cf7b97f8e6d36b9",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-validator-onboarding-and-offboarding-start-validating",
    "title": "Start Validating",
    "slug": "infrastructure-running-a-validator-onboarding-and-offboarding-start-validating",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-validator-onboarding-and-offboarding-start-validating.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-validator/onboarding-and-offboarding/start-validating/",
    "preview": "After configuring your node keys as shown in the [Key Management](/infrastructure/running-a-validator/onboarding-and-offboarding/key-management){target=\\_blank} section and ensuring your system is set up, you're ready to begin the validator setup process. This guide will walk you through choosing a network, synchronizing your node with the blockchain, bonding your DOT tokens, and starting your validator.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Choose a Network",
        "anchor": "choose-a-network"
      },
      {
        "depth": 2,
        "title": "Synchronize Chain Data",
        "anchor": "synchronize-chain-data"
      },
      {
        "depth": 3,
        "title": "Database Snapshot Services",
        "anchor": "database-snapshot-services"
      },
      {
        "depth": 2,
        "title": "Bond DOT",
        "anchor": "bond-dot"
      },
      {
        "depth": 3,
        "title": "Bonding DOT on Polkadot.js Apps",
        "anchor": "bonding-dot-on-polkadotjs-apps"
      },
      {
        "depth": 2,
        "title": "Validate",
        "anchor": "validate"
      },
      {
        "depth": 3,
        "title": "Verify Sync via Telemetry",
        "anchor": "verify-sync-via-telemetry"
      },
      {
        "depth": 3,
        "title": "Activate using Polkadot.js Apps",
        "anchor": "activate-using-polkadotjs-apps"
      },
      {
        "depth": 3,
        "title": "Monitor Validation Status and Slots",
        "anchor": "monitor-validation-status-and-slots"
      },
      {
        "depth": 2,
        "title": "Run a Validator Using Systemd",
        "anchor": "run-a-validator-using-systemd"
      },
      {
        "depth": 3,
        "title": "Create the Systemd Service File",
        "anchor": "create-the-systemd-service-file"
      },
      {
        "depth": 3,
        "title": "Run the Service",
        "anchor": "run-the-service"
      }
    ],
    "stats": {
      "chars": 15774,
      "words": 2425,
      "headings": 13,
      "estimated_token_count_total": 3827
    },
    "hash": "sha256:e2567b7d5377c87984622cf93afe4bd8cedf46b80597736cf53f26b5f31c5065",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-validator-onboarding-and-offboarding-stop-validating",
    "title": "Stop Validating",
    "slug": "infrastructure-running-a-validator-onboarding-and-offboarding-stop-validating",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-validator-onboarding-and-offboarding-stop-validating.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-validator/onboarding-and-offboarding/stop-validating/",
    "preview": "If you're ready to stop validating on Polkadot, there are essential steps to ensure a smooth transition while protecting your funds and account integrity. Whether you're taking a break for maintenance or unbonding entirely, you'll need to chill your validator, purge session keys, and unbond your tokens. This guide explains how to use Polkadot's tools and extrinsics to safely withdraw from validation activities, safeguarding your account's future usability.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Pause Versus Stop",
        "anchor": "pause-versus-stop"
      },
      {
        "depth": 2,
        "title": "Chill Validator",
        "anchor": "chill-validator"
      },
      {
        "depth": 2,
        "title": "Purge Validator Session Keys",
        "anchor": "purge-validator-session-keys"
      },
      {
        "depth": 2,
        "title": "Unbond Your Tokens",
        "anchor": "unbond-your-tokens"
      }
    ],
    "stats": {
      "chars": 3228,
      "words": 498,
      "headings": 5,
      "estimated_token_count_total": 625
    },
    "hash": "sha256:9ab570299106336e5d75923b876247e8eb4a71851a77e84d68e0335e9da5e0a8",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-validator-operational-tasks-general-management",
    "title": "General Management",
    "slug": "infrastructure-running-a-validator-operational-tasks-general-management",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-validator-operational-tasks-general-management.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-validator/operational-tasks/general-management/",
    "preview": "Validator performance is pivotal in maintaining the security and stability of the Polkadot network. As a validator, optimizing your setup ensures efficient transaction processing, minimizes latency, and maintains system reliability during high-demand periods. Proper configuration and proactive monitoring also help mitigate risks like slashing and service interruptions.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Configuration Optimization",
        "anchor": "configuration-optimization"
      },
      {
        "depth": 3,
        "title": "Deactivate Simultaneous Multithreading",
        "anchor": "deactivate-simultaneous-multithreading"
      },
      {
        "depth": 3,
        "title": "Deactivate Automatic NUMA Balancing",
        "anchor": "deactivate-automatic-numa-balancing"
      },
      {
        "depth": 3,
        "title": "Spectre and Meltdown Mitigations",
        "anchor": "spectre-and-meltdown-mitigations"
      },
      {
        "depth": 2,
        "title": "Monitor Your Node",
        "anchor": "monitor-your-node"
      },
      {
        "depth": 3,
        "title": "Environment Setup",
        "anchor": "environment-setup"
      },
      {
        "depth": 3,
        "title": "Install and Configure Prometheus",
        "anchor": "install-and-configure-prometheus"
      },
      {
        "depth": 3,
        "title": "Start Prometheus",
        "anchor": "start-prometheus"
      },
      {
        "depth": 3,
        "title": "Install and Configure Grafana",
        "anchor": "install-and-configure-grafana"
      },
      {
        "depth": 3,
        "title": "Install and Configure Alertmanager",
        "anchor": "install-and-configure-alertmanager"
      },
      {
        "depth": 2,
        "title": "Secure Your Validator",
        "anchor": "secure-your-validator"
      },
      {
        "depth": 3,
        "title": "Key Management",
        "anchor": "key-management"
      },
      {
        "depth": 3,
        "title": "Signing Outside the Client",
        "anchor": "signing-outside-the-client"
      },
      {
        "depth": 3,
        "title": "Secure-Validator Mode",
        "anchor": "secure-validator-mode"
      },
      {
        "depth": 3,
        "title": "Linux Best Practices",
        "anchor": "linux-best-practices"
      },
      {
        "depth": 3,
        "title": "Validator Best Practices",
        "anchor": "validator-best-practices"
      },
      {
        "depth": 2,
        "title": "Additional Resources",
        "anchor": "additional-resources"
      }
    ],
    "stats": {
      "chars": 26634,
      "words": 3340,
      "headings": 18,
      "estimated_token_count_total": 5832
    },
    "hash": "sha256:a7b5239c3be0341ced8f28146e240ff6061fded2e71094bd586beeb024684a50",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-validator-operational-tasks-pause-validating",
    "title": "Pause Validating",
    "slug": "infrastructure-running-a-validator-operational-tasks-pause-validating",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-validator-operational-tasks-pause-validating.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-validator/operational-tasks/pause-validating/",
    "preview": "If you need to temporarily stop participating in Polkadot staking activities without fully unbonding your funds, chilling your account allows you to do so efficiently. Chilling removes your node from active validation or nomination in the next era while keeping your funds bonded, making it ideal for planned downtimes or temporary pauses.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Chilling Your Node",
        "anchor": "chilling-your-node"
      },
      {
        "depth": 2,
        "title": "Staking Election Timing Considerations",
        "anchor": "staking-election-timing-considerations"
      },
      {
        "depth": 2,
        "title": "Chilling as a Nominator",
        "anchor": "chilling-as-a-nominator"
      },
      {
        "depth": 2,
        "title": "Chilling as a Validator",
        "anchor": "chilling-as-a-validator"
      },
      {
        "depth": 2,
        "title": "Chill Other",
        "anchor": "chill-other"
      }
    ],
    "stats": {
      "chars": 4437,
      "words": 679,
      "headings": 6,
      "estimated_token_count_total": 861
    },
    "hash": "sha256:97655248c65e816fdf3d85dab4ace7ca0c145c50f671c25c24627cfd7660c7a6",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-validator-operational-tasks-upgrade-your-node",
    "title": "Upgrade a Validator Node",
    "slug": "infrastructure-running-a-validator-operational-tasks-upgrade-your-node",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-validator-operational-tasks-upgrade-your-node.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-validator/operational-tasks/upgrade-your-node/",
    "preview": "Upgrading a Polkadot validator node is essential for staying current with network updates and maintaining optimal performance. This guide covers routine and extended maintenance scenarios, including software upgrades and major server changes. Following these steps, you can manage session keys and transition smoothly between servers without risking downtime, slashing, or network disruptions. The process requires strategic planning, especially if you need to perform long-lead maintenance, ensuring",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Session Keys",
        "anchor": "session-keys"
      },
      {
        "depth": 2,
        "title": "Keystore",
        "anchor": "keystore"
      },
      {
        "depth": 2,
        "title": "Upgrade Using Backup Validator",
        "anchor": "upgrade-using-backup-validator"
      },
      {
        "depth": 3,
        "title": "Session `N`",
        "anchor": "session-n"
      },
      {
        "depth": 3,
        "title": "Session `N+3`",
        "anchor": "session-n3"
      }
    ],
    "stats": {
      "chars": 5624,
      "words": 842,
      "headings": 7,
      "estimated_token_count_total": 1167
    },
    "hash": "sha256:b2e8abce15fc9df106a5e972f28c64f606f9dd50ba3a256093eb53bdd5126224",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-running-a-validator-requirements",
    "title": "Validator Requirements",
    "slug": "infrastructure-running-a-validator-requirements",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-running-a-validator-requirements.md",
    "html_url": "https://docs.polkadot.com/infrastructure/running-a-validator/requirements/",
    "preview": "Running a validator in the Polkadot ecosystem is essential for maintaining network security and decentralization. Validators are responsible for validating transactions and adding new blocks to the chain, ensuring the system operates smoothly. In return for their services, validators earn rewards. However, the role comes with inherent risks, such as slashing penalties for misbehavior or technical failures. If you’re new to validation, starting on Kusama provides a lower-stakes environment to gai",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Minimum Hardware Requirements",
        "anchor": "minimum-hardware-requirements"
      },
      {
        "depth": 2,
        "title": "VPS Provider List",
        "anchor": "vps-provider-list"
      },
      {
        "depth": 2,
        "title": "Minimum Bond Requirement",
        "anchor": "minimum-bond-requirement"
      }
    ],
    "stats": {
      "chars": 6838,
      "words": 940,
      "headings": 5,
      "estimated_token_count_total": 1477
    },
    "hash": "sha256:76500d1d63f4205a84f0bc5b7f9aec945781127d41c32927280ac74bc14f0296",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-staking-mechanics-offenses-and-slashes",
    "title": "Offenses and Slashes",
    "slug": "infrastructure-staking-mechanics-offenses-and-slashes",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-staking-mechanics-offenses-and-slashes.md",
    "html_url": "https://docs.polkadot.com/infrastructure/staking-mechanics/offenses-and-slashes/",
    "preview": "In Polkadot's Nominated Proof of Stake (NPoS) system, validator misconduct is deterred through a combination of slashing, disabling, and reputation penalties. Validators and nominators who stake tokens face consequences for validator misbehavior, which range from token slashes to restrictions on network participation.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Offenses",
        "anchor": "offenses"
      },
      {
        "depth": 3,
        "title": "Invalid Votes",
        "anchor": "invalid-votes"
      },
      {
        "depth": 3,
        "title": "Equivocations",
        "anchor": "equivocations"
      },
      {
        "depth": 2,
        "title": "Penalties",
        "anchor": "penalties"
      },
      {
        "depth": 3,
        "title": "Slashing",
        "anchor": "slashing"
      },
      {
        "depth": 3,
        "title": "Disabling",
        "anchor": "disabling"
      },
      {
        "depth": 3,
        "title": "Reputation Changes",
        "anchor": "reputation-changes"
      },
      {
        "depth": 3,
        "title": "Penalties by Offense",
        "anchor": "penalties-by-offense"
      }
    ],
    "stats": {
      "chars": 15427,
      "words": 2103,
      "headings": 9,
      "estimated_token_count_total": 3409
    },
    "hash": "sha256:abe6bedab04f463ec07f554977b8d6355a5d2fad9bcda01cbe58568152295daa",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "infrastructure-staking-mechanics-rewards-payout",
    "title": "Rewards Payout",
    "slug": "infrastructure-staking-mechanics-rewards-payout",
    "categories": [
      "Infrastructure"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/infrastructure-staking-mechanics-rewards-payout.md",
    "html_url": "https://docs.polkadot.com/infrastructure/staking-mechanics/rewards-payout/",
    "preview": "Understanding how rewards are distributed to validators and nominators is essential for network participants. In Polkadot and Kusama, validators earn rewards based on their era points, which are accrued through actions like block production and parachain validation.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Era Points",
        "anchor": "era-points"
      },
      {
        "depth": 2,
        "title": "Reward Variance",
        "anchor": "reward-variance"
      },
      {
        "depth": 2,
        "title": "Payout Scheme",
        "anchor": "payout-scheme"
      },
      {
        "depth": 2,
        "title": "Running Multiple Validators",
        "anchor": "running-multiple-validators"
      },
      {
        "depth": 2,
        "title": "Nominators and Validator Payments",
        "anchor": "nominators-and-validator-payments"
      }
    ],
    "stats": {
      "chars": 11070,
      "words": 1764,
      "headings": 6,
      "estimated_token_count_total": 2617
    },
    "hash": "sha256:7d43408276d811c96b7b081a7b9f4d884893282a230b564c9eb3be2fc7857565",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-glossary",
    "title": "Glossary",
    "slug": "polkadot-protocol-glossary",
    "categories": [
      "Reference"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-glossary.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/glossary/",
    "preview": "Key definitions, concepts, and terminology specific to the Polkadot ecosystem are included here.",
    "outline": [
      {
        "depth": 2,
        "title": "Authority",
        "anchor": "authority"
      },
      {
        "depth": 2,
        "title": "Authority Round (Aura)",
        "anchor": "authority-round-aura"
      },
      {
        "depth": 2,
        "title": "Blind Assignment of Blockchain Extension (BABE)",
        "anchor": "blind-assignment-of-blockchain-extension-babe"
      },
      {
        "depth": 2,
        "title": "Block Author",
        "anchor": "block-author"
      },
      {
        "depth": 2,
        "title": "Byzantine Fault Tolerance (BFT)",
        "anchor": "byzantine-fault-tolerance-bft"
      },
      {
        "depth": 3,
        "title": "Byzantine Failure",
        "anchor": "byzantine-failure"
      },
      {
        "depth": 3,
        "title": "Practical Byzantine Fault Tolerance (pBFT)",
        "anchor": "practical-byzantine-fault-tolerance-pbft"
      },
      {
        "depth": 3,
        "title": "Preimage",
        "anchor": "preimage"
      },
      {
        "depth": 2,
        "title": "Call",
        "anchor": "call"
      },
      {
        "depth": 2,
        "title": "Chain Specification",
        "anchor": "chain-specification"
      },
      {
        "depth": 2,
        "title": "Collator",
        "anchor": "collator"
      },
      {
        "depth": 2,
        "title": "Collective",
        "anchor": "collective"
      },
      {
        "depth": 2,
        "title": "Consensus",
        "anchor": "consensus"
      },
      {
        "depth": 2,
        "title": "Consensus Algorithm",
        "anchor": "consensus-algorithm"
      },
      {
        "depth": 2,
        "title": "Consensus Engine",
        "anchor": "consensus-engine"
      },
      {
        "depth": 2,
        "title": "Coretime",
        "anchor": "coretime"
      },
      {
        "depth": 2,
        "title": "Development Phrase",
        "anchor": "development-phrase"
      },
      {
        "depth": 2,
        "title": "Digest",
        "anchor": "digest"
      },
      {
        "depth": 2,
        "title": "Dispatchable",
        "anchor": "dispatchable"
      },
      {
        "depth": 2,
        "title": "Events",
        "anchor": "events"
      },
      {
        "depth": 2,
        "title": "Executor",
        "anchor": "executor"
      },
      {
        "depth": 2,
        "title": "Existential Deposit",
        "anchor": "existential-deposit"
      },
      {
        "depth": 2,
        "title": "Extrinsic",
        "anchor": "extrinsic"
      },
      {
        "depth": 2,
        "title": "Fork Choice Rule/Strategy",
        "anchor": "fork-choice-rulestrategy"
      },
      {
        "depth": 2,
        "title": "FRAME (Framework for Runtime Aggregation of Modularized Entities)",
        "anchor": "frame-framework-for-runtime-aggregation-of-modularized-entities"
      },
      {
        "depth": 2,
        "title": "Full Node",
        "anchor": "full-node"
      },
      {
        "depth": 2,
        "title": "Genesis Configuration",
        "anchor": "genesis-configuration"
      },
      {
        "depth": 2,
        "title": "GRANDPA",
        "anchor": "grandpa"
      },
      {
        "depth": 2,
        "title": "Header",
        "anchor": "header"
      },
      {
        "depth": 2,
        "title": "Hybrid Consensus",
        "anchor": "hybrid-consensus"
      },
      {
        "depth": 2,
        "title": "Inherent Transactions",
        "anchor": "inherent-transactions"
      },
      {
        "depth": 2,
        "title": "JSON-RPC",
        "anchor": "json-rpc"
      },
      {
        "depth": 2,
        "title": "Keystore",
        "anchor": "keystore"
      },
      {
        "depth": 2,
        "title": "Kusama",
        "anchor": "kusama"
      },
      {
        "depth": 2,
        "title": "libp2p",
        "anchor": "libp2p"
      },
      {
        "depth": 2,
        "title": "Light Client",
        "anchor": "light-client"
      },
      {
        "depth": 2,
        "title": "Metadata",
        "anchor": "metadata"
      },
      {
        "depth": 2,
        "title": "Nominated Proof of Stake (NPoS)",
        "anchor": "nominated-proof-of-stake-npos"
      },
      {
        "depth": 2,
        "title": "Oracle",
        "anchor": "oracle"
      },
      {
        "depth": 2,
        "title": "Origin",
        "anchor": "origin"
      },
      {
        "depth": 2,
        "title": "Pallet",
        "anchor": "pallet"
      },
      {
        "depth": 2,
        "title": "Parachain",
        "anchor": "parachain"
      },
      {
        "depth": 2,
        "title": "Paseo",
        "anchor": "paseo"
      },
      {
        "depth": 2,
        "title": "Polkadot",
        "anchor": "polkadot"
      },
      {
        "depth": 2,
        "title": "Polkadot Cloud",
        "anchor": "polkadot-cloud"
      },
      {
        "depth": 2,
        "title": "Polkadot Hub",
        "anchor": "polkadot-hub"
      },
      {
        "depth": 2,
        "title": "PolkaVM",
        "anchor": "polkavm"
      },
      {
        "depth": 2,
        "title": "Relay Chain",
        "anchor": "relay-chain"
      },
      {
        "depth": 2,
        "title": "Rococo",
        "anchor": "rococo"
      },
      {
        "depth": 2,
        "title": "Runtime",
        "anchor": "runtime"
      },
      {
        "depth": 2,
        "title": "Slot",
        "anchor": "slot"
      },
      {
        "depth": 2,
        "title": "Sovereign Account",
        "anchor": "sovereign-account"
      },
      {
        "depth": 2,
        "title": "SS58 Address Format",
        "anchor": "ss58-address-format"
      },
      {
        "depth": 2,
        "title": "State Transition Function (STF)",
        "anchor": "state-transition-function-stf"
      },
      {
        "depth": 2,
        "title": "Storage Item",
        "anchor": "storage-item"
      },
      {
        "depth": 2,
        "title": "Substrate",
        "anchor": "substrate"
      },
      {
        "depth": 2,
        "title": "Transaction",
        "anchor": "transaction"
      },
      {
        "depth": 2,
        "title": "Transaction Era",
        "anchor": "transaction-era"
      },
      {
        "depth": 2,
        "title": "Trie (Patricia Merkle Tree)",
        "anchor": "trie-patricia-merkle-tree"
      },
      {
        "depth": 2,
        "title": "Validator",
        "anchor": "validator"
      },
      {
        "depth": 2,
        "title": "WebAssembly (Wasm)",
        "anchor": "webassembly-wasm"
      },
      {
        "depth": 2,
        "title": "Weight",
        "anchor": "weight"
      },
      {
        "depth": 2,
        "title": "Westend",
        "anchor": "westend"
      }
    ],
    "stats": {
      "chars": 24739,
      "words": 3625,
      "headings": 63,
      "estimated_token_count_total": 5271
    },
    "hash": "sha256:f0e04286eacf23b182186f23e9854c0cd251545b8a8d561d2503f962dbfe32c0",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-smart-contract-basics-accounts",
    "title": "Accounts in Asset Hub Smart Contracts",
    "slug": "polkadot-protocol-smart-contract-basics-accounts",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-smart-contract-basics-accounts.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/smart-contract-basics/accounts/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Address Types and Mappings",
        "anchor": "address-types-and-mappings"
      },
      {
        "depth": 3,
        "title": "Ethereum to Polkadot Mapping",
        "anchor": "ethereum-to-polkadot-mapping"
      },
      {
        "depth": 3,
        "title": "Polkadot to Ethereum Mapping",
        "anchor": "polkadot-to-ethereum-mapping"
      },
      {
        "depth": 3,
        "title": "Account Mapping for Native Polkadot Accounts",
        "anchor": "account-mapping-for-native-polkadot-accounts"
      },
      {
        "depth": 2,
        "title": "Account Registration",
        "anchor": "account-registration"
      },
      {
        "depth": 2,
        "title": "Fallback Accounts",
        "anchor": "fallback-accounts"
      },
      {
        "depth": 2,
        "title": "Contract Address Generation",
        "anchor": "contract-address-generation"
      },
      {
        "depth": 2,
        "title": "Security Considerations",
        "anchor": "security-considerations"
      }
    ],
    "stats": {
      "chars": 8538,
      "words": 1141,
      "headings": 9,
      "estimated_token_count_total": 1822
    },
    "hash": "sha256:db2b1806153242680043ced536f64fc8a2ed3c09adc1bec5aa287168b48e0994",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-smart-contract-basics-blocks-transactions-fees",
    "title": "Transactions and Fees on Asset Hub",
    "slug": "polkadot-protocol-smart-contract-basics-blocks-transactions-fees",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-smart-contract-basics-blocks-transactions-fees.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/smart-contract-basics/blocks-transactions-fees/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Smart Contract Blocks",
        "anchor": "smart-contract-blocks"
      },
      {
        "depth": 2,
        "title": "Smart Contract Transactions",
        "anchor": "smart-contract-transactions"
      },
      {
        "depth": 3,
        "title": "EVM Transaction Types",
        "anchor": "evm-transaction-types"
      },
      {
        "depth": 2,
        "title": "Fees and Gas",
        "anchor": "fees-and-gas"
      },
      {
        "depth": 3,
        "title": "Gas Model Overview",
        "anchor": "gas-model-overview"
      },
      {
        "depth": 3,
        "title": "Fee Components",
        "anchor": "fee-components"
      },
      {
        "depth": 3,
        "title": "Gas Calculation and Conversion",
        "anchor": "gas-calculation-and-conversion"
      }
    ],
    "stats": {
      "chars": 6361,
      "words": 789,
      "headings": 8,
      "estimated_token_count_total": 1178
    },
    "hash": "sha256:9a6b3fa6c005d75c25f0f683b7d8c3b65891454743b794c12b005f910b81609c",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-smart-contract-basics-evm-vs-polkavm",
    "title": "EVM vs PolkaVM",
    "slug": "polkadot-protocol-smart-contract-basics-evm-vs-polkavm",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-smart-contract-basics-evm-vs-polkavm.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/smart-contract-basics/evm-vs-polkavm/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Core Virtual Machine Architecture",
        "anchor": "core-virtual-machine-architecture"
      },
      {
        "depth": 3,
        "title": "High-Level Architecture Comparison",
        "anchor": "high-level-architecture-comparison"
      },
      {
        "depth": 2,
        "title": "Gas Model",
        "anchor": "gas-model"
      },
      {
        "depth": 3,
        "title": "Dynamic Gas Value Scaling",
        "anchor": "dynamic-gas-value-scaling"
      },
      {
        "depth": 3,
        "title": "Multi-Dimensional Resource Metering",
        "anchor": "multi-dimensional-resource-metering"
      },
      {
        "depth": 2,
        "title": "Memory Management",
        "anchor": "memory-management"
      },
      {
        "depth": 3,
        "title": "Current Memory Limits",
        "anchor": "current-memory-limits"
      },
      {
        "depth": 2,
        "title": "Account Management - Existential Deposit",
        "anchor": "account-management-existential-deposit"
      },
      {
        "depth": 3,
        "title": "Account Management Comparison",
        "anchor": "account-management-comparison"
      },
      {
        "depth": 2,
        "title": "Contract Deployment",
        "anchor": "contract-deployment"
      },
      {
        "depth": 2,
        "title": "Solidity and YUL IR Translation Incompatibilities",
        "anchor": "solidity-and-yul-ir-translation-incompatibilities"
      },
      {
        "depth": 3,
        "title": "Contract Code Structure",
        "anchor": "contract-code-structure"
      },
      {
        "depth": 3,
        "title": "Solidity-Specific Differences",
        "anchor": "solidity-specific-differences"
      },
      {
        "depth": 3,
        "title": "YUL Function Translation Differences",
        "anchor": "yul-function-translation-differences"
      },
      {
        "depth": 3,
        "title": "Unsupported Operations",
        "anchor": "unsupported-operations"
      },
      {
        "depth": 3,
        "title": "Compilation Pipeline Considerations",
        "anchor": "compilation-pipeline-considerations"
      },
      {
        "depth": 3,
        "title": "Memory Pointer Limitations",
        "anchor": "memory-pointer-limitations"
      }
    ],
    "stats": {
      "chars": 27685,
      "words": 3391,
      "headings": 18,
      "estimated_token_count_total": 5303
    },
    "hash": "sha256:6078ea5afa297470ab65e55d8da9001ab23d6191c591d708c5007338eb252eb8",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-smart-contract-basics-networks",
    "title": "Networks for Polkadot Hub Smart Contracts",
    "slug": "polkadot-protocol-smart-contract-basics-networks",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-smart-contract-basics-networks.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/smart-contract-basics/networks/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Network Overview",
        "anchor": "network-overview"
      },
      {
        "depth": 2,
        "title": "Local Development",
        "anchor": "local-development"
      },
      {
        "depth": 2,
        "title": "Test Networks",
        "anchor": "test-networks"
      },
      {
        "depth": 3,
        "title": "Passet Hub",
        "anchor": "passet-hub"
      },
      {
        "depth": 3,
        "title": "Westend Hub",
        "anchor": "westend-hub"
      },
      {
        "depth": 2,
        "title": "Production Networks",
        "anchor": "production-networks"
      },
      {
        "depth": 3,
        "title": "Polkadot Hub",
        "anchor": "polkadot-hub"
      },
      {
        "depth": 3,
        "title": "Kusama Hub",
        "anchor": "kusama-hub"
      }
    ],
    "stats": {
      "chars": 5108,
      "words": 696,
      "headings": 9,
      "estimated_token_count_total": 891
    },
    "hash": "sha256:b5acdc9acf0e44836b8a4518155eba7d16cc3b103c557a00970ffb1c44c3e9f6",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-smart-contract-basics-overview",
    "title": "Smart Contracts Basics Overview",
    "slug": "polkadot-protocol-smart-contract-basics-overview",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-smart-contract-basics-overview.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/smart-contract-basics/overview/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Smart Contracts Versus Parachains",
        "anchor": "smart-contracts-versus-parachains"
      },
      {
        "depth": 2,
        "title": "Building a Smart Contract",
        "anchor": "building-a-smart-contract"
      },
      {
        "depth": 3,
        "title": "PolkaVM Contracts",
        "anchor": "polkavm-contracts"
      },
      {
        "depth": 3,
        "title": "EVM Contracts",
        "anchor": "evm-contracts"
      },
      {
        "depth": 3,
        "title": "Wasm Contracts",
        "anchor": "wasm-contracts"
      }
    ],
    "stats": {
      "chars": 10923,
      "words": 1569,
      "headings": 6,
      "estimated_token_count_total": 2573
    },
    "hash": "sha256:ae55284ed2087e5331cc42353a8607a6ecbcbc21df664d7368839a1b8a55a053",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "polkadot-protocol-smart-contract-basics-polkavm-design",
    "title": "PolkaVM Design",
    "slug": "polkadot-protocol-smart-contract-basics-polkavm-design",
    "categories": [
      "Basics",
      "Polkadot Protocol"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/polkadot-protocol-smart-contract-basics-polkavm-design.md",
    "html_url": "https://docs.polkadot.com/polkadot-protocol/smart-contract-basics/polkavm-design/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "PolkaVM",
        "anchor": "polkavm"
      },
      {
        "depth": 2,
        "title": "Architecture",
        "anchor": "architecture"
      },
      {
        "depth": 3,
        "title": "Pallet Revive",
        "anchor": "pallet-revive"
      },
      {
        "depth": 3,
        "title": "PolkaVM Design Fundamentals",
        "anchor": "polkavm-design-fundamentals"
      },
      {
        "depth": 2,
        "title": "Compilation Process",
        "anchor": "compilation-process"
      }
    ],
    "stats": {
      "chars": 5334,
      "words": 666,
      "headings": 6,
      "estimated_token_count_total": 994
    },
    "hash": "sha256:6992c9a2d1b315b64d9782880105cf2d436750249a84577aceb95cc213863009",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-dapps-remark-tutorial",
    "title": "PAPI Account Watcher Tutorial",
    "slug": "tutorials-dapps-remark-tutorial",
    "categories": [
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-dapps-remark-tutorial.md",
    "html_url": "https://docs.polkadot.com/tutorials/dapps/remark-tutorial/",
    "preview": "This tutorial demonstrates how to build a simple command-line interface (CLI) application that monitors a user's account on the relay chain for the [`system.remarkWithEvent`](https://paritytech.github.io/polkadot-sdk/master/frame_system/pallet/struct.Pallet.html#method.remark_with_event){target=\\_blank} extrinsic, using the [Polkadot API](/develop/toolkit/api-libraries/papi){target=\\_blank}.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Clone the Repository",
        "anchor": "clone-the-repository"
      },
      {
        "depth": 2,
        "title": "Explore the Template (Light Clients)",
        "anchor": "explore-the-template-light-clients"
      },
      {
        "depth": 2,
        "title": "Create the CLI",
        "anchor": "create-the-cli"
      },
      {
        "depth": 2,
        "title": "Watch for Remarks",
        "anchor": "watch-for-remarks"
      },
      {
        "depth": 2,
        "title": "Compile and Run",
        "anchor": "compile-and-run"
      },
      {
        "depth": 2,
        "title": "Test the CLI",
        "anchor": "test-the-cli"
      },
      {
        "depth": 2,
        "title": "Next Steps",
        "anchor": "next-steps"
      }
    ],
    "stats": {
      "chars": 8055,
      "words": 1112,
      "headings": 9,
      "estimated_token_count_total": 2251
    },
    "hash": "sha256:98f8303886011fb13fe8e7a32a8a6150f68703ec7c2a863a21050a35aebf2f36",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-interoperability-replay-and-dry-run-xcms",
    "title": "Replay and Dry Run XCMs",
    "slug": "tutorials-interoperability-replay-and-dry-run-xcms",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-interoperability-replay-and-dry-run-xcms.md",
    "html_url": "https://docs.polkadot.com/tutorials/interoperability/replay-and-dry-run-xcms/",
    "preview": "In this tutorial, you'll learn how to replay and dry-run XCMs using [Chopsticks](/develop/toolkit/parachains/fork-chains/chopsticks/get-started/){target=\\_blank}, a powerful tool for forking live Polkadot SDK-based chains in your local environment. These techniques are essential for:",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Set Up Your Project",
        "anchor": "set-up-your-project"
      },
      {
        "depth": 2,
        "title": "Capture the XCM to Replay",
        "anchor": "capture-the-xcm-to-replay"
      },
      {
        "depth": 2,
        "title": "Fork the Relevant Chains",
        "anchor": "fork-the-relevant-chains"
      },
      {
        "depth": 3,
        "title": "Set the Block Numbers",
        "anchor": "set-the-block-numbers"
      },
      {
        "depth": 3,
        "title": "Enable Logging and Wasm Override",
        "anchor": "enable-logging-and-wasm-override"
      },
      {
        "depth": 2,
        "title": "Identify and Extract the XCM",
        "anchor": "identify-and-extract-the-xcm"
      },
      {
        "depth": 2,
        "title": "Replay the XCM",
        "anchor": "replay-the-xcm"
      },
      {
        "depth": 3,
        "title": "Add the Asset Hub Descriptor",
        "anchor": "add-the-asset-hub-descriptor"
      },
      {
        "depth": 3,
        "title": "Create a Replay Script",
        "anchor": "create-a-replay-script"
      },
      {
        "depth": 3,
        "title": "Execute the Replay Script",
        "anchor": "execute-the-replay-script"
      },
      {
        "depth": 3,
        "title": "Expected Output",
        "anchor": "expected-output"
      },
      {
        "depth": 2,
        "title": "Dry Run the XCM",
        "anchor": "dry-run-the-xcm"
      },
      {
        "depth": 3,
        "title": "Create a Dry Run Script",
        "anchor": "create-a-dry-run-script"
      },
      {
        "depth": 3,
        "title": "Execute the Dry Run Script",
        "anchor": "execute-the-dry-run-script"
      },
      {
        "depth": 2,
        "title": "Review and Debug",
        "anchor": "review-and-debug"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 18992,
      "words": 2369,
      "headings": 18,
      "estimated_token_count_total": 4844
    },
    "hash": "sha256:96acff10be56dea76acdb5c915c1dde0eb15eb12eb95e7871eef56bab6cda273",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-interoperability-xcm-channels-para-to-para",
    "title": "Opening HRMP Channels Between Parachains",
    "slug": "tutorials-interoperability-xcm-channels-para-to-para",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-interoperability-xcm-channels-para-to-para.md",
    "html_url": "https://docs.polkadot.com/tutorials/interoperability/xcm-channels/para-to-para/",
    "preview": "For establishing communication channels between parachains on the Polkadot network using the Horizontal Relay-routed Message Passing (HRMP) protocol, the following steps are required:",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Procedure to Initiate an HRMP Channel",
        "anchor": "procedure-to-initiate-an-hrmp-channel"
      },
      {
        "depth": 3,
        "title": "Fund Sender Sovereign Account",
        "anchor": "fund-sender-sovereign-account"
      },
      {
        "depth": 3,
        "title": "Create Channel Opening Extrinsic",
        "anchor": "create-channel-opening-extrinsic"
      },
      {
        "depth": 3,
        "title": "Craft and Submit the XCM Message from the Sender",
        "anchor": "craft-and-submit-the-xcm-message-from-the-sender"
      },
      {
        "depth": 2,
        "title": "Procedure to Accept an HRMP Channel",
        "anchor": "procedure-to-accept-an-hrmp-channel"
      },
      {
        "depth": 3,
        "title": "Fund Receiver Sovereign Account",
        "anchor": "fund-receiver-sovereign-account"
      },
      {
        "depth": 3,
        "title": "Create Channel Accepting Extrinsic",
        "anchor": "create-channel-accepting-extrinsic"
      },
      {
        "depth": 3,
        "title": "Craft and Submit the XCM Message from the Receiver",
        "anchor": "craft-and-submit-the-xcm-message-from-the-receiver"
      }
    ],
    "stats": {
      "chars": 10985,
      "words": 1594,
      "headings": 10,
      "estimated_token_count_total": 2375
    },
    "hash": "sha256:61bc251929352f2299ca1d413d05aa9c3672b914575a285d73c7ba53dbd75bff",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-interoperability-xcm-channels-para-to-system",
    "title": "Opening HRMP Channels with System Parachains",
    "slug": "tutorials-interoperability-xcm-channels-para-to-system",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-interoperability-xcm-channels-para-to-system.md",
    "html_url": "https://docs.polkadot.com/tutorials/interoperability/xcm-channels/para-to-system/",
    "preview": "While establishing Horizontal Relay-routed Message Passing (HRMP) channels between regular parachains involves a two-step request and acceptance procedure, opening channels with system parachains follows a more straightforward approach.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Procedure to Establish an HRMP Channel",
        "anchor": "procedure-to-establish-an-hrmp-channel"
      },
      {
        "depth": 3,
        "title": "Fund Parachain Sovereign Account",
        "anchor": "fund-parachain-sovereign-account"
      },
      {
        "depth": 3,
        "title": "Create Establish Channel with System Extrinsic",
        "anchor": "create-establish-channel-with-system-extrinsic"
      },
      {
        "depth": 3,
        "title": "Craft and Submit the XCM Message",
        "anchor": "craft-and-submit-the-xcm-message"
      }
    ],
    "stats": {
      "chars": 7208,
      "words": 906,
      "headings": 6,
      "estimated_token_count_total": 1461
    },
    "hash": "sha256:370ed10155cee84889a6d230d0bc3476597448f88a2a271ab87ef893a3268c18",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-interoperability-xcm-fee-estimation",
    "title": "XCM Fee Estimation",
    "slug": "tutorials-interoperability-xcm-fee-estimation",
    "categories": [
      "Uncategorized"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-interoperability-xcm-fee-estimation.md",
    "html_url": "https://docs.polkadot.com/tutorials/interoperability/xcm-fee-estimation/",
    "preview": "When sending cross-chain messages, ensure that the transaction will be successful not only in the local chain but also in the destination chain and any intermediate chains.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Fee Mechanism",
        "anchor": "fee-mechanism"
      },
      {
        "depth": 2,
        "title": "Environment Setup",
        "anchor": "environment-setup"
      },
      {
        "depth": 2,
        "title": "Client and API Setup",
        "anchor": "client-and-api-setup"
      },
      {
        "depth": 2,
        "title": "Create the XCM Message",
        "anchor": "create-the-xcm-message"
      },
      {
        "depth": 2,
        "title": "Fee Estimation Function",
        "anchor": "fee-estimation-function"
      },
      {
        "depth": 2,
        "title": "Complete Implementation",
        "anchor": "complete-implementation"
      },
      {
        "depth": 2,
        "title": "Full Code",
        "anchor": "full-code"
      },
      {
        "depth": 2,
        "title": "Running the Script",
        "anchor": "running-the-script"
      },
      {
        "depth": 2,
        "title": "Conclusion",
        "anchor": "conclusion"
      }
    ],
    "stats": {
      "chars": 38625,
      "words": 3786,
      "headings": 10,
      "estimated_token_count_total": 7755
    },
    "hash": "sha256:086a87823ab67ceac102358030e316583cd733c0ec326316e7f29061fe7f6934",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-interoperability-xcm-transfers-from-relaychain-to-parachain",
    "title": "XCM Transfers from Relay Chain to Parachain",
    "slug": "tutorials-interoperability-xcm-transfers-from-relaychain-to-parachain",
    "categories": [
      "Parachains"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-interoperability-xcm-transfers-from-relaychain-to-parachain.md",
    "html_url": "https://docs.polkadot.com/tutorials/interoperability/xcm-transfers/from-relaychain-to-parachain/",
    "preview": "[Cross-Consensus Messaging (XCM)](/develop/interoperability/intro-to-xcm/){target=\\_blank} facilitates asset transfers both within the same consensus system and between different ones, such as between a relay chain and its parachains. For cross-system transfers, two main methods are available:",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Setup",
        "anchor": "setup"
      },
      {
        "depth": 2,
        "title": "Use Polkadot.js Apps",
        "anchor": "use-polkadotjs-apps"
      },
      {
        "depth": 3,
        "title": "From the Relay Chain Perspective",
        "anchor": "from-the-relay-chain-perspective"
      },
      {
        "depth": 3,
        "title": "From the Parachain Perspective",
        "anchor": "from-the-parachain-perspective"
      },
      {
        "depth": 2,
        "title": "Use PAPI",
        "anchor": "use-papi"
      },
      {
        "depth": 2,
        "title": "Additional Resources",
        "anchor": "additional-resources"
      }
    ],
    "stats": {
      "chars": 12692,
      "words": 1565,
      "headings": 8,
      "estimated_token_count_total": 2770
    },
    "hash": "sha256:581c8ac75aed22373939de6ad8396ee6e2840fbbaf495e81daf115d444a53017",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-polkadot-sdk-testing-fork-live-chains",
    "title": "Fork a Chain with Chopsticks",
    "slug": "tutorials-polkadot-sdk-testing-fork-live-chains",
    "categories": [
      "Basics",
      "dApps",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-polkadot-sdk-testing-fork-live-chains.md",
    "html_url": "https://docs.polkadot.com/tutorials/polkadot-sdk/testing/fork-live-chains/",
    "preview": "Chopsticks is an innovative tool that simplifies the process of forking live Polkadot SDK chains. This guide provides step-by-step instructions to configure and fork chains, enabling developers to:",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Configuration File",
        "anchor": "configuration-file"
      },
      {
        "depth": 2,
        "title": "Create a Fork",
        "anchor": "create-a-fork"
      },
      {
        "depth": 2,
        "title": "Interact with a Fork",
        "anchor": "interact-with-a-fork"
      },
      {
        "depth": 3,
        "title": "Use Polkadot.js Apps",
        "anchor": "use-polkadotjs-apps"
      },
      {
        "depth": 3,
        "title": "Use Polkadot.js Library",
        "anchor": "use-polkadotjs-library"
      },
      {
        "depth": 2,
        "title": "Replay Blocks",
        "anchor": "replay-blocks"
      },
      {
        "depth": 2,
        "title": "XCM Testing",
        "anchor": "xcm-testing"
      }
    ],
    "stats": {
      "chars": 22380,
      "words": 1343,
      "headings": 9,
      "estimated_token_count_total": 2737
    },
    "hash": "sha256:b3bae6a7538228ab76099223b4712df93d53727f2a559faf60516a3cd0165178",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-polkadot-sdk-testing-spawn-basic-chain",
    "title": "Spawn a Basic Chain with Zombienet",
    "slug": "tutorials-polkadot-sdk-testing-spawn-basic-chain",
    "categories": [
      "Basics",
      "dApps",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-polkadot-sdk-testing-spawn-basic-chain.md",
    "html_url": "https://docs.polkadot.com/tutorials/polkadot-sdk/testing/spawn-basic-chain/",
    "preview": "Zombienet simplifies blockchain development by enabling developers to create temporary, customizable networks for testing and validation. These ephemeral chains are ideal for experimenting with configurations, debugging applications, and validating functionality in a controlled environment.",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Set Up Local Provider",
        "anchor": "set-up-local-provider"
      },
      {
        "depth": 2,
        "title": "Define the Network",
        "anchor": "define-the-network"
      },
      {
        "depth": 2,
        "title": "Spawn the Network",
        "anchor": "spawn-the-network"
      },
      {
        "depth": 2,
        "title": "Interact with the Spawned Network",
        "anchor": "interact-with-the-spawned-network"
      },
      {
        "depth": 3,
        "title": "Connect to the Nodes",
        "anchor": "connect-to-the-nodes"
      },
      {
        "depth": 3,
        "title": "Check Metrics",
        "anchor": "check-metrics"
      },
      {
        "depth": 3,
        "title": "Check Logs",
        "anchor": "check-logs"
      }
    ],
    "stats": {
      "chars": 9572,
      "words": 1403,
      "headings": 9,
      "estimated_token_count_total": 2580
    },
    "hash": "sha256:b6570ad1b32bb07cf0ae33442e6189e1837bfa28f687e589ca189851aa292091",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-smart-contracts-demo-aplications-deploying-uniswap-v2",
    "title": "Deploying Uniswap V2 on Polkadot",
    "slug": "tutorials-smart-contracts-demo-aplications-deploying-uniswap-v2",
    "categories": [
      "dApps",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-smart-contracts-demo-aplications-deploying-uniswap-v2.md",
    "html_url": "https://docs.polkadot.com/tutorials/smart-contracts/demo-aplications/deploying-uniswap-v2/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Set Up the Project",
        "anchor": "set-up-the-project"
      },
      {
        "depth": 2,
        "title": "Understanding Uniswap V2 Architecture",
        "anchor": "understanding-uniswap-v2-architecture"
      },
      {
        "depth": 2,
        "title": "Test the Contracts",
        "anchor": "test-the-contracts"
      },
      {
        "depth": 2,
        "title": "Deploy the Contracts",
        "anchor": "deploy-the-contracts"
      },
      {
        "depth": 2,
        "title": "Conclusion",
        "anchor": "conclusion"
      }
    ],
    "stats": {
      "chars": 11288,
      "words": 1560,
      "headings": 7,
      "estimated_token_count_total": 2670
    },
    "hash": "sha256:07629376480e74afc7fe4d91df539b6ab22453df0f8143df11cc51ef9a78f736",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-smart-contracts-deploy-erc20",
    "title": "Deploy an ERC-20 to Polkadot Hub",
    "slug": "tutorials-smart-contracts-deploy-erc20",
    "categories": [
      "Basics",
      "dApps",
      "Smart Contracts"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-smart-contracts-deploy-erc20.md",
    "html_url": "https://docs.polkadot.com/tutorials/smart-contracts/deploy-erc20/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Create the ERC-20 Contract",
        "anchor": "create-the-erc-20-contract"
      },
      {
        "depth": 2,
        "title": "Compile the Contract",
        "anchor": "compile-the-contract"
      },
      {
        "depth": 2,
        "title": "Deploy the Contract",
        "anchor": "deploy-the-contract"
      },
      {
        "depth": 2,
        "title": "Interact with Your ERC-20 Contract",
        "anchor": "interact-with-your-erc-20-contract"
      }
    ],
    "stats": {
      "chars": 8740,
      "words": 1182,
      "headings": 6,
      "estimated_token_count_total": 2056
    },
    "hash": "sha256:cf9197d6909dd8865e8838cad95e3692fefaecc3d2f4773b26809a02051d620f",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-smart-contracts-deploy-nft",
    "title": "Deploy an NFT to Polkadot Hub",
    "slug": "tutorials-smart-contracts-deploy-nft",
    "categories": [
      "Basics",
      "dApps",
      "Smart Contracts"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-smart-contracts-deploy-nft.md",
    "html_url": "https://docs.polkadot.com/tutorials/smart-contracts/deploy-nft/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Create the NFT Contract",
        "anchor": "create-the-nft-contract"
      },
      {
        "depth": 2,
        "title": "Compile the Contract",
        "anchor": "compile-the-contract"
      },
      {
        "depth": 2,
        "title": "Deploy the Contract",
        "anchor": "deploy-the-contract"
      },
      {
        "depth": 2,
        "title": "Interact with Your NFT Contract",
        "anchor": "interact-with-your-nft-contract"
      }
    ],
    "stats": {
      "chars": 9623,
      "words": 1303,
      "headings": 6,
      "estimated_token_count_total": 2220
    },
    "hash": "sha256:aa6371024bb78c3eeedb6820a37859670046fd0e4f756ad417b20c39fb2983b9",
    "last_modified": "2025-10-08T17:32:24+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-smart-contracts-launch-your-first-project-create-contracts",
    "title": "Create a Smart Contract",
    "slug": "tutorials-smart-contracts-launch-your-first-project-create-contracts",
    "categories": [
      "Basics",
      "Smart Contracts"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-smart-contracts-launch-your-first-project-create-contracts.md",
    "html_url": "https://docs.polkadot.com/tutorials/smart-contracts/launch-your-first-project/create-contracts/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Understanding Smart Contract Structure",
        "anchor": "understanding-smart-contract-structure"
      },
      {
        "depth": 2,
        "title": "Create the Smart Contract",
        "anchor": "create-the-smart-contract"
      },
      {
        "depth": 2,
        "title": "Understanding the Code",
        "anchor": "understanding-the-code"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 8670,
      "words": 1178,
      "headings": 6,
      "estimated_token_count_total": 1760
    },
    "hash": "sha256:4f3e2e50a595b0f93078ce0f63185a6f367ae341ae8afac10709c061c54b3307",
    "last_modified": "2025-10-08T17:32:25+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-smart-contracts-launch-your-first-project-create-dapp-ethers-js",
    "title": "Create a dApp With Ethers.js",
    "slug": "tutorials-smart-contracts-launch-your-first-project-create-dapp-ethers-js",
    "categories": [
      "dApp",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-smart-contracts-launch-your-first-project-create-dapp-ethers-js.md",
    "html_url": "https://docs.polkadot.com/tutorials/smart-contracts/launch-your-first-project/create-dapp-ethers-js/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Project Overview",
        "anchor": "project-overview"
      },
      {
        "depth": 2,
        "title": "Set Up the Project",
        "anchor": "set-up-the-project"
      },
      {
        "depth": 2,
        "title": "Connect to Polkadot Hub",
        "anchor": "connect-to-polkadot-hub"
      },
      {
        "depth": 2,
        "title": "Set Up the Smart Contract Interface",
        "anchor": "set-up-the-smart-contract-interface"
      },
      {
        "depth": 2,
        "title": "Create the Wallet Connection Component",
        "anchor": "create-the-wallet-connection-component"
      },
      {
        "depth": 2,
        "title": "Read Data from the Blockchain",
        "anchor": "read-data-from-the-blockchain"
      },
      {
        "depth": 2,
        "title": "Write Data to the Blockchain",
        "anchor": "write-data-to-the-blockchain"
      },
      {
        "depth": 2,
        "title": "Conclusion",
        "anchor": "conclusion"
      }
    ],
    "stats": {
      "chars": 21978,
      "words": 2569,
      "headings": 10,
      "estimated_token_count_total": 5126
    },
    "hash": "sha256:12cbf7c21f969c771ab046ddf836a1967f80e89e8e379d30e4ecdced43d3b160",
    "last_modified": "2025-10-08T17:32:29+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-smart-contracts-launch-your-first-project-create-dapp-viem",
    "title": "Create a dApp With Viem",
    "slug": "tutorials-smart-contracts-launch-your-first-project-create-dapp-viem",
    "categories": [
      "dApp",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-smart-contracts-launch-your-first-project-create-dapp-viem.md",
    "html_url": "https://docs.polkadot.com/tutorials/smart-contracts/launch-your-first-project/create-dapp-viem/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. Decentralized applications (dApps) are a key component of the Web3 ecosystem, enabling developers to build applications that communicate directly with blockchain networks. Polkadot Hub, a blockchain with smart contract support, serves as a robust platform for deploying and interacting with dApps.",
    "outline": [
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Project Overview",
        "anchor": "project-overview"
      },
      {
        "depth": 2,
        "title": "Set Up the Project",
        "anchor": "set-up-the-project"
      },
      {
        "depth": 2,
        "title": "Install Dependencies",
        "anchor": "install-dependencies"
      },
      {
        "depth": 2,
        "title": "Connect to Polkadot Hub",
        "anchor": "connect-to-polkadot-hub"
      },
      {
        "depth": 2,
        "title": "Set Up the Smart Contract Interface",
        "anchor": "set-up-the-smart-contract-interface"
      },
      {
        "depth": 2,
        "title": "Create the Wallet Connection Component",
        "anchor": "create-the-wallet-connection-component"
      },
      {
        "depth": 2,
        "title": "Create the Read Contract Component",
        "anchor": "create-the-read-contract-component"
      },
      {
        "depth": 2,
        "title": "Create the Write Contract Component",
        "anchor": "create-the-write-contract-component"
      },
      {
        "depth": 2,
        "title": "How It Works",
        "anchor": "how-it-works"
      },
      {
        "depth": 2,
        "title": "Conclusion",
        "anchor": "conclusion"
      },
      {
        "depth": 2,
        "title": "Where to Go Next",
        "anchor": "where-to-go-next"
      }
    ],
    "stats": {
      "chars": 27950,
      "words": 3205,
      "headings": 12,
      "estimated_token_count_total": 6212
    },
    "hash": "sha256:1c637fe7a53d42add1a2ee09091d79f2086f2fe3091674e58b40574ae49bb2ec",
    "last_modified": "2025-10-08T17:32:33+00:00",
    "token_estimator": "heuristic-v1"
  },
  {
    "id": "tutorials-smart-contracts-launch-your-first-project-test-and-deploy-with-hardhat",
    "title": "Test and Deploy with Hardhat",
    "slug": "tutorials-smart-contracts-launch-your-first-project-test-and-deploy-with-hardhat",
    "categories": [
      "dApp",
      "Tooling"
    ],
    "raw_md_url": "https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/master/.ai/pages/tutorials-smart-contracts-launch-your-first-project-test-and-deploy-with-hardhat.md",
    "html_url": "https://docs.polkadot.com/tutorials/smart-contracts/launch-your-first-project/test-and-deploy-with-hardhat/",
    "preview": "!!! smartcontract \"PolkaVM Preview Release\" PolkaVM smart contracts with Ethereum compatibility are in **early-stage development and may be unstable or incomplete**. ## Introduction",
    "outline": [
      {
        "depth": 2,
        "title": "Introduction",
        "anchor": "introduction"
      },
      {
        "depth": 2,
        "title": "Prerequisites",
        "anchor": "prerequisites"
      },
      {
        "depth": 2,
        "title": "Setting Up the Development Environment",
        "anchor": "setting-up-the-development-environment"
      },
      {
        "depth": 2,
        "title": "Adding the Smart Contract",
        "anchor": "adding-the-smart-contract"
      },
      {
        "depth": 2,
        "title": "Writing Tests",
        "anchor": "writing-tests"
      },
      {
        "depth": 2,
        "title": "Deploying with Ignition",
        "anchor": "deploying-with-ignition"
      },
      {
        "depth": 2,
        "title": "Interacting with Your Deployed Contract",
        "anchor": "interacting-with-your-deployed-contract"
      },
      {
        "depth": 2,
        "title": "Conclusion",
        "anchor": "conclusion"
      }
    ],
    "stats": {
      "chars": 18691,
      "words": 2236,
      "headings": 8,
      "estimated_token_count_total": 4130
    },
    "hash": "sha256:576067f5cd3a315dea7998f9bb729c93646e38b586f73402d05be6d75e38c80f",
    "last_modified": "2025-10-08T17:32:36+00:00",
    "token_estimator": "heuristic-v1"
  }
]