name: Check Documentation URL Changes


on:
  pull_request:
    branches:
      - master


jobs:
  check-url-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0


      - name: Identify deleted and renamed files
        run: |
          BASE_BRANCH=${{ github.event.pull_request.base.ref }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
          BASE_REF="origin/${BASE_BRANCH}"

          git fetch origin "${BASE_BRANCH}" --depth=1

          DELETED_FILES=$(git diff --name-status "$BASE_REF" "$HEAD_SHA" | grep '^D.*\.md$' | cut -f2- || true)
          RENAMED_FILES=$(git diff --name-status "$BASE_REF" "$HEAD_SHA" | grep '^R.*\.md$' | awk '{print $2 " -> " $3}' || true)


          NAV_FILES=$(git diff --name-only "$BASE_REF" "$HEAD_SHA" -- '*.nav.yml' '*.nav.yaml' || true)
          if [ -n "$NAV_FILES" ]; then
            while IFS= read -r nav_file; do
              [ -z "$nav_file" ] && continue
              NAV_DELETED_LINES=$(git diff "$BASE_REF" "$HEAD_SHA" -- "$nav_file" | grep '^-' | grep '\.md' | cut -c2- || true)
              NAV_ADDED_LINES=$(git diff "$BASE_REF" "$HEAD_SHA" -- "$nav_file" | grep '^+' | grep '\.md' | cut -c2- || true)


              if [ -n "$NAV_DELETED_LINES" ]; then
                while IFS= read -r line; do
                  [ -z "$line" ] && continue
                  entry="$nav_file: ${line# }"
                  DELETED_FILES="${DELETED_FILES:+$DELETED_FILES"$'\n'"}$entry"
                done <<< "$NAV_DELETED_LINES"
              fi


              if [ -n "$NAV_ADDED_LINES" ]; then
                while IFS= read -r line; do
                  [ -z "$line" ] && continue
                  entry="$nav_file: ${line# }"
                  RENAMED_FILES="${RENAMED_FILES:+$RENAMED_FILES"$'\n'"}$entry"
                done <<< "$NAV_ADDED_LINES"
              fi
            done <<< "$NAV_FILES"
          fi


          echo "DELETED_FILES<<EOF" >> $GITHUB_ENV
          echo "$DELETED_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV


          echo "RENAMED_FILES<<EOF" >> $GITHUB_ENV
          echo "$RENAMED_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV


          if [ -n "$DELETED_FILES" ] || [ -n "$RENAMED_FILES" ]; then
            echo "warning=true" >> $GITHUB_ENV
          else
            echo "warning=false" >> $GITHUB_ENV
          fi


          echo "Deleted files:"
          echo "$DELETED_FILES"
          echo -e "\nRenamed/Moved files:"
          echo "$RENAMED_FILES"


      - name: Post PR warning
        if: env.warning == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deletedFiles = `${process.env.DELETED_FILES}`.trim();
            const renamedFiles = `${process.env.RENAMED_FILES}`.trim();
            const sections = [];


            if (deletedFiles) {
              sections.push(`**Deleted Markdown files:**\n\`\`\`\n${deletedFiles}\n\`\`\``);
            }


            if (renamedFiles) {
              sections.push(`**Renamed Markdown files:**\n\`\`\`\n${renamedFiles}\n\`\`\``);
            }


            if (!sections.length) {
              return;
            }


            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: sections.join('\n\n')
            });
