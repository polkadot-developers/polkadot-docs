[workspace.package]
license = "MIT-0"
authors = [
  "Parity Technologies <admin@parity.io>",
  "Web3 Foundation",
  "PaperMoon.io",
]
homepage = "docs.polkadot.com"
repository = "https://github.com/paritytech/polkadot-sdk-parachain-template.git"
edition = "2021"

[workspace]
members = ["tutorials/polkadot-sdk/parachains/zero-to-hero/runtime"]
resolver = "2"

[workspace.dependencies]
clap = { version = "4.5.10" }
codec = { version = "3.6.12", default-features = false, package = "parity-scale-codec" }
color-print = { version = "0.3.4" }
cumulus-client-cli = { version = "0.18.0", default-features = false }
cumulus-client-collator = { version = "0.18.0", default-features = false }
cumulus-client-consensus-aura = { version = "0.18.0", default-features = false }
cumulus-client-consensus-common = { version = "0.18.0", default-features = false }
cumulus-client-consensus-proposer = { version = "0.16.0", default-features = false }
cumulus-client-service = { version = "0.19.0", default-features = false }
cumulus-primitives-core = { version = "0.16.0", default-features = false }
cumulus-primitives-parachain-inherent = { version = "0.16.0", default-features = false }
cumulus-relay-chain-interface = { version = "0.18.0", default-features = false }
docify = { version = "0.2.8" }
frame-benchmarking = { version = "38.0.0", default-features = false }
frame-benchmarking-cli = { version = "43.0.0", default-features = false }
futures = { version = "0.3.30" }
jsonrpsee = { version = "0.24.3" }
log = { version = "0.4.22", default-features = false }
pallet-transaction-payment-rpc = { version = "41.0.0", default-features = false }
polkadot-cli = { version = "19.0.0", default-features = false }
polkadot-primitives = { version = "16.0.0", default-features = false }
prometheus-endpoint = { version = "0.17.0", default-features = false, package = "substrate-prometheus-endpoint" }
sc-basic-authorship = { version = "0.45.0", default-features = false }
sc-chain-spec = { version = "38.0.0", default-features = false }
sc-cli = { version = "0.47.0", default-features = false }
sc-client-api = { version = "37.0.0", default-features = false }
sc-consensus = { version = "0.44.0", default-features = false }
sc-executor = { version = "0.40.1", default-features = false }
sc-network = { version = "0.45.0", default-features = false }
sc-network-sync = { version = "0.44.0", default-features = false }
sc-offchain = { version = "40.0.0", default-features = false }
sc-rpc = { version = "40.0.0", default-features = false }
sc-service = { version = "0.46.0", default-features = false }
sc-sysinfo = { version = "38.0.0", default-features = false }
sc-telemetry = { version = "25.0.0", default-features = false }
sc-tracing = { version = "37.0.1", default-features = false }
sc-transaction-pool = { version = "37.0.0", default-features = false }
sc-transaction-pool-api = { version = "37.0.0", default-features = false }
serde = { version = "1.0.209", default-features = false }
serde_json = { version = "1.0.127", default-features = false }
sp-api = { version = "34.0.0", default-features = false }
sp-block-builder = { version = "34.0.0", default-features = false }
sp-blockchain = { version = "37.0.1", default-features = false }
sp-consensus-aura = { version = "0.40.0", default-features = false }
sp-core = { version = "34.0.0", default-features = false }
sp-genesis-builder = { version = "0.15.1", default-features = false }
sp-io = { version = "38.0.0", default-features = false }
sp-keystore = { version = "0.40.0", default-features = false }
sp-runtime = { version = "39.0.1", default-features = false }
sp-timestamp = { version = "34.0.0", default-features = false }
substrate-frame-rpc-system = { version = "39.0.0", default-features = false }
xcm = { version = "14.2.0", default-features = false, package = "staging-xcm" }
substrate-build-script-utils = { version = "11.0.0", default-features = false }
cumulus-pallet-aura-ext = { version = "0.17.0", default-features = false }
cumulus-pallet-parachain-system = { version = "0.17.0", default-features = false }
cumulus-pallet-session-benchmarking = { version = "19.0.0", default-features = false }
cumulus-pallet-xcm = { version = "0.17.0", default-features = false }
cumulus-pallet-xcmp-queue = { version = "0.17.0", default-features = false }
cumulus-primitives-aura = { version = "0.15.0", default-features = false }
cumulus-primitives-storage-weight-reclaim = { version = "8.0.0", default-features = false }
cumulus-primitives-utility = { version = "0.17.0", default-features = false }
frame-executive = { version = "38.0.0", default-features = false }
frame-metadata-hash-extension = { version = "0.6.0", default-features = false }
frame-support = { version = "38.0.0", default-features = false }
frame-system = { version = "38.0.0", default-features = false }
frame-system-benchmarking = { version = "38.0.0", default-features = false }
frame-system-rpc-runtime-api = { version = "34.0.0", default-features = false }
frame-try-runtime = { version = "0.44.0", default-features = false }
hex-literal = { version = "0.4.1", default-features = false }
pallet-aura = { version = "37.0.0", default-features = false }
pallet-authorship = { version = "38.0.0", default-features = false }
pallet-balances = { version = "39.0.0", default-features = false }
pallet-collator-selection = { version = "19.0.0", default-features = false }
pallet-message-queue = { version = "41.0.0", default-features = false }
pallet-session = { version = "38.0.0", default-features = false }
pallet-sudo = { version = "38.0.0", default-features = false }
pallet-timestamp = { version = "37.0.0", default-features = false }
pallet-transaction-payment = { version = "38.0.0", default-features = false }
pallet-transaction-payment-rpc-runtime-api = { version = "38.0.0", default-features = false }
pallet-xcm = { version = "17.0.0", default-features = false }
parachain-info = { version = "0.17.0", default-features = false, package = "staging-parachain-info" }
parachains-common = { version = "18.0.0", default-features = false }
polkadot-parachain-primitives = { version = "14.0.0", default-features = false }
polkadot-runtime-common = { version = "17.0.0", default-features = false }
scale-info = { version = "2.11.1", default-features = false }
smallvec = { version = "1.11.0", default-features = false }
sp-inherents = { version = "34.0.0", default-features = false }
sp-offchain = { version = "34.0.0", default-features = false }
sp-session = { version = "36.0.0", default-features = false }
sp-transaction-pool = { version = "34.0.0", default-features = false }
sp-version = { version = "37.0.0", default-features = false }
xcm-builder = { version = "17.0.0", default-features = false, package = "staging-xcm-builder" }
xcm-executor = { version = "17.0.0", default-features = false, package = "staging-xcm-executor" }
substrate-wasm-builder = { version = "24.0.1", default-features = false }

[workspace.lints.rust]
suspicious_double_ref_op = { level = "allow", priority = 2 }
# `substrate_runtime` is a common `cfg` condition name used in the repo.
unexpected_cfgs = { level = "warn", check-cfg = [
  'cfg(build_opt_level, values("3"))',
  'cfg(build_profile, values("debug", "release"))',
  'cfg(enable_alloc_error_handler)',
  'cfg(fuzzing)',
  'cfg(substrate_runtime)',
] }

[workspace.lints.clippy]
all = { level = "allow", priority = 0 }
bind_instead_of_map = { level = "allow", priority = 2 }              # stylistic
borrowed-box = { level = "allow", priority = 2 }                     # Reasonable to fix this one
complexity = { level = "warn", priority = 1 }
correctness = { level = "warn", priority = 1 }
default_constructed_unit_structs = { level = "allow", priority = 2 } # stylistic
derivable_impls = { level = "allow", priority = 2 }                  # false positives
eq_op = { level = "allow", priority = 2 }                            # In tests we test equality.
erasing_op = { level = "allow", priority = 2 }                       # E.g. 0 * DOLLARS
extra-unused-type-parameters = { level = "allow", priority = 2 }     # stylistic
identity-op = { level = "allow", priority = 2 }                      # One case where we do 0 +
if-same-then-else = { level = "allow", priority = 2 }
needless-lifetimes = { level = "allow", priority = 2 }               # generated code
needless_option_as_deref = { level = "allow", priority = 2 }         # false positives
nonminimal-bool = { level = "allow", priority = 2 }                  # maybe
option-map-unit-fn = { level = "allow", priority = 2 }               # stylistic
stable_sort_primitive = { level = "allow", priority = 2 }            # prefer stable sort
too-many-arguments = { level = "allow", priority = 2 }               # (Turning this on would lead to)
type_complexity = { level = "allow", priority = 2 }                  # raison d'etre
unit_arg = { level = "allow", priority = 2 }                         # stylistic
unnecessary_cast = { level = "allow", priority = 2 }                 # Types may change
useless_conversion = { level = "allow", priority = 2 }               # Types may change
while_immutable_condition = { level = "allow", priority = 2 }        # false positives
zero-prefixed-literal = { level = "allow", priority = 2 }            # 00_1000_000
