# Polkadot

> Polkadot is an open-source, multichain network protocol that facilitates the secure communication and interoperability of various blockchains. It offers a scalable, sharded architecture that enables the creation of purpose-built chains and provides the necessary tooling for building decentralized applications (dApps) and smart contracts.

## Docs

- [Develop](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/index.md): Explore and learn how to build in the Polkadot ecosystem, from a custom parachain to smart contracts, supported by robust integrations and developer tools.
- [Interoperability](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/index.md): Learn how Polkadot enables blockchain interoperability through Cross-Consensus Messaging (XCM), powering secure cross-chain communication.
- [Introduction to XCM](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/intro-to-xcm.md): Unlock blockchain interoperability with XCM — Polkadot's Cross-Consensus Messaging format for cross-chain interactions.
- [Send XCM Messages](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/send-messages.md): Send cross-chain messages using XCM, Polkadot's Cross-Consensus Messaging format, designed to support secure communication between chains.
- [Testing and Debugging](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/test-and-debug.md): Learn how to test and debug cross-chain communication via the XCM Emulator to ensure interoperability and reliable execution.
- [XCM Versions](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/versions/index.md): Explore the different versions of XCM, understand version-specific features and capabilities, and find migration guides for upgrading between versions.
- [Asset claimer](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/versions/v5/asset-claimer.md): Learn how the AssetClaimer hint improves trapped asset recovery in XCM V5, enabling automated recovery and reducing the need for governance intervention.
- [Fees](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/versions/v5/fees.md): Explore the key differences in fee handling between XCM V4 and V5, including new payment mechanisms, delivery fees, and improved predictability for cross-chain transactions.
- [XCMv5](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/versions/v5/index.md): Explore XCM version 5 features, including new instructions, improved fee handling, and enhanced cross-chain communication capabilities for modern applications.
- [Migration Guide (XCM V4 → XCM V5)](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/versions/v5/migration-guide.md): Step-by-step guide for migrating from XCM V4 to V5, covering breaking changes, new features, and best practices for upgrading your cross-chain applications.
- [Transact](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/versions/v5/transact.md): Explore the key changes to the Transact instruction in XCM V5, including automatic weight calculation, improved reliability, and simplified cross-chain execution patterns.
- [Transfers](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/versions/v5/transfers.md): Explore the key differences in transfer handling between XCM V4 and V5, including unified transfer instructions, multiple asset types, and improved cross-chain transfer capabilities.
- [Writing XCM Programs](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/versions/v5/writing-xcm-programs.md): Learn how to write XCM programs in version 5, including new execution patterns, instruction syntax, and best practices for cross-chain communication.
- [XCM Channels](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/xcm-channels.md): Learn how Polkadot's cross-consensus messaging (XCM) channels connect parachains, facilitating communication and blockchain interaction.
- [XCM Config](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/xcm-config.md): Learn how the XCM Executor configuration works for your custom Polkadot SDK-based runtime with detailed guidance and references.
- [Claiming Trapped Assets](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/xcm-guides/from-apps/claiming-trapped-assets.md): How to claim assets that become trapped on-chain due to an XCM execution failure. This guide details the process and required steps.
- [Fees](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/xcm-guides/from-apps/fees.md): Learn how XCM fees work. Execution and delivery fees, how to estimate and pay them across chains, and which assets can be used for fee payment.
- [From Apps](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/xcm-guides/from-apps/index.md): Learn how to implement XCM functionality in your applications, including asset transfers, fee management, and cross-chain transactions.
- [Transact](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/xcm-guides/from-apps/transact.md): Learn how to execute arbitrary calls on remote chains using the Transact instruction, enabling cross-chain function execution and remote pallet interactions.
- [Transfers](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/xcm-guides/from-apps/transfers.md): Learn how to perform cross-chain asset transfers using XCM, including teleport, reserve transfers, and handling different asset types across parachains.
- [XCM Guides](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/xcm-guides/index.md): Comprehensive guides for implementing XCM functionality in applications and understanding cross-chain interactions.
- [XCM Runtime APIs](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/interoperability/xcm-runtime-apis.md): Learn about XCM Runtime APIs in Polkadot for cross-chain communication. Explore the APIs to simulate and test XCM messages before execution on the network.
- [Networks](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/networks.md): Explore the Polkadot ecosystem networks and learn the unique purposes of each, tailored for blockchain innovation, testing, and enterprise-grade solutions.
- [Add a Pallet to the Runtime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/customize-parachain/add-existing-pallets.md): Learn how to include and configure pallets in a Polkadot SDK-based runtime, from adding dependencies to implementing necessary traits.
- [Add Multiple Pallet Instances](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/customize-parachain/add-pallet-instances.md): Learn how to implement multiple instances of the same pallet in your Polkadot SDK-based runtime to create and interact with modular blockchain components.
- [Add Smart Contract Functionality](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/customize-parachain/add-smart-contract-functionality.md): Add smart contract capabilities to your Polkadot SDK-based blockchain. Explore EVM and Wasm integration for enhanced chain functionality.
- [Customize Your Parachain](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/customize-parachain/index.md): Learn to build a custom parachain with Polkadot SDK's FRAME framework, which includes pallet development, testing, smart contracts, and runtime customization.
- [Make a Custom Pallet](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/customize-parachain/make-custom-pallet.md): Learn how to create custom pallets using FRAME, allowing for flexible, modular, and scalable blockchain development. Follow the step-by-step guide.
- [Overview of FRAME](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/customize-parachain/overview.md): Learn how Polkadot SDK’s FRAME framework simplifies blockchain development with modular pallets and support libraries for efficient runtime design.
- [Build a deterministic runtime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/deployment/build-deterministic-runtime.md): Explains how to use the Polkadot SDK runtime toolbox and Docker to build deterministic Wasm binaries for Polkadot SDK-based chains.
- [Coretime Renewal](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/deployment/coretime-renewal.md): Learn how to renew coretime manually or automatically to ensure uninterrupted parachain operation with predictable pricing and minimal risk.
- [Generate Chain Specs](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/deployment/generate-chain-specs.md): Describes the role of the chain specification in a network, how to specify its parameters when starting a node, and how to customize and distribute it.
- [Deployment](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/deployment/index.md): Learn how to prepare your blockchain for deployment using the Polkadot SDK, including building deterministic Wasm runtimes and generating chain specifications.
- [Manage Coretime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/deployment/manage-coretime.md): Learn to manage bulk coretime regions through transfer, partition, interlace, assign, and pool operations for optimal resource allocation.
- [Obtain Coretime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/deployment/obtain-coretime.md): Learn how to obtain and manage coretime for your Polkadot parachain. Explore bulk and on-demand options, prerequisites, and initial setup.
- [Parachains](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/index.md): Learn how to build, deploy, and maintain your parachain with the Polkadot SDK, from initial setup through customization, testing, runtime upgrades, and network operations.
- [Install Polkadot SDK Dependencies](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/install-polkadot-sdk.md): Install everything you need to begin working with Substrated-based blockchains and the Polkadot SDK, the framework for building blockchains.
- [Introduction to Polkadot SDK](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/intro-polkadot-sdk.md): Learn about the Polkadot SDK, a robust developer toolkit for building custom blockchains. Explore its components and how it powers the Polkadot protocol.
- [Configure Asynchronous Backing](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/maintenance/configure-asynchronous-backing.md): Learn how to increase the efficiency and throughput of your parachain by configuring it to leverage asynchronous backing.
- [Maintenance](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/maintenance/index.md): Learn how to maintain Polkadot SDK-based networks, covering runtime monitoring, upgrades, and storage migrations for optimal blockchain performance.
- [Runtime Metrics and Monitoring](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/maintenance/runtime-metrics-monitoring.md): Learn how to monitor and visualize node performance in Polkadot SDK-based networks using telemetry, Prometheus, and Grafana for efficient runtime monitoring.
- [Runtime Upgrades](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/maintenance/runtime-upgrades.md): This page covers how runtime versioning and storage migration support forkless upgrades for Polkadot SDK-based networks and how they factor into chain upgrades.
- [Storage Migrations](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/maintenance/storage-migrations.md): Ensure smooth runtime upgrades with storage migrations, update data formats, and prevent errors. Learn when and how to implement migrations efficiently.
- [Unlock a Parachain](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/maintenance/unlock-parachain.md): Learn how to unlock your parachain. This step-by-step guide covers verifying lock status, preparing calls, and executing the unlock process.
- [Benchmarking FRAME Pallets](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/testing/benchmarking.md): Learn how to use FRAME's benchmarking framework to measure extrinsic execution costs and provide accurate weights for on-chain computations.
- [Testing Your Polkadot SDK-Based Blockchain](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/testing/index.md): Explore comprehensive testing strategies for Polkadot SDK-based blockchains, from setting up test environments to verifying runtime and pallet interactions.
- [Mock Runtime for Pallet Testing](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/testing/mock-runtime.md): Learn to create a mock environment in the Polkadot SDK for testing intra-pallet functionality and inter-pallet interactions seamlessly.
- [Pallet Testing](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/parachains/testing/pallet-testing.md): Learn how to efficiently test pallets in the Polkadot SDK, ensuring the reliability and security of your pallets operations.
- [Block Explorers](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/block-explorers/index.md): Access PolkaVM explorers like Subscan, BlockScout, and Routescan to track transactions, analyze contracts, and view on-chain data from smart contracts.
- [Connect to Kusama](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/connect-to-kusama.md): Explore how to connect to Kusama Hub for developing and testing smart contracts in a live environment with real monetary value.
- [Connect to Polkadot](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/connect-to-polkadot.md): Explore how to connect to Polkadot Hub, configure your wallet, and obtain test tokens for developing and testing smart contracts.
- [Use Foundry with Polkadot Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/dev-environments/foundry.md): Learn to install, configure, and use foundry-polkadot for smart contract development on Polkadot with PolkaVM bytecode compilation.
- [Use Hardhat with Polkadot Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/dev-environments/hardhat.md): Learn how to create, compile, test, and deploy smart contracts on Polkadot Hub using Hardhat, a powerful development environment for blockchain developers.
- [Dev Environments](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/dev-environments/index.md): Explore development environments for building smart contracts on Polkadot, including frameworks and tools to enhance your development workflow.
- [Use the Polkadot Remix IDE](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/dev-environments/remix.md): Explore the smart contract development and deployment process on Asset Hub using Remix IDE, a visual IDE for blockchain developers.
- [Polkadot Hub Smart Contract FAQs](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/faqs.md): Find answers to common questions about smart contract development, deployment, and compatibility in the Polkadot Hub ecosystem.
- [Smart Contracts](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/index.md): Learn about smart contract development in Polkadot, including ink! for Wasm contracts and Solidity support via EVM and PolkaVM on Polkadot Hub and parachains.
- [JSON-RPC APIs](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/json-rpc-apis.md): JSON-RPC APIs guide for Polkadot Hub, covering supported methods, parameters, and examples for interacting with the chain.
- [Deploy Contracts to Polkadot Hub with Ethers.js](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/libraries/ethers-js.md): Learn how to interact with Polkadot Hub using Ethers.js, from compiling and deploying Solidity contracts to interacting with deployed smart contracts.
- [Libraries](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/libraries/index.md): Compare libraries for interacting with smart contracts on Polkadot, including Ethers.js, Web3.js, viem, Wagmi, Web3.py, and their key differences.
- [viem for Polkadot Hub Smart Contracts](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/libraries/viem.md): This guide covers deploying and interacting with contracts on Polkadot Hub using viem, a TypeScript library for Ethereum-compatible chains.
- [Wagmi for Polkadot Hub Smart Contracts](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/libraries/wagmi.md): Learn how to use Wagmi React Hooks to fetch and interact with smart contracts on Polkadot Hub for seamless dApp integration.
- [Web3.js](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/libraries/web3-js.md): Learn how to interact with Polkadot Hub using Web3.js, deploying Solidity contracts, and interacting with deployed smart contracts.
- [Web3.py](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/libraries/web3-py.md): Learn how to interact with Polkadot Hub using the Web3 python library, deploying Solidity contracts, and interacting with deployed smart contracts.
- [Local Development Node](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/local-development-node.md): Follow this step-by-step guide to install a Revive Dev node and ETH-RPC adapter for smart contract development in a local environment.
- [Smart Contracts Overview](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/overview.md): Learn about smart contract development capabilities in the Polkadot ecosystem, either by leveraging Polkadot Hub or other alternatives.
- [Advanced Functionalities via Precompiles](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/precompiles/index.md): Explores how Polkadot integrates precompiles to run essential functions natively, improving the speed and efficiency of smart contracts on the Hub.
- [Interact with Precompiles](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/precompiles/interact-with-precompiles.md): Learn how to interact with Polkadot Hub’s precompiles from Solidity to access native, low-level functions like hashing, pairing, EC ops, etc.
- [Interact with the XCM Precompile](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/precompiles/xcm-precompile.md): Learn how to use the XCM precompile to send cross-chain messages, execute XCM instructions, and estimate costs from your smart contracts.
- [Wallets for Polkadot Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/smart-contracts/wallets.md): Comprehensive guide to connecting and managing wallets for Polkadot Hub, covering step-by-step instructions for interacting with the ecosystem.
- [Dedot](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/api-libraries/dedot.md): Dedot is a next-gen JavaScript client for Polkadot and Polkadot SDK-based blockchains, offering lightweight, tree-shakable APIs with strong TypeScript support.
- [API Libraries](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/api-libraries/index.md): Dive into APIs for interacting with the Polkadot network, including Polkadot-API, Polkadot.js, Python Substrate Interface, and Sidecar REST services.
- [Polkadot-API](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/api-libraries/papi.md): Polkadot-API (PAPI) is a modular, composable library set designed for efficient interaction with Polkadot chains, prioritizing a "light-client first" approach.
- [Polkadot.js API](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/api-libraries/polkadot-js-api.md): Interact with Polkadot SDK-based chains easily using the Polkadot.js API. Query chain data, submit transactions, and more via JavaScript or Typescript.
- [Python Substrate Interface](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/api-libraries/py-substrate-interface.md): Learn how to connect to Polkadot SDK-based nodes, query data, submit transactions, and manage blockchain interactions using the Python Substrate Interface.
- [Sidecar Rest API](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/api-libraries/sidecar.md): Learn about Substrate API Sidecar, a REST service that provides endpoints for interacting with Polkadot SDK-based chains and simplifies blockchain interactions.
- [Subxt Rust API](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/api-libraries/subxt.md): Subxt is a Rust library for type-safe interaction with Polkadot SDK blockchains, enabling transactions, state queries, runtime API access, and more.
- [Toolkit](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/index.md): Learn about Polkadot's core development toolkit, from blockchain construction tools to API libraries and cross-chain messaging capabilities.
- [Integrations](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/integrations/index.md): Explore key Polkadot integrations like indexers, oracles, decentralized storage, and wallets to enhance your dApps and access external data.
- [Indexers](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/integrations/indexers.md): Discover blockchain indexers. Enhance data access, enable fast and complex queries, and optimize blockchain data for seamless app performance.
- [Oracles](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/integrations/oracles.md): Learn about blockchain oracles, the essential bridges connecting blockchains with real-world data for decentralized applications in the Polkadot ecosystem.
- [Storage](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/integrations/storage.md): Explore decentralized storage solutions for your Polkadot dApp. Discover key integrations, such as Crust and IPFS, for robust, censorship-resistant data storage.
- [Transaction Construction](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/integrations/transaction-construction.md): Understand how to construct, sign, and broadcast transactions in the Polkadot ecosystem using various tools and libraries.
- [Wallets](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/integrations/wallets.md): Explore blockchain wallets. Securely manage digital assets with hot wallets for online access or cold wallets for offline, enhanced security.
- [Asset Transfer API](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/interoperability/asset-transfer-api/index.md): Asset Transfer API is a library that simplifies the transfer of assets for Polkadot SDK-based chains. It provides methods for cross-chain and local transfers.
- [Asset Transfer API](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/interoperability/asset-transfer-api/overview.md): Asset Transfer API is a library that simplifies the transfer of assets for Polkadot SDK-based chains. It provides methods for cross-chain and local transfers.
- [Asset Transfer API Reference](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/interoperability/asset-transfer-api/reference.md): Explore the Asset Transfer API Reference for comprehensive details on methods, data types, and functionalities. Essential for cross-chain asset transfers.
- [Interoperability](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/interoperability/index.md): Explore Polkadot's XCM tooling ecosystem, featuring the Asset Transfer API and other utilities for implementing cross-chain messaging and transfers.
- [ParaSpell XCM SDK](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/interoperability/paraspell-xcm-sdk/index.md): A powerful open-source library that simplifies XCM integration, enabling developers to easily build interoperable dApps on Polkadot.
- [Teleport Tokens from Asset Hub to Bridge Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/interoperability/paraspell-xcm-sdk/teleport-from-asset-hub-to-bridge-hub.md): A step-by-step guide to building, verifying, and executing a teleport from Asset Hub to Bridge Hub using the ParaSpell XCM SDK.
- [XCM Tools](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/interoperability/xcm-tools.md): Explore essential XCM tools across Polkadot, crafted to enhance cross-chain functionality and integration within the ecosystem.
- [E2E Testing on Polkadot SDK Chains](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/parachains/e2e-testing/index.md): Discover a suite of tools for E2E testing on Polkadot SDK-based blockchains, including configuration management, automation, and debugging utilities.
- [E2E Testing with Moonwall](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/parachains/e2e-testing/moonwall.md): Enhance blockchain end-to-end testing with Moonwall's standardized environment setup, comprehensive configuration management, and simple network interactions.
- [Get Started](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/parachains/fork-chains/chopsticks/get-started.md): Simplify Polkadot SDK development with Chopsticks. Learn essential features, how to install Chopsticks, and how to configure local blockchain forks.
- [Chopsticks](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/parachains/fork-chains/chopsticks/index.md): Learn how to install, configure, and use Chopsticks for debugging and forking Polkadot SDK-based networks in a local development environment.
- [Fork Chains for Testing](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/parachains/fork-chains/index.md): Explore tools for forking live blockchain networks, enabling you to replicate real-world conditions in a local environment for accurate testing and debugging.
- [Parachains](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/parachains/index.md): Discover essential parachain development resources for building in the Polkadot ecosystem, highlighting tools to streamline your development process.
- [Untitled](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/parachains/light-clients.md): No description available.
- [Polkadot Omni Node](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/parachains/polkadot-omni-node.md): Run parachain nodes easily with the polkadot-omni-node, a white-labeled binary that can run parachain nodes using a single pre-built solution.
- [Quickstart Parachain Development](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/parachains/quickstart/index.md): Bootstrap your development environment, scaffold template-based projects, deploy local networks, and simplify your workflow with tools for parachain developers.
- [Quickstart Parachain Development with Pop CLI](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/parachains/quickstart/pop-cli.md): Quickly bootstrap parachain projects, scaffold templates, deploy local networks, and streamline development workflows using Pop CLI.
- [Remote Proxies](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/parachains/remote-proxies.md): Remote proxies enable cross-chain proxy functionality within the Polkadot ecosystem, allowing proxy accounts defined on one chain to execute transactions on different chains through cryptographic storage proofs.
- [RPC Calls to Polkadot SDK chains.](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/parachains/rpc-calls.md): Learn how to interact with Polkadot SDK-based chains using RPC calls. This guide covers essential methods and usage via curl.
- [Spawn Networks for Testing](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/parachains/spawn-chains/index.md): Discover tools that enable you to spawn blockchains for testing, allowing for debugging, and validation of your blockchain setups in a controlled environment.
- [Get Started](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/parachains/spawn-chains/zombienet/get-started.md): Quickly install and configure Zombienet to deploy and test Polkadot-based blockchain networks with this comprehensive getting-started guide.
- [Zombienet](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/parachains/spawn-chains/zombienet/index.md): Learn how to install, configure, and use Zombienet for testing and simulating Polkadot SDK-based networks in a local development environment.
- [Write Tests](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/develop/toolkit/parachains/spawn-chains/zombienet/write-tests.md): Write and execute tests for blockchain networks with Zombienet's DSL. Learn to evaluate metrics, logs, events, and more for robust validation.
- [AI Ready Docs](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/get-support/ai-ready-docs.md): Download LLM-optimized files of the Polkadot documentation, including full content and category-specific resources for AI agents.
- [Subscribe to Updates](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/get-support/explore-resources.md): Find Polkadot developer resources, tutorials, forums, governance proposals, and community platforms like StackExchange, Reddit, and YouTube.
- [Get in Touch](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/get-support/get-in-touch.md): Developer support for Polkadot via Telegram, Matrix, and Discord. Get help with parachains, smart contracts, nodes, and ecosystem tools.
- [Support](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/get-support/index.md): Start here to get developer support for Polkadot. Connect with the team, find help, and explore resources beyond the documentation.
- [Untitled](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/images/README.md): No description available.
- [Infrastructure](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/index.md): Learn how to set up and manage various types of Polkadot infrastructure, from running nodes to operating validators and contributing to the network.
- [Running a Node](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/running-a-node/index.md): Learn how to run and connect to a Polkadot node, including setup, configuration, and best practices for connectivity and security.
- [Set Up a Bootnode](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/running-a-node/setup-bootnode.md): Learn how to configure and run a bootnode for Polkadot, including P2P, WS, and secure WSS connections with network key management and proxies.
- [Set Up a Node](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/running-a-node/setup-full-node.md): Learn how to install, configure, and run Polkadot nodes, including setting up different node types and connecting to the network.
- [Set Up Secure WebSocket](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/running-a-node/setup-secure-wss.md): Instructions on enabling SSL for your node and setting up a secure WebSocket proxy server using nginx for remote connections.
- [Running a Validator](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/running-a-validator/index.md): Learn the requirements for setting up a Polkadot validator node, along with detailed steps on how to install, run, upgrade, and maintain the node.
- [Onboarding and Offboarding](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/running-a-validator/onboarding-and-offboarding/index.md): Get familiar with onboarding and offboarding a Polkadot validator node, including setup, bond and key management, and activation and deactivation processes.
- [Validator Key Management](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/running-a-validator/onboarding-and-offboarding/key-management.md): Learn how to generate and manage validator keys, including session keys for consensus participation and node keys for maintaining a stable network identity.
- [Set Up a Validator](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/running-a-validator/onboarding-and-offboarding/set-up-validator.md): Set up a Polkadot validator node to secure the network and earn staking rewards. Follow this step-by-step guide to install, configure, and manage your node.
- [Start Validating](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/running-a-validator/onboarding-and-offboarding/start-validating.md): Learn how to start validating on Polkadot by choosing a network, syncing your node, bonding DOT tokens, and activating your validator.
- [Stop Validating](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/running-a-validator/onboarding-and-offboarding/stop-validating.md): Learn to safely stop validating on Polkadot, including chilling, unbonding tokens, and purging validator keys.
- [General Management](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/running-a-validator/operational-tasks/general-management.md): Optimize your Polkadot validator setup with advanced configuration techniques. Learn how to boost performance, enhance security, and ensure seamless operations.
- [Operational Tasks](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/running-a-validator/operational-tasks/index.md): Learn how to manage your Polkadot validator node, including monitoring performance, running a backup validator for maintenance, and rotating keys.
- [Pause Validating](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/running-a-validator/operational-tasks/pause-validating.md): Learn how to temporarily pause staking activity in Polkadot using the chill extrinsic, with guidance for validators and nominators.
- [Upgrade a Validator Node](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/running-a-validator/operational-tasks/upgrade-your-node.md): Guide to seamlessly upgrading your Polkadot validator node, managing session keys, and executing server maintenance while avoiding downtime and slashing risks.
- [Validator Requirements](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/running-a-validator/requirements.md): Explore the technical and system requirements for running a Polkadot validator, including setup, hardware, staking prerequisites, and security best practices.
- [Staking Mechanics](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/staking-mechanics/index.md): Explore the staking mechanics in Polkadot, focusing on how they relate to validators, including offenses and slashes, as well as reward payouts.
- [Offenses and Slashes](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/staking-mechanics/offenses-and-slashes.md): Learn about how Polkadot discourages validator misconduct via an offenses and slashing system, including details on offenses and their consequences.
- [Rewards Payout](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/infrastructure/staking-mechanics/rewards-payout.md): Learn how validator rewards work on the network, including era points, payout distribution, running multiple validators, and nominator payments.
- [Architecture](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/architecture/index.md): Explore Polkadot's architecture, including the relay chain, parachains, and system chains, and discover the role each component plays in the broader ecosystem.
- [Parachain Consensus](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/architecture/parachains/consensus.md): Understand how the blocks authored by parachain collators are secured by the relay chain validators and how the parachain transactions achieve finality.
- [Parachains](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/architecture/parachains/index.md): Explore how parachains achieve consensus and leverage shared security through Polkadot’s relay chain and validators within the network’s architecture.
- [Overview](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/architecture/parachains/overview.md): Learn about the role, functionality, and implementation of parachains as a developer in the wider Polkadot architecture.
- [Agile Coretime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/architecture/polkadot-chain/agile-coretime.md): Explore the efficient scheduling mechanisms to access Polkadot cores to produce blockspace continuously or on-demand.
- [Elastic Scaling](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/architecture/polkadot-chain/elastic-scaling.md): Learn how elastic scaling in Polkadot boosts parachain throughput, reduces latency, and supports dynamic, cost-efficient resource allocation.
- [The Polkadot Relay Chain](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/architecture/polkadot-chain/index.md): Explore the relay chain’s role in Polkadot, providing shared security, consensus, and enabling agile coretime for parachains to purchase blockspace on-demand.
- [Overview of the Polkadot Relay Chain](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/architecture/polkadot-chain/overview.md): Explore Polkadot's core architecture, including its multi-chain vision, shared security, and the DOT token's governance and staking roles.
- [Proof of Stake Consensus](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/architecture/polkadot-chain/pos-consensus.md): Explore Polkadot's consensus protocols for secure, scalable, and decentralized network operation, including NPoS, BABE, GRANDPA, and BEEFY.
- [Asset Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/architecture/system-chains/asset-hub.md): Learn about Asset Hub in Polkadot, managing on-chain assets, foreign asset integration, and using XCM for cross-chain asset transfers.
- [Bridge Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/architecture/system-chains/bridge-hub.md): Learn about the Bridge Hub system parachain, a parachain that facilitates the interactions from Polkadot to the rest of Web3.
- [Collectives Chain](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/architecture/system-chains/collectives.md): Learn how the Collectives chain provides infrastructure for governance organizations, enabling decentralized network stewardship and decision-making.
- [Coretime Chain](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/architecture/system-chains/coretime.md): Learn about the role of the Coretime system parachain, which facilitates the sale, purchase, assignment, and mechanisms of bulk coretime.
- [System Chains](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/architecture/system-chains/index.md): Discover the unique role and functionality each of Polkadot’s system chains, including the Asset Hub, Bridge Hub, and Coretime chain, provides to the ecosystem.
- [Overview of Polkadot's System Chains](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/architecture/system-chains/overview.md): Discover how system parachains enhance Polkadot's scalability and performance by offloading tasks like governance, asset management, and bridging from the relay chain.
- [People Chain](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/architecture/system-chains/people.md): Learn how People chain secures decentralized identity management, empowering users to control and verify digital identities without central authorities.
- [Glossary](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/glossary.md): Glossary of terms used within the Polkadot ecosystem, Polkadot SDK, its subsequent libraries, and other relevant Web3 terminology.
- [Learn About the Polkadot Protocol](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/index.md): Gain a comprehensive understanding of Polkadot through this technical overview, exploring its architecture, fundamental concepts, and essential components.
- [On-Chain Governance](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/onchain-governance/index.md): Explore Polkadot's decentralized on-chain governance system, OpenGov, including how it works, the proposal process, and key info for developers.
- [Origins and Tracks](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/onchain-governance/origins-tracks.md): Explore Polkadot's OpenGov origins and tracks system, defining privilege levels, decision processes, and tailored pathways for network proposals.
- [On-Chain Governance Overview](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/onchain-governance/overview.md): Discover Polkadot’s cutting-edge OpenGov system, enabling transparent, decentralized decision-making through direct democracy and flexible governance tracks.
- [Polkadot SDK Accounts](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/parachain-basics/accounts.md): Learn about account structures, balances, and address formats in the Polkadot SDK, including how to manage lifecycle, references, and balances.
- [Blocks](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/parachain-basics/blocks-transactions-fees/blocks.md): Understand how blocks are produced, validated, and imported in Polkadot SDK-based blockchains, covering initialization, finalization, and authoring processes.
- [Transactions Weights and Fees](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/parachain-basics/blocks-transactions-fees/fees.md): Overview of transaction weights and fees in Polkadot SDK chains, detailing how fees are calculated using a defined formula and runtime specifics.
- [Blocks, Transactions, and Fees](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/parachain-basics/blocks-transactions-fees/index.md): Dive into the structure, processing, and lifecycle of blocks and transactions in Polkadot, and learn how fees are calculated and applied.
- [Transactions](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/parachain-basics/blocks-transactions-fees/transactions.md): Learn how to construct, submit, and validate transactions in the Polkadot SDK, covering signed, unsigned, and inherent types of transactions.
- [Chain Data](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/parachain-basics/chain-data.md): Learn how to expose and utilize chain data for blockchain applications. Discover runtime metadata, RPC APIs, and tools for efficient development.
- [Cryptography](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/parachain-basics/cryptography.md): A concise guide to cryptography in blockchain, covering hash functions, encryption types, digital signatures, and elliptic curve applications.
- [Data Encoding](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/parachain-basics/data-encoding.md): SCALE codec enables fast, efficient data encoding, ideal for resource-constrained environments like Wasm, supporting custom types and compact encoding.
- [Parachain Basics](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/parachain-basics/index.md): Discover Polkadot’s technical foundations, from blockchain basics and cryptography to network features like interoperability and randomness.
- [Interoperability](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/parachain-basics/interoperability.md): Explore the importance of interoperability in the Polkadot ecosystem, covering XCM, bridges, and cross-chain communication.
- [Networks](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/parachain-basics/networks.md): Explore Polkadot's testing and production networks, including Westend, Kusama, and Paseo, for efficient development, deployment, and testing.
- [Node and Runtime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/parachain-basics/node-and-runtime.md): Learn how Polkadot SDK-based nodes function, how the client and runtime are separated, and how they communicate using SCALE-encoded data.
- [Randomness](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/parachain-basics/randomness.md): Explore the importance of randomness in PoS blockchains, focusing on Polkadot’s VRF-based approach to ensure fairness and security in validator selection.
- [Accounts in Asset Hub Smart Contracts](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/smart-contract-basics/accounts.md): Bridges Ethereum's 20-byte addresses with Polkadot's 32-byte accounts, enabling seamless interaction while maintaining compatibility with Ethereum tooling.
- [Transactions and Fees on Asset Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/smart-contract-basics/blocks-transactions-fees.md): Explore how Asset Hub smart contracts handle blocks, transactions, and fees with EVM compatibility, supporting various Ethereum transaction types.
- [EVM vs PolkaVM](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/smart-contract-basics/evm-vs-polkavm.md): Compares EVM and PolkaVM, highlighting key architectural differences, gas models, memory management, and account handling while ensuring Solidity compatibility.
- [Smart Contract Basics](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/smart-contract-basics/index.md): Learn the fundamental concepts of smart contracts on Polkadot, including PolkaVM, account management, networks, and transaction mechanics.
- [Networks for Polkadot Hub Smart Contracts](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/smart-contract-basics/networks.md): Explore the available networks for smart contract development on Polkadot Hub, including Westend Hub, Kusama Hub, and Polkadot Hub.
- [Smart Contracts Basics Overview](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/smart-contract-basics/overview.md): Learn how developers can build smart contracts on Polkadot by leveraging either Wasm/ink! or EVM contracts across many parachains.
- [PolkaVM Design](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/polkadot-protocol/smart-contract-basics/polkavm-design.md): Discover PolkaVM, a high-performance smart contract VM for Polkadot, enabling Ethereum compatibility via pallet_revive, Solidity support & optimized execution.
- [Decentralized Application Tutorials](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/dapps/index.md): Explore step-by-step tutorials for exploring the world of building decentralized applications using the toolkits that Polkadot provides.
- [PAPI Account Watcher Tutorial](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/dapps/remark-tutorial.md): Build a CLI app that listens to on-chain events using the Polkadot API and responds to specific messages for a given account.
- [Tutorials](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/index.md): Explore step-by-step tutorials for building in Polkadot, from parachain deployment and testing to cross-chain asset creation and XCM channel management.
- [Interoperability Tutorials](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/interoperability/index.md): Explore tutorials on interoperability for Polkadot SDK-based blockchains, covering cross-chain communication and integration techniques.
- [Replay and Dry Run XCMs](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/interoperability/replay-and-dry-run-xcms.md): Replay and dry-run XCMs using Chopsticks with full logging enabled. Diagnose issues, trace message flow, and debug complex cross-chain interactions.
- [Tutorials for Managing XCM Channels](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/interoperability/xcm-channels/index.md): Learn step-by-step how to establish unidirectional and bidirectional HRMP channels between parachains and system parachains using XCM.
- [Opening HRMP Channels Between Parachains](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/interoperability/xcm-channels/para-to-para.md): Learn how to open HRMP channels between parachains on Polkadot. Discover the step-by-step process for establishing uni- and bidirectional communication.
- [Opening HRMP Channels with System Parachains](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/interoperability/xcm-channels/para-to-system.md): Learn how to open HRMP channels with Polkadot system parachains. Discover the process for establishing bi-directional communication using a single XCM message.
- [XCM Fee Estimation](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/interoperability/xcm-fee-estimation.md): This tutorial demonstrates how to estimate the fees for teleporting assets from the Paseo Asset Hub parachain to the Paseo Bridge Hub chain.
- [XCM Transfers from Relay Chain to Parachain](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/interoperability/xcm-transfers/from-relaychain-to-parachain.md): Learn how to perform a reserve-backed asset transfer between a relay chain and a parachain using XCM for cross-chain interoperability.
- [XCM Transfers](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/interoperability/xcm-transfers/index.md): Explore tutorials on performing transfers between different consensus systems using XCM technology to enable cross-chain interoperability.
- [Fast Track a Governance Proposal](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/onchain-governance/fast-track-gov-proposal.md): Learn how to fast-track governance proposals in Polkadot's OpenGov using Chopsticks. Simulate, test, and execute proposals confidently.
- [On-Chain Governance Tutorials](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/onchain-governance/index.md): Learn how to utilize Polkadot OpenGov with step-by-step tutorials on on-chain governance, including proposals, referenda, delegation, and voting processes.
- [Polkadot SDK Tutorials](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/index.md): Explore detailed, step-by-step tutorials designed to help you gain hands-on experience building custom solutions with the Polkadot SDK.
- [Parachain Tutorials](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/parachains/index.md): This collection of tutorials will guide you step by step, from setting up your first local chain to deploying and customizing a fully operational parachain.
- [Add Pallets to the Runtime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/parachains/zero-to-hero/add-pallets-to-runtime.md): Add pallets to your runtime for custom functionality. Learn to configure and integrate pallets in Polkadot SDK-based blockchains.
- [Build a Custom Pallet](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/parachains/zero-to-hero/build-custom-pallet.md): Learn how to build a custom pallet for Polkadot SDK-based blockchains with this step-by-step guide. Create and configure a simple counter pallet from scratch.
- [Deploy on Paseo TestNet](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/parachains/zero-to-hero/deploy-to-testnet.md): This guide walks you through the journey of deploying your Polkadot SDK blockchain on Paseo, detailing each step to a successful TestNet deployment.
- [Zero To Hero Parachain Tutorial Series](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/parachains/zero-to-hero/index.md): A comprehensive guide for developers to build, test, and deploy custom pallets and runtimes, leveraging the full potential of the Polkadot SDK.
- [Obtain Coretime](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/parachains/zero-to-hero/obtain-coretime.md): Learn how to obtain coretime for block production with this guide, covering both on-demand and bulk options for smooth operations.
- [Pallet Benchmarking](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/parachains/zero-to-hero/pallet-benchmarking.md): Learn how to benchmark Polkadot SDK-based pallets, assigning precise weights to extrinsics for accurate fee calculation and runtime optimization.
- [Pallet Unit Testing](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/parachains/zero-to-hero/pallet-unit-testing.md): Discover how to create thorough unit tests for pallets built with the Polkadot SDK, using a custom pallet as a practical example.
- [Runtime Upgrades](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/parachains/zero-to-hero/runtime-upgrade.md): Learn how to safely perform runtime upgrades for your Polkadot SDK-based blockchain, including step-by-step instructions.
- [Set Up a Template](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/parachains/zero-to-hero/set-up-a-template.md): Learn to compile and run a local parachain node using Polkadot SDK. Launch, run, and interact with a pre-configured runtime template.
- [Convert Assets on Asset Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/system-chains/asset-hub/asset-conversion.md): A guide detailing the step-by-step process of converting assets on Asset Hub, helping users efficiently navigate asset management on the platform.
- [Asset Hub Tutorials](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/system-chains/asset-hub/index.md): Learn how to manage assets on Asset Hub, including registering local and foreign assets and converting between different asset types.
- [Register a Foreign Asset on Asset Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/system-chains/asset-hub/register-foreign-asset.md): An in-depth guide to registering a foreign asset on the Asset Hub parachain, providing clear, step-by-step instructions.
- [Register a Local Asset](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/system-chains/asset-hub/register-local-asset.md): Comprehensive guide to registering a local asset on the Asset Hub system parachain, including step-by-step instructions.
- [System Chains Tutorials](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/system-chains/index.md): Explore step-by-step tutorials on how to integrate with system parachains, such as the Asset Hub chain, within the Polkadot ecosystem.
- [Fork a Chain with Chopsticks](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/testing/fork-live-chains.md): Learn how to fork live Polkadot SDK chains with Chopsticks. Configure forks, replay blocks, test XCM, and interact programmatically or via UI.
- [Blockchain Testing Tutorials](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/testing/index.md): Follow hands-on tutorials to set up, test, and validate the functionality of Polkadot-SDK blockchains, using tools and methods that streamline testing.
- [Spawn a Basic Chain with Zombienet](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/polkadot-sdk/testing/spawn-basic-chain.md): Learn to spawn, connect to and monitor a basic blockchain network with Zombienet, using customizable configurations for streamlined development and debugging.
- [Deploying Uniswap V2 on Polkadot](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/smart-contracts/demo-aplications/deploying-uniswap-v2.md): Learn how to deploy and test Uniswap V2 on Polkadot Hub using Hardhat, bringing AMM-based token swaps to the Polkadot ecosystem.
- [Demo Applications](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/smart-contracts/demo-aplications/index.md): Explore working demo applications that can be deployed to Polkadot Hub, showcasing common use cases and integration patterns.
- [Deploy an ERC-20 to Polkadot Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/smart-contracts/deploy-erc20.md): Deploy an ERC-20 token on Polkadot Hub using PolkaVM. This guide covers contract creation, compilation, deployment, and interaction via Polkadot Remix IDE.
- [Deploy an NFT to Polkadot Hub](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/smart-contracts/deploy-nft.md): Deploy an NFT on Polkadot Hub using PolkaVM and OpenZeppelin. Learn how to compile, deploy, and interact with your contract using Polkadot Remix IDE.
- [Smart Contracts](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/smart-contracts/index.md): Learn how to create, deploy, and manage smart contracts in the Polkadot ecosystem with detailed, step-by-step tutorials.
- [Create a Smart Contract](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/smart-contracts/launch-your-first-project/create-contracts.md): Learn how to write a basic smart contract using just a text editor. This guide covers creating and preparing a contract for deployment on Polkadot Hub.
- [Create a dApp With Ethers.js](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/smart-contracts/launch-your-first-project/create-dapp-ethers-js.md): Learn how to build a decentralized application on Polkadot Hub using Ethers.js and Next.js by creating a simple dApp that interacts with a smart contract.
- [Create a dApp With Viem](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/smart-contracts/launch-your-first-project/create-dapp-viem.md): Learn how to build a decentralized application on Polkadot Hub using Viem and Next.js by creating a simple dApp that interacts with a smart contract.
- [Launch Your First Project](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/smart-contracts/launch-your-first-project/index.md): Follow a step-by-step guide to creating, deploying, and managing your first smart contract project on Polkadot, from coding to execution.
- [Test and Deploy with Hardhat](https://raw.githubusercontent.com/polkadot-developers/polkadot-docs/refs/heads/master/tutorials/smart-contracts/launch-your-first-project/test-and-deploy-with-hardhat.md): Learn how to set up a Hardhat development environment, write comprehensive tests for Solidity smart contracts, and deploy to local and Polkadot Hub networks.